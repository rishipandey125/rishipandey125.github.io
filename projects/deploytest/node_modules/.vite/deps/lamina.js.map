{
  "version": 3,
  "sources": ["../../glsl-tokenizer/lib/literals.js", "../../glsl-tokenizer/lib/operators.js", "../../glsl-tokenizer/lib/builtins.js", "../../glsl-tokenizer/lib/literals-300es.js", "../../glsl-tokenizer/lib/builtins-300es.js", "../../glsl-tokenizer/index.js", "../../glsl-tokenizer/string.js", "../../glsl-token-depth/index.js", "../../glsl-token-scope/index.js", "../../glsl-token-properties/index.js", "../../glsl-token-assignments/assignments.js", "../../glsl-token-assignments/ignored.js", "../../glsl-token-assignments/index.js", "../../glsl-token-descope/index.js", "../../glsl-token-string/index.js", "../../glsl-token-functions/index.js", "../../object-hash/dist/object_hash.js", "../../lamina/index.js", "../../three-custom-shader-material/vanilla.js"],
  "sourcesContent": ["module.exports = [\r\n  // current\r\n    'precision'\r\n  , 'highp'\r\n  , 'mediump'\r\n  , 'lowp'\r\n  , 'attribute'\r\n  , 'const'\r\n  , 'uniform'\r\n  , 'varying'\r\n  , 'break'\r\n  , 'continue'\r\n  , 'do'\r\n  , 'for'\r\n  , 'while'\r\n  , 'if'\r\n  , 'else'\r\n  , 'in'\r\n  , 'out'\r\n  , 'inout'\r\n  , 'float'\r\n  , 'int'\r\n  , 'uint'\r\n  , 'void'\r\n  , 'bool'\r\n  , 'true'\r\n  , 'false'\r\n  , 'discard'\r\n  , 'return'\r\n  , 'mat2'\r\n  , 'mat3'\r\n  , 'mat4'\r\n  , 'vec2'\r\n  , 'vec3'\r\n  , 'vec4'\r\n  , 'ivec2'\r\n  , 'ivec3'\r\n  , 'ivec4'\r\n  , 'bvec2'\r\n  , 'bvec3'\r\n  , 'bvec4'\r\n  , 'sampler1D'\r\n  , 'sampler2D'\r\n  , 'sampler3D'\r\n  , 'samplerCube'\r\n  , 'sampler1DShadow'\r\n  , 'sampler2DShadow'\r\n  , 'struct'\r\n\r\n  // future\r\n  , 'asm'\r\n  , 'class'\r\n  , 'union'\r\n  , 'enum'\r\n  , 'typedef'\r\n  , 'template'\r\n  , 'this'\r\n  , 'packed'\r\n  , 'goto'\r\n  , 'switch'\r\n  , 'default'\r\n  , 'inline'\r\n  , 'noinline'\r\n  , 'volatile'\r\n  , 'public'\r\n  , 'static'\r\n  , 'extern'\r\n  , 'external'\r\n  , 'interface'\r\n  , 'long'\r\n  , 'short'\r\n  , 'double'\r\n  , 'half'\r\n  , 'fixed'\r\n  , 'unsigned'\r\n  , 'input'\r\n  , 'output'\r\n  , 'hvec2'\r\n  , 'hvec3'\r\n  , 'hvec4'\r\n  , 'dvec2'\r\n  , 'dvec3'\r\n  , 'dvec4'\r\n  , 'fvec2'\r\n  , 'fvec3'\r\n  , 'fvec4'\r\n  , 'sampler2DRect'\r\n  , 'sampler3DRect'\r\n  , 'sampler2DRectShadow'\r\n  , 'sizeof'\r\n  , 'cast'\r\n  , 'namespace'\r\n  , 'using'\r\n]\r\n", "module.exports = [\r\n    '<<='\r\n  , '>>='\r\n  , '++'\r\n  , '--'\r\n  , '<<'\r\n  , '>>'\r\n  , '<='\r\n  , '>='\r\n  , '=='\r\n  , '!='\r\n  , '&&'\r\n  , '||'\r\n  , '+='\r\n  , '-='\r\n  , '*='\r\n  , '/='\r\n  , '%='\r\n  , '&='\r\n  , '^^'\r\n  , '^='\r\n  , '|='\r\n  , '('\r\n  , ')'\r\n  , '['\r\n  , ']'\r\n  , '.'\r\n  , '!'\r\n  , '~'\r\n  , '*'\r\n  , '/'\r\n  , '%'\r\n  , '+'\r\n  , '-'\r\n  , '<'\r\n  , '>'\r\n  , '&'\r\n  , '^'\r\n  , '|'\r\n  , '?'\r\n  , ':'\r\n  , '='\r\n  , ','\r\n  , ';'\r\n  , '{'\r\n  , '}'\r\n]\r\n", "module.exports = [\r\n  // Keep this list sorted\r\n  'abs'\r\n  , 'acos'\r\n  , 'all'\r\n  , 'any'\r\n  , 'asin'\r\n  , 'atan'\r\n  , 'ceil'\r\n  , 'clamp'\r\n  , 'cos'\r\n  , 'cross'\r\n  , 'dFdx'\r\n  , 'dFdy'\r\n  , 'degrees'\r\n  , 'distance'\r\n  , 'dot'\r\n  , 'equal'\r\n  , 'exp'\r\n  , 'exp2'\r\n  , 'faceforward'\r\n  , 'floor'\r\n  , 'fract'\r\n  , 'gl_BackColor'\r\n  , 'gl_BackLightModelProduct'\r\n  , 'gl_BackLightProduct'\r\n  , 'gl_BackMaterial'\r\n  , 'gl_BackSecondaryColor'\r\n  , 'gl_ClipPlane'\r\n  , 'gl_ClipVertex'\r\n  , 'gl_Color'\r\n  , 'gl_DepthRange'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_EyePlaneQ'\r\n  , 'gl_EyePlaneR'\r\n  , 'gl_EyePlaneS'\r\n  , 'gl_EyePlaneT'\r\n  , 'gl_Fog'\r\n  , 'gl_FogCoord'\r\n  , 'gl_FogFragCoord'\r\n  , 'gl_FogParameters'\r\n  , 'gl_FragColor'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FragData'\r\n  , 'gl_FragDepth'\r\n  , 'gl_FragDepthEXT'\r\n  , 'gl_FrontColor'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FrontLightModelProduct'\r\n  , 'gl_FrontLightProduct'\r\n  , 'gl_FrontMaterial'\r\n  , 'gl_FrontSecondaryColor'\r\n  , 'gl_LightModel'\r\n  , 'gl_LightModelParameters'\r\n  , 'gl_LightModelProducts'\r\n  , 'gl_LightProducts'\r\n  , 'gl_LightSource'\r\n  , 'gl_LightSourceParameters'\r\n  , 'gl_MaterialParameters'\r\n  , 'gl_MaxClipPlanes'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MaxFragmentUniformComponents'\r\n  , 'gl_MaxLights'\r\n  , 'gl_MaxTextureCoords'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxTextureUnits'\r\n  , 'gl_MaxVaryingFloats'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxVertexUniformComponents'\r\n  , 'gl_ModelViewMatrix'\r\n  , 'gl_ModelViewMatrixInverse'\r\n  , 'gl_ModelViewMatrixInverseTranspose'\r\n  , 'gl_ModelViewMatrixTranspose'\r\n  , 'gl_ModelViewProjectionMatrix'\r\n  , 'gl_ModelViewProjectionMatrixInverse'\r\n  , 'gl_ModelViewProjectionMatrixInverseTranspose'\r\n  , 'gl_ModelViewProjectionMatrixTranspose'\r\n  , 'gl_MultiTexCoord0'\r\n  , 'gl_MultiTexCoord1'\r\n  , 'gl_MultiTexCoord2'\r\n  , 'gl_MultiTexCoord3'\r\n  , 'gl_MultiTexCoord4'\r\n  , 'gl_MultiTexCoord5'\r\n  , 'gl_MultiTexCoord6'\r\n  , 'gl_MultiTexCoord7'\r\n  , 'gl_Normal'\r\n  , 'gl_NormalMatrix'\r\n  , 'gl_NormalScale'\r\n  , 'gl_ObjectPlaneQ'\r\n  , 'gl_ObjectPlaneR'\r\n  , 'gl_ObjectPlaneS'\r\n  , 'gl_ObjectPlaneT'\r\n  , 'gl_Point'\r\n  , 'gl_PointCoord'\r\n  , 'gl_PointParameters'\r\n  , 'gl_PointSize'\r\n  , 'gl_Position'\r\n  , 'gl_ProjectionMatrix'\r\n  , 'gl_ProjectionMatrixInverse'\r\n  , 'gl_ProjectionMatrixInverseTranspose'\r\n  , 'gl_ProjectionMatrixTranspose'\r\n  , 'gl_SecondaryColor'\r\n  , 'gl_TexCoord'\r\n  , 'gl_TextureEnvColor'\r\n  , 'gl_TextureMatrix'\r\n  , 'gl_TextureMatrixInverse'\r\n  , 'gl_TextureMatrixInverseTranspose'\r\n  , 'gl_TextureMatrixTranspose'\r\n  , 'gl_Vertex'\r\n  , 'greaterThan'\r\n  , 'greaterThanEqual'\r\n  , 'inversesqrt'\r\n  , 'length'\r\n  , 'lessThan'\r\n  , 'lessThanEqual'\r\n  , 'log'\r\n  , 'log2'\r\n  , 'matrixCompMult'\r\n  , 'max'\r\n  , 'min'\r\n  , 'mix'\r\n  , 'mod'\r\n  , 'normalize'\r\n  , 'not'\r\n  , 'notEqual'\r\n  , 'pow'\r\n  , 'radians'\r\n  , 'reflect'\r\n  , 'refract'\r\n  , 'sign'\r\n  , 'sin'\r\n  , 'smoothstep'\r\n  , 'sqrt'\r\n  , 'step'\r\n  , 'tan'\r\n  , 'texture2D'\r\n  , 'texture2DLod'\r\n  , 'texture2DProj'\r\n  , 'texture2DProjLod'\r\n  , 'textureCube'\r\n  , 'textureCubeLod'\r\n  , 'texture2DLodEXT'\r\n  , 'texture2DProjLodEXT'\r\n  , 'textureCubeLodEXT'\r\n  , 'texture2DGradEXT'\r\n  , 'texture2DProjGradEXT'\r\n  , 'textureCubeGradEXT'\r\n]\r\n", "var v100 = require('./literals')\r\n\r\nmodule.exports = v100.slice().concat([\r\n   'layout'\r\n  , 'centroid'\r\n  , 'smooth'\r\n  , 'case'\r\n  , 'mat2x2'\r\n  , 'mat2x3'\r\n  , 'mat2x4'\r\n  , 'mat3x2'\r\n  , 'mat3x3'\r\n  , 'mat3x4'\r\n  , 'mat4x2'\r\n  , 'mat4x3'\r\n  , 'mat4x4'\r\n  , 'uvec2'\r\n  , 'uvec3'\r\n  , 'uvec4'\r\n  , 'samplerCubeShadow'\r\n  , 'sampler2DArray'\r\n  , 'sampler2DArrayShadow'\r\n  , 'isampler2D'\r\n  , 'isampler3D'\r\n  , 'isamplerCube'\r\n  , 'isampler2DArray'\r\n  , 'usampler2D'\r\n  , 'usampler3D'\r\n  , 'usamplerCube'\r\n  , 'usampler2DArray'\r\n  , 'coherent'\r\n  , 'restrict'\r\n  , 'readonly'\r\n  , 'writeonly'\r\n  , 'resource'\r\n  , 'atomic_uint'\r\n  , 'noperspective'\r\n  , 'patch'\r\n  , 'sample'\r\n  , 'subroutine'\r\n  , 'common'\r\n  , 'partition'\r\n  , 'active'\r\n  , 'filter'\r\n  , 'image1D'\r\n  , 'image2D'\r\n  , 'image3D'\r\n  , 'imageCube'\r\n  , 'iimage1D'\r\n  , 'iimage2D'\r\n  , 'iimage3D'\r\n  , 'iimageCube'\r\n  , 'uimage1D'\r\n  , 'uimage2D'\r\n  , 'uimage3D'\r\n  , 'uimageCube'\r\n  , 'image1DArray'\r\n  , 'image2DArray'\r\n  , 'iimage1DArray'\r\n  , 'iimage2DArray'\r\n  , 'uimage1DArray'\r\n  , 'uimage2DArray'\r\n  , 'image1DShadow'\r\n  , 'image2DShadow'\r\n  , 'image1DArrayShadow'\r\n  , 'image2DArrayShadow'\r\n  , 'imageBuffer'\r\n  , 'iimageBuffer'\r\n  , 'uimageBuffer'\r\n  , 'sampler1DArray'\r\n  , 'sampler1DArrayShadow'\r\n  , 'isampler1D'\r\n  , 'isampler1DArray'\r\n  , 'usampler1D'\r\n  , 'usampler1DArray'\r\n  , 'isampler2DRect'\r\n  , 'usampler2DRect'\r\n  , 'samplerBuffer'\r\n  , 'isamplerBuffer'\r\n  , 'usamplerBuffer'\r\n  , 'sampler2DMS'\r\n  , 'isampler2DMS'\r\n  , 'usampler2DMS'\r\n  , 'sampler2DMSArray'\r\n  , 'isampler2DMSArray'\r\n  , 'usampler2DMSArray'\r\n])\r\n", "// 300es builtins/reserved words that were previously valid in v100\r\nvar v100 = require('./builtins')\r\n\r\n// The texture2D|Cube functions have been removed\r\n// And the gl_ features are updated\r\nv100 = v100.slice().filter(function (b) {\r\n  return !/^(gl\\_|texture)/.test(b)\r\n})\r\n\r\nmodule.exports = v100.concat([\r\n  // the updated gl_ constants\r\n    'gl_VertexID'\r\n  , 'gl_InstanceID'\r\n  , 'gl_Position'\r\n  , 'gl_PointSize'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FragDepth'\r\n  , 'gl_PointCoord'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexUniformVectors'\r\n  , 'gl_MaxVertexOutputVectors'\r\n  , 'gl_MaxFragmentInputVectors'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxFragmentUniformVectors'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MinProgramTexelOffset'\r\n  , 'gl_MaxProgramTexelOffset'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_DepthRange'\r\n\r\n  // other builtins\r\n  , 'trunc'\r\n  , 'round'\r\n  , 'roundEven'\r\n  , 'isnan'\r\n  , 'isinf'\r\n  , 'floatBitsToInt'\r\n  , 'floatBitsToUint'\r\n  , 'intBitsToFloat'\r\n  , 'uintBitsToFloat'\r\n  , 'packSnorm2x16'\r\n  , 'unpackSnorm2x16'\r\n  , 'packUnorm2x16'\r\n  , 'unpackUnorm2x16'\r\n  , 'packHalf2x16'\r\n  , 'unpackHalf2x16'\r\n  , 'outerProduct'\r\n  , 'transpose'\r\n  , 'determinant'\r\n  , 'inverse'\r\n  , 'texture'\r\n  , 'textureSize'\r\n  , 'textureProj'\r\n  , 'textureLod'\r\n  , 'textureOffset'\r\n  , 'texelFetch'\r\n  , 'texelFetchOffset'\r\n  , 'textureProjOffset'\r\n  , 'textureLodOffset'\r\n  , 'textureProjLod'\r\n  , 'textureProjLodOffset'\r\n  , 'textureGrad'\r\n  , 'textureGradOffset'\r\n  , 'textureProjGrad'\r\n  , 'textureProjGradOffset'\r\n])\r\n", "module.exports = tokenize\r\n\r\nvar literals100 = require('./lib/literals')\r\n  , operators = require('./lib/operators')\r\n  , builtins100 = require('./lib/builtins')\r\n  , literals300es = require('./lib/literals-300es')\r\n  , builtins300es = require('./lib/builtins-300es')\r\n\r\nvar NORMAL = 999          // <-- never emitted\r\n  , TOKEN = 9999          // <-- never emitted\r\n  , BLOCK_COMMENT = 0\r\n  , LINE_COMMENT = 1\r\n  , PREPROCESSOR = 2\r\n  , OPERATOR = 3\r\n  , INTEGER = 4\r\n  , FLOAT = 5\r\n  , IDENT = 6\r\n  , BUILTIN = 7\r\n  , KEYWORD = 8\r\n  , WHITESPACE = 9\r\n  , EOF = 10\r\n  , HEX = 11\r\n\r\nvar map = [\r\n    'block-comment'\r\n  , 'line-comment'\r\n  , 'preprocessor'\r\n  , 'operator'\r\n  , 'integer'\r\n  , 'float'\r\n  , 'ident'\r\n  , 'builtin'\r\n  , 'keyword'\r\n  , 'whitespace'\r\n  , 'eof'\r\n  , 'integer'\r\n]\r\n\r\nfunction tokenize(opt) {\r\n  var i = 0\r\n    , total = 0\r\n    , mode = NORMAL\r\n    , c\r\n    , last\r\n    , content = []\r\n    , tokens = []\r\n    , token_idx = 0\r\n    , token_offs = 0\r\n    , line = 1\r\n    , col = 0\r\n    , start = 0\r\n    , isnum = false\r\n    , isoperator = false\r\n    , input = ''\r\n    , len\r\n\r\n  opt = opt || {}\r\n  var allBuiltins = builtins100\r\n  var allLiterals = literals100\r\n  if (opt.version === '300 es') {\r\n    allBuiltins = builtins300es\r\n    allLiterals = literals300es\r\n  }\r\n\r\n  // cache by name\r\n  var builtinsDict = {}, literalsDict = {}\r\n  for (var i = 0; i < allBuiltins.length; i++) {\r\n    builtinsDict[allBuiltins[i]] = true\r\n  }\r\n  for (var i = 0; i < allLiterals.length; i++) {\r\n    literalsDict[allLiterals[i]] = true\r\n  }\r\n\r\n  return function(data) {\r\n    tokens = []\r\n    if (data !== null) return write(data)\r\n    return end()\r\n  }\r\n\r\n  function token(data) {\r\n    if (data.length) {\r\n      tokens.push({\r\n        type: map[mode]\r\n      , data: data\r\n      , position: start\r\n      , line: line\r\n      , column: col\r\n      })\r\n    }\r\n  }\r\n\r\n  function write(chunk) {\r\n    i = 0\r\n\r\n    if (chunk.toString) chunk = chunk.toString()\r\n\r\n    input += chunk.replace(/\\r\\n/g, '\\n')\r\n    len = input.length\r\n\r\n\r\n    var last\r\n\r\n    while(c = input[i], i < len) {\r\n      last = i\r\n\r\n      switch(mode) {\r\n        case BLOCK_COMMENT: i = block_comment(); break\r\n        case LINE_COMMENT: i = line_comment(); break\r\n        case PREPROCESSOR: i = preprocessor(); break\r\n        case OPERATOR: i = operator(); break\r\n        case INTEGER: i = integer(); break\r\n        case HEX: i = hex(); break\r\n        case FLOAT: i = decimal(); break\r\n        case TOKEN: i = readtoken(); break\r\n        case WHITESPACE: i = whitespace(); break\r\n        case NORMAL: i = normal(); break\r\n      }\r\n\r\n      if(last !== i) {\r\n        switch(input[last]) {\r\n          case '\\n': col = 0; ++line; break\r\n          default: ++col; break\r\n        }\r\n      }\r\n    }\r\n\r\n    total += i\r\n    input = input.slice(i)\r\n    return tokens\r\n  }\r\n\r\n  function end(chunk) {\r\n    if(content.length) {\r\n      token(content.join(''))\r\n    }\r\n\r\n    mode = EOF\r\n    token('(eof)')\r\n    return tokens\r\n  }\r\n\r\n  function normal() {\r\n    content = content.length ? [] : content\r\n\r\n    if(last === '/' && c === '*') {\r\n      start = total + i - 1\r\n      mode = BLOCK_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      start = total + i - 1\r\n      mode = LINE_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === '#') {\r\n      mode = PREPROCESSOR\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    if(/\\s/.test(c)) {\r\n      mode = WHITESPACE\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    isnum = /\\d/.test(c)\r\n    isoperator = /[^\\w_]/.test(c)\r\n\r\n    start = total + i\r\n    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN\r\n    return i\r\n  }\r\n\r\n  function whitespace() {\r\n    if(/[^\\s]/g.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function preprocessor() {\r\n    if((c === '\\r' || c === '\\n') && last !== '\\\\') {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function line_comment() {\r\n    return preprocessor()\r\n  }\r\n\r\n  function block_comment() {\r\n    if(c === '/' && last === '*') {\r\n      content.push(c)\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function operator() {\r\n    if(last === '.' && /\\d/.test(c)) {\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '*') {\r\n      mode = BLOCK_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      mode = LINE_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(c === '.' && content.length) {\r\n      while(determine_operator(content));\r\n\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(c === ';' || c === ')' || c === '(') {\r\n      if(content.length) while(determine_operator(content));\r\n      token(c)\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    var is_composite_operator = content.length === 2 && c !== '='\r\n    if(/[\\w_\\d\\s]/.test(c) || is_composite_operator) {\r\n      while(determine_operator(content));\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function determine_operator(buf) {\r\n    var j = 0\r\n      , idx\r\n      , res\r\n\r\n    do {\r\n      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''))\r\n      res = operators[idx]\r\n\r\n      if(idx === -1) {\r\n        if(j-- + buf.length > 0) continue\r\n        res = buf.slice(0, 1).join('')\r\n      }\r\n\r\n      token(res)\r\n\r\n      start += res.length\r\n      content = content.slice(res.length)\r\n      return content.length\r\n    } while(1)\r\n  }\r\n\r\n  function hex() {\r\n    if(/[^a-fA-F0-9]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function integer() {\r\n    if(c === '.') {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === 'x' && content.length === 1 && content[0] === '0') {\r\n      mode = HEX\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function decimal() {\r\n    if(c === 'f') {\r\n      content.push(c)\r\n      last = c\r\n      i += 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if ((c === '-' || c === '+') && /[eE]/.test(last)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function readtoken() {\r\n    if(/[^\\d\\w_]/.test(c)) {\r\n      var contentstr = content.join('')\r\n      if(literalsDict[contentstr]) {\r\n        mode = KEYWORD\r\n      } else if(builtinsDict[contentstr]) {\r\n        mode = BUILTIN\r\n      } else {\r\n        mode = IDENT\r\n      }\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n}\r\n", "var tokenize = require('./index')\r\n\r\nmodule.exports = tokenizeString\r\n\r\nfunction tokenizeString(str, opt) {\r\n  var generator = tokenize(opt)\r\n  var tokens = []\r\n\r\n  tokens = tokens.concat(generator(str))\r\n  tokens = tokens.concat(generator(null))\r\n\r\n  return tokens\r\n}\r\n", "module.exports = getTokenDepth\n\nfunction getTokenDepth(tokens) {\n  var loop  = false\n  var depth = 0\n\n  for (var i = 0; i < tokens.length; i++) {\n    loop = loop || (tokens[i].type === 'keyword' && (\n      tokens[i].data === 'for'\n    ))\n\n    switch (tokens[i].data) {\n      case '(': tokens[i].depth = loop ? depth++ : depth; break\n      case '{': tokens[i].depth = loop ? depth : depth++; loop = false; break\n      case '}': tokens[i].depth = --depth; break\n      default:  tokens[i].depth = depth\n    }\n  }\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var index = i + 1\n    if (token.type !== 'ident' && token.type !== 'keyword') continue\n    skipArrayArguments()\n    if (tokens[index].type !== 'ident') continue\n    skipArrayArguments()\n    index++\n    if (tokens[index].data !== '(') continue\n\n    while (tokens[index] && tokens[index].data !== ';' && tokens[index].data !== '{') {\n      tokens[index++].depth++\n    }\n    if (tokens[index] && tokens[index].data === '{') tokens[index].depth++\n  }\n\n  return tokens\n\n  function skipArrayArguments() {\n    while (tokens[index] && (\n      tokens[index].type === 'whitespace' ||\n      tokens[index].data === '[' ||\n      tokens[index].data === ']' ||\n      tokens[index].data === 'integer'\n    )) index++\n  }\n}\n", "module.exports = tokenScope\n\nfunction tokenScope(tokens) {\n  var stack  = [0]\n  var inc    = stack[0]\n  var ldepth = 0\n\n  if (!tokens || !tokens.length) return tokens\n  if (!('depth' in tokens[0])) {\n    throw new Error('glsl-token-scope: No scope depth defined on tokens! Use glsl-token-depth on these tokens first')\n  }\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var depth = token.depth\n\n    if (depth > ldepth) {\n      stack.push(++inc)\n    } else\n    if (depth < ldepth) {\n      stack.splice(-1, 1)\n    }\n\n    token.scope = stack[stack.length - 1]\n    token.stack = stack.slice()\n    ldepth = token.depth\n  }\n\n  return tokens\n}\n", "module.exports = properties\n\nfunction properties(tokens) {\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    token.property = false\n\n    if (token.type !== 'ident') continue\n\n    var j = i\n    while (tokens[--j] && tokens[j].type === 'whitespace');\n    if (!tokens[j]) continue\n    if (tokens[j].type !== 'operator') continue\n    if (tokens[j].data !== '.') continue\n\n    token.property = true\n  }\n\n  return tokens\n}\n", "module.exports = {\n    '<<=': true\n  , '>>=': true\n  , '++': true\n  , '--': true\n  , '+=': true\n  , '-=': true\n  , '*=': true\n  , '/=': true\n  , '%=': true\n  , '&=': true\n  , '^=': true\n  , '|=': true\n  , '=': true\n}\n", "module.exports = {\n    'precision': true\n  , 'highp': true\n  , 'mediump': true\n  , 'lowp': true\n  , 'attribute': true\n  , 'const': true\n  , 'uniform': true\n  , 'varying': true\n  , 'break': true\n  , 'continue': true\n  , 'do': true\n  , 'for': true\n  , 'while': true\n  , 'if': true\n  , 'else': true\n  , 'in': true\n  , 'out': true\n  , 'inout': true\n  , 'true': true\n  , 'false': true\n  , 'return': true\n}\n", "var assignments = require('./assignments')\nvar ignoredKeywords = require('./ignored')\n\nmodule.exports = assigns\n\n// Here be dragons. Apologies in advance for the hairy code!\nfunction assigns(tokens) {\n  var idx = 0\n\n  // Determine if a value has been assigned, e.g.\n  // x = 1.0;\n  // float x = 1.0;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var type  = token.type\n\n    token.assignment = false\n    token.declaration = false\n    if (type !== 'ident' && type !== 'builtin') continue\n    idx = i + 1\n\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'operator') continue\n    if (!assignments[tokens[idx].data]) continue\n    token.assignment = true\n  }\n\n  // Determine if a value is being defined, e.g.\n  // float x;\n  // float x, y, z;\n  // float x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[3][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float x[2], y = vec3(sin(1.0 + 3.0)), z[4];\n  // float x(float y, float z) {};\n  // float x(float y[2], Thing[3] z) {};\n  // Thing x[2], y = Another(sin(1.0 + 3.0)), z[4];\n  for (var i = 0; i < tokens.length; i++) {\n    var datatype = tokens[i]\n    var type     = datatype.type\n    var data     = datatype.data\n\n    datatype.declaration = false\n\n    if (type === 'keyword') {\n      if (ignoredKeywords[data]) continue\n    } else\n    if (type !== 'ident') continue\n\n    idx = i + 1\n\n    skipArrayDimensions()\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx++].declaration = true\n    skipArrayDimensions()\n\n    // Function arguments/parameters\n    if (tokens[idx].data === '(') {\n      idx++\n\n      skipWhitespace(+1)\n      while (tokens[idx] && tokens[idx].data !== ')') {\n        if (tokens[idx].type !== 'keyword' && tokens[idx].type !== 'ident') break\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].type !== 'ident') continue\n        tokens[idx++].declaration = true\n        skipWhitespace(+1)\n        skipArrayDimensions()\n        skipWhitespace(+1)\n        if (tokens[idx].data !== ',') continue\n        idx++\n        skipWhitespace(+1)\n      }\n\n      i = idx\n      continue\n    }\n\n    // Declaration Lists\n    while (tokens[idx] && tokens[idx].data !== ';') {\n      if (tokens[idx].data === ',') {\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].declaration = tokens[idx].type === 'ident') idx++\n      } else {\n        skipWhitespace(+1)\n        skipParens()\n        skipWhitespace(+1)\n        idx++\n      }\n    }\n\n    i = idx\n  }\n\n  // Handle struct declarations:\n  // struct declaration {\n  //   float x, y, z;\n  //   Other w;\n  // } declaration;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'keyword') continue\n    if (token.data !== 'struct') continue\n    idx = i + 1\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx++].data !== '{') continue\n    skipWhitespace(+1)\n\n    while (tokens[idx].type === 'ident' || tokens[idx].type === 'keyword') {\n      do {\n        idx++\n        skipWhitespace(+1)\n        tokens[idx].structMember = true\n        tokens[idx].declaration = false\n        idx++\n        skipArrayDimensions()\n      } while (tokens[idx].data === ',')\n\n      if (tokens[idx].data === ';') idx++\n      skipWhitespace()\n    }\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx].declaration = true\n    skipWhitespace(+1)\n\n    while (tokens[++idx].data === ',') {\n      skipWhitespace(+1)\n      idx++\n      skipWhitespace(+1)\n      if (tokens[idx].type === 'ident') tokens[idx].declaration = true\n      skipWhitespace(+1)\n    }\n  }\n\n  return tokens\n\n  function skipWhitespace(n) {\n    while (tokens[idx] && tokens[idx].type === 'whitespace') idx++\n  }\n\n  function skipArrayDimensions() {\n    while (tokens[idx] && (\n         tokens[idx].type === 'integer'\n      || tokens[idx].data === '['\n      || tokens[idx].data === ']'\n      || tokens[idx].type === 'whitespace'\n    )) idx++\n  }\n\n  function skipParens() {\n    if (!tokens[idx]) return\n    if (tokens[idx].data !== '(') return\n    var depth = 0\n    var a = idx\n    do {\n      if (tokens[idx].data === ';') break\n      if (tokens[idx].data === '(') depth++\n      if (tokens[idx].data === ')') depth--\n    } while(depth && tokens[++idx])\n  }\n}\n", "module.exports = glslTokenDescope\n\nfunction glslTokenDescope(tokens, rename) {\n  require('glsl-token-depth')(tokens)\n  require('glsl-token-scope')(tokens)\n  require('glsl-token-properties')(tokens)\n  require('glsl-token-assignments')(tokens)\n\n  var scope   = getScope(tokens)\n  var renamer = rename || defaultRenamer()\n  var map     = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var stack = token.stack\n    var name  = token.data\n\n    token.descoped = false\n\n    if (token.type !== 'ident') continue\n    if (token.property) continue\n    if (token.structMember) continue\n\n    var bound = false\n\n    for (var j = stack.length - 1; j >= 0; j--) {\n      var s = scope[stack[j]]\n      if (!s) continue\n      if (!s[name]) continue\n\n      bound = true\n\n      // exit if declaration not in top-level scope\n      if (j) break\n\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n\n    // Handle unbound variables, i.e. ones not defined anywhere\n    // in the shader source but still used.\n    if (!bound) {\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n  }\n\n  return tokens\n}\n\nfunction defaultRenamer() {\n  var k = 0\n\n  return function rename(name) {\n    return name + '_' + (k++).toString(36)\n  }\n}\n\nfunction getScope(tokens) {\n  var scope = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.declaration) {\n      scope[token.scope] = scope[token.scope] || {}\n      scope[token.scope][token.data] = token\n    }\n  }\n\n  return scope\n}\n", "module.exports = toString\n\nfunction toString(tokens) {\n  var output = []\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].type === 'eof') continue\n    output.push(tokens[i].data)\n  }\n\n  return output.join('')\n}\n", "module.exports = functions\n\nfunction functions (tokens) {\n  var returnType = null\n  var defnName = null\n  var braceDepth = 0\n  var braceStart = 0\n  var defnStart = 0\n  var argFinish = 0\n  var argStart = 0\n  var output = []\n  var i, j, token\n\n  // The following loop detects functions with bodies of any type,\n  // including structs. e.g.\n  // void main() {...}\n  // vec4 fn(vec3 a) {...}\n  // Ray3 fn(vec3 ro, vec3 rd) {...}\n  for (i = 0, j; i < tokens.length; i++) {\n    token = tokens[i]\n    if (token.data === '{') {\n      // If already in a function, keep track of opening braces\n      if (braceDepth && braceDepth++) continue\n\n      // Stepping backwards from the closing brace, find the end\n      // of the arguments list. There should only be whitespace on\n      // the way there.\n      j = findPrevious(i, findOp(')'), findOp())\n      if (j < 0) continue\n      argFinish = j\n\n      // Step backwards to find the beginning of the arguments list. If there's\n      // a nested paranthesis in there, then it's definitely not a function.\n      j = findPrevious(j, findOp('('), findOp(')'))\n      if (j < 0) continue\n      argStart = j\n\n      // Continue stepping backwards past any whitespace to find the\n      // function name. If the token isn't an identifier then it's not a\n      // function so we bail\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type !== 'ident') continue\n      defnName = tokens[j].data\n\n      // The next non-whitespace token should be the return type of\n      // the function\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n\n      braceDepth = 1\n      braceStart = i\n      returnType = tokens[j].data\n      defnStart = j\n\n      // There are cases when a function definition includes a\n      // precision qualifier, e.g. highp float random();\n      // So we backtrack one extra step to check if that's the\n      // case, and handle it :)\n      var k = findPrevious(j, findGlyph)\n      switch (tokens[k] && tokens[k].data) {\n        case 'lowp':\n        case 'highp':\n        case 'mediump':\n          defnStart = k\n      }\n    } else\n    if (braceDepth && token.data === '}') {\n      if (--braceDepth) continue\n\n      output.push({\n        name: defnName,\n        type: returnType,\n        body: [braceStart + 1, i],\n        args: [argStart, argFinish + 1],\n        outer: [defnStart, i + 1]\n      })\n    }\n  }\n\n  // This loop is for handling the edge case of functions defined\n  // without a body. Generally, this body is defined later in the file.\n  // void main();\n  // vec2 doModel(vec3 p);\n  // Note the replacement of curly braces with a semicolon.\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i]\n    if (token.data === ';') {\n      // Like before, we start from a semicolon and find the\n      // bounds of the argument list to find the function name\n      j = findPrevious(i, findOp(')'), findOp())\n      if (j < 0) continue\n      argFinish = j\n      j = findPrevious(j, findOp('('), findOp(')'))\n      if (j < 0) continue\n      argStart = j\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type !== 'ident') continue\n      defnName = tokens[j].data\n\n      // Try and find an ident or builtin character, which should be\n      // our return type. If so, it'll be the very first preceding glyph.\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type === 'operator') continue\n      if (tokens[j].data === 'return') continue\n      returnType = tokens[j].data\n\n      output.push({\n        name: defnName,\n        type: returnType,\n        body: false,\n        args: [argStart, argFinish + 1],\n        outer: [j, i + 1]\n      })\n    }\n  }\n\n  return output.sort(function (a, b) {\n    return a.outer[0] - b.outer[0]\n  })\n\n  function findPrevious (start, match, bail) {\n    for (var i = start - 1; i >= 0; i--) {\n      if (match(tokens[i])) return i\n      if (bail && bail(tokens[i])) return -1\n    }\n\n    return -1\n  }\n}\n\nfunction findOp (data) {\n  return function (token) {\n    return token.type === 'operator' && (!data || token.data === data)\n  }\n}\n\nfunction findGlyph (token) {\n  return token.type !== 'whitespace'\n}\n", "!function(e){var t;\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(\"undefined\"!=typeof window?t=window:\"undefined\"!=typeof global?t=global:\"undefined\"!=typeof self&&(t=self),t.objectHash=e())}(function(){return function r(o,i,u){function s(n,e){if(!i[n]){if(!o[n]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(n,!0);if(a)return a(n,!0);throw new Error(\"Cannot find module '\"+n+\"'\")}e=i[n]={exports:{}};o[n][0].call(e.exports,function(e){var t=o[n][1][e];return s(t||e)},e,e.exports,r,o,i,u)}return i[n].exports}for(var a=\"function\"==typeof require&&require,e=0;e<u.length;e++)s(u[e]);return s}({1:[function(w,b,m){!function(e,n,s,c,d,h,p,g,y){\"use strict\";var r=w(\"crypto\");function t(e,t){t=u(e,t);var n;return void 0===(n=\"passthrough\"!==t.algorithm?r.createHash(t.algorithm):new l).write&&(n.write=n.update,n.end=n.update),f(t,n).dispatch(e),n.update||n.end(\"\"),n.digest?n.digest(\"buffer\"===t.encoding?void 0:t.encoding):(e=n.read(),\"buffer\"!==t.encoding?e.toString(t.encoding):e)}(m=b.exports=t).sha1=function(e){return t(e)},m.keys=function(e){return t(e,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},m.MD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\"})},m.keysMD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var o=r.getHashes?r.getHashes().slice():[\"sha1\",\"md5\"],i=(o.push(\"passthrough\"),[\"buffer\",\"hex\",\"binary\",\"base64\"]);function u(e,t){var n={};if(n.algorithm=(t=t||{}).algorithm||\"sha1\",n.encoding=t.encoding||\"hex\",n.excludeValues=!!t.excludeValues,n.algorithm=n.algorithm.toLowerCase(),n.encoding=n.encoding.toLowerCase(),n.ignoreUnknown=!0===t.ignoreUnknown,n.respectType=!1!==t.respectType,n.respectFunctionNames=!1!==t.respectFunctionNames,n.respectFunctionProperties=!1!==t.respectFunctionProperties,n.unorderedArrays=!0===t.unorderedArrays,n.unorderedSets=!1!==t.unorderedSets,n.unorderedObjects=!1!==t.unorderedObjects,n.replacer=t.replacer||void 0,n.excludeKeys=t.excludeKeys||void 0,void 0===e)throw new Error(\"Object argument required.\");for(var r=0;r<o.length;++r)o[r].toLowerCase()===n.algorithm.toLowerCase()&&(n.algorithm=o[r]);if(-1===o.indexOf(n.algorithm))throw new Error('Algorithm \"'+n.algorithm+'\"  not supported. supported values: '+o.join(\", \"));if(-1===i.indexOf(n.encoding)&&\"passthrough\"!==n.algorithm)throw new Error('Encoding \"'+n.encoding+'\"  not supported. supported values: '+i.join(\", \"));return n}function a(e){if(\"function\"==typeof e)return null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(e))}function f(o,t,i){i=i||[];function u(e){return t.update?t.update(e,\"utf8\"):t.write(e,\"utf8\")}return{dispatch:function(e){return this[\"_\"+(null===(e=o.replacer?o.replacer(e):e)?\"null\":typeof e)](e)},_object:function(t){var n,e=Object.prototype.toString.call(t),r=/\\[object (.*)\\]/i.exec(e);r=(r=r?r[1]:\"unknown:[\"+e+\"]\").toLowerCase();if(0<=(e=i.indexOf(t)))return this.dispatch(\"[CIRCULAR:\"+e+\"]\");if(i.push(t),void 0!==s&&s.isBuffer&&s.isBuffer(t))return u(\"buffer:\"),u(t);if(\"object\"===r||\"function\"===r||\"asyncfunction\"===r)return e=Object.keys(t),o.unorderedObjects&&(e=e.sort()),!1===o.respectType||a(t)||e.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),o.excludeKeys&&(e=e.filter(function(e){return!o.excludeKeys(e)})),u(\"object:\"+e.length+\":\"),n=this,e.forEach(function(e){n.dispatch(e),u(\":\"),o.excludeValues||n.dispatch(t[e]),u(\",\")});if(!this[\"_\"+r]){if(o.ignoreUnknown)return u(\"[\"+r+\"]\");throw new Error('Unknown object type \"'+r+'\"')}this[\"_\"+r](t)},_array:function(e,t){t=void 0!==t?t:!1!==o.unorderedArrays;var n=this;if(u(\"array:\"+e.length+\":\"),!t||e.length<=1)return e.forEach(function(e){return n.dispatch(e)});var r=[],t=e.map(function(e){var t=new l,n=i.slice();return f(o,t,n).dispatch(e),r=r.concat(n.slice(i.length)),t.read().toString()});return i=i.concat(r),t.sort(),this._array(t,!1)},_date:function(e){return u(\"date:\"+e.toJSON())},_symbol:function(e){return u(\"symbol:\"+e.toString())},_error:function(e){return u(\"error:\"+e.toString())},_boolean:function(e){return u(\"bool:\"+e.toString())},_string:function(e){u(\"string:\"+e.length+\":\"),u(e.toString())},_function:function(e){u(\"fn:\"),a(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==o.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),o.respectFunctionProperties&&this._object(e)},_number:function(e){return u(\"number:\"+e.toString())},_xml:function(e){return u(\"xml:\"+e.toString())},_null:function(){return u(\"Null\")},_undefined:function(){return u(\"Undefined\")},_regexp:function(e){return u(\"regex:\"+e.toString())},_uint8array:function(e){return u(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint8clampedarray:function(e){return u(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(e))},_int8array:function(e){return u(\"int8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint16array:function(e){return u(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(e))},_int16array:function(e){return u(\"int16array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint32array:function(e){return u(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(e))},_int32array:function(e){return u(\"int32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float32array:function(e){return u(\"float32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float64array:function(e){return u(\"float64array:\"),this.dispatch(Array.prototype.slice.call(e))},_arraybuffer:function(e){return u(\"arraybuffer:\"),this.dispatch(new Uint8Array(e))},_url:function(e){return u(\"url:\"+e.toString())},_map:function(e){u(\"map:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_set:function(e){u(\"set:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_file:function(e){return u(\"file:\"),this.dispatch([e.name,e.size,e.type,e.lastModfied])},_blob:function(){if(o.ignoreUnknown)return u(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return u(\"domwindow\")},_bigint:function(e){return u(\"bigint:\"+e.toString())},_process:function(){return u(\"process\")},_timer:function(){return u(\"timer\")},_pipe:function(){return u(\"pipe\")},_tcp:function(){return u(\"tcp\")},_udp:function(){return u(\"udp\")},_tty:function(){return u(\"tty\")},_statwatcher:function(){return u(\"statwatcher\")},_securecontext:function(){return u(\"securecontext\")},_connection:function(){return u(\"connection\")},_zlib:function(){return u(\"zlib\")},_context:function(){return u(\"context\")},_nodescript:function(){return u(\"nodescript\")},_httpparser:function(){return u(\"httpparser\")},_dataview:function(){return u(\"dataview\")},_signal:function(){return u(\"signal\")},_fsevent:function(){return u(\"fsevent\")},_tlswrap:function(){return u(\"tlswrap\")}}}function l(){return{buf:\"\",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}m.writeToStream=function(e,t,n){return void 0===n&&(n=t,t={}),f(t=u(e,t),n).dispatch(e)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_9a5aa49d.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){!function(e){\"use strict\";var a=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,t=\"+\".charCodeAt(0),n=\"/\".charCodeAt(0),r=\"0\".charCodeAt(0),o=\"a\".charCodeAt(0),i=\"A\".charCodeAt(0),u=\"-\".charCodeAt(0),s=\"_\".charCodeAt(0);function f(e){e=e.charCodeAt(0);return e===t||e===u?62:e===n||e===s?63:e<r?-1:e<r+10?e-r+26+26:e<i+26?e-i:e<o+26?e-o+26:void 0}e.toByteArray=function(e){var t,n;if(0<e.length%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.length,r=\"=\"===e.charAt(r-2)?2:\"=\"===e.charAt(r-1)?1:0,o=new a(3*e.length/4-r),i=0<r?e.length-4:e.length,u=0;function s(e){o[u++]=e}for(t=0;t<i;t+=4,0)s((16711680&(n=f(e.charAt(t))<<18|f(e.charAt(t+1))<<12|f(e.charAt(t+2))<<6|f(e.charAt(t+3))))>>16),s((65280&n)>>8),s(255&n);return 2==r?s(255&(n=f(e.charAt(t))<<2|f(e.charAt(t+1))>>4)):1==r&&(s((n=f(e.charAt(t))<<10|f(e.charAt(t+1))<<4|f(e.charAt(t+2))>>2)>>8&255),s(255&n)),o},e.fromByteArray=function(e){var t,n,r,o,i=e.length%3,u=\"\";function s(e){return\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(e)}for(t=0,r=e.length-i;t<r;t+=3)n=(e[t]<<16)+(e[t+1]<<8)+e[t+2],u+=s((o=n)>>18&63)+s(o>>12&63)+s(o>>6&63)+s(63&o);switch(i){case 1:u=(u+=s((n=e[e.length-1])>>2))+s(n<<4&63)+\"==\";break;case 2:u=(u=(u+=s((n=(e[e.length-2]<<8)+e[e.length-1])>>10))+s(n>>4&63))+s(n<<2&63)+\"=\"}return u}}(void 0===f?this.base64js={}:f)}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:11}],3:[function(O,e,H){!function(e,n,f,r,h,p,g,y,w){var a=O(\"base64-js\"),i=O(\"ieee754\");function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);var r,o,i,u,s=typeof e;if(\"base64\"===t&&\"string\"==s)for(e=(u=e).trim?u.trim():u.replace(/^\\s+|\\s+$/g,\"\");e.length%4!=0;)e+=\"=\";if(\"number\"==s)r=j(e);else if(\"string\"==s)r=f.byteLength(e,t);else{if(\"object\"!=s)throw new Error(\"First argument needs to be a number, array or string.\");r=j(e.length)}if(f._useTypedArrays?o=f._augment(new Uint8Array(r)):((o=this).length=r,o._isBuffer=!0),f._useTypedArrays&&\"number\"==typeof e.byteLength)o._set(e);else if(C(u=e)||f.isBuffer(u)||u&&\"object\"==typeof u&&\"number\"==typeof u.length)for(i=0;i<r;i++)f.isBuffer(e)?o[i]=e.readUInt8(i):o[i]=e[i];else if(\"string\"==s)o.write(e,0,t);else if(\"number\"==s&&!f._useTypedArrays&&!n)for(i=0;i<r;i++)o[i]=0;return o}function b(e,t,n,r){return f._charsWritten=c(function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function m(e,t,n,r){return f._charsWritten=c(function(e){for(var t,n,r=[],o=0;o<e.length;o++)n=e.charCodeAt(o),t=n>>8,n=n%256,r.push(n),r.push(t);return r}(t),e,n,r)}function v(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var o=t;o<n;o++)r+=String.fromCharCode(e[o]);return r}function o(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(o=e[t],t+1<r&&(o|=e[t+1]<<8)):(o=e[t]<<8,t+1<r&&(o|=e[t+1])),o}function u(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(t+2<r&&(o=e[t+2]<<16),t+1<r&&(o|=e[t+1]<<8),o|=e[t],t+3<r&&(o+=e[t+3]<<24>>>0)):(t+1<r&&(o=e[t+1]<<16),t+2<r&&(o|=e[t+2]<<8),t+3<r&&(o|=e[t+3]),o+=e[t]<<24>>>0),o}function _(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=o(e,t,n,!0),32768&r?-1*(65535-r+1):r}function E(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=u(e,t,n,!0),2147483648&r?-1*(4294967295-r+1):r}function I(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,23,4)}function A(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+7<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,52,8)}function s(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"trying to write beyond buffer length\"),Y(t,65535));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,2);i<u;i++)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function l(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"trying to write beyond buffer length\"),Y(t,4294967295));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,4);i<u;i++)e[n+i]=t>>>8*(r?i:3-i)&255}function B(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"Trying to write beyond buffer length\"),F(t,32767,-32768)),e.length<=n||s(e,0<=t?t:65535+t+1,n,r,o)}function L(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),F(t,2147483647,-2147483648)),e.length<=n||l(e,0<=t?t:4294967295+t+1,n,r,o)}function U(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),D(t,34028234663852886e22,-34028234663852886e22)),e.length<=n||i.write(e,t,n,r,23,4)}function x(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+7<e.length,\"Trying to write beyond buffer length\"),D(t,17976931348623157e292,-17976931348623157e292)),e.length<=n||i.write(e,t,n,r,52,8)}H.Buffer=f,H.SlowBuffer=f,H.INSPECT_MAX_BYTES=50,f.poolSize=8192,f._useTypedArrays=function(){try{var e=new ArrayBuffer(0),t=new Uint8Array(e);return t.foo=function(){return 42},42===t.foo()&&\"function\"==typeof t.subarray}catch(e){return!1}}(),f.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},f.isBuffer=function(e){return!(null==e||!e._isBuffer)},f.byteLength=function(e,t){var n;switch(e+=\"\",t||\"utf8\"){case\"hex\":n=e.length/2;break;case\"utf8\":case\"utf-8\":n=T(e).length;break;case\"ascii\":case\"binary\":case\"raw\":n=e.length;break;case\"base64\":n=M(e).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*e.length;break;default:throw new Error(\"Unknown encoding\")}return n},f.concat=function(e,t){if(d(C(e),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===e.length)return new f(0);if(1===e.length)return e[0];if(\"number\"!=typeof t)for(o=t=0;o<e.length;o++)t+=e[o].length;for(var n=new f(t),r=0,o=0;o<e.length;o++){var i=e[o];i.copy(n,r),r+=i.length}return n},f.prototype.write=function(e,t,n,r){isFinite(t)?isFinite(n)||(r=n,n=void 0):(a=r,r=t,t=n,n=a),t=Number(t)||0;var o,i,u,s,a=this.length-t;switch((!n||a<(n=Number(n)))&&(n=a),r=String(r||\"utf8\").toLowerCase()){case\"hex\":o=function(e,t,n,r){n=Number(n)||0;var o=e.length-n;(!r||o<(r=Number(r)))&&(r=o),d((o=t.length)%2==0,\"Invalid hex string\"),o/2<r&&(r=o/2);for(var i=0;i<r;i++){var u=parseInt(t.substr(2*i,2),16);d(!isNaN(u),\"Invalid hex string\"),e[n+i]=u}return f._charsWritten=2*i,i}(this,e,t,n);break;case\"utf8\":case\"utf-8\":i=this,u=t,s=n,o=f._charsWritten=c(T(e),i,u,s);break;case\"ascii\":case\"binary\":o=b(this,e,t,n);break;case\"base64\":i=this,u=t,s=n,o=f._charsWritten=c(M(e),i,u,s);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":o=m(this,e,t,n);break;default:throw new Error(\"Unknown encoding\")}return o},f.prototype.toString=function(e,t,n){var r,o,i,u,s=this;if(e=String(e||\"utf8\").toLowerCase(),t=Number(t)||0,(n=void 0!==n?Number(n):s.length)===t)return\"\";switch(e){case\"hex\":r=function(e,t,n){var r=e.length;(!t||t<0)&&(t=0);(!n||n<0||r<n)&&(n=r);for(var o=\"\",i=t;i<n;i++)o+=k(e[i]);return o}(s,t,n);break;case\"utf8\":case\"utf-8\":r=function(e,t,n){var r=\"\",o=\"\";n=Math.min(e.length,n);for(var i=t;i<n;i++)e[i]<=127?(r+=N(o)+String.fromCharCode(e[i]),o=\"\"):o+=\"%\"+e[i].toString(16);return r+N(o)}(s,t,n);break;case\"ascii\":case\"binary\":r=v(s,t,n);break;case\"base64\":o=s,u=n,r=0===(i=t)&&u===o.length?a.fromByteArray(o):a.fromByteArray(o.slice(i,u));break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":r=function(e,t,n){for(var r=e.slice(t,n),o=\"\",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}(s,t,n);break;default:throw new Error(\"Unknown encoding\")}return r},f.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},f.prototype.copy=function(e,t,n,r){if(t=t||0,(r=r||0===r?r:this.length)!==(n=n||0)&&0!==e.length&&0!==this.length){d(n<=r,\"sourceEnd < sourceStart\"),d(0<=t&&t<e.length,\"targetStart out of bounds\"),d(0<=n&&n<this.length,\"sourceStart out of bounds\"),d(0<=r&&r<=this.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length);var o=(r=e.length-t<r-n?e.length-t+n:r)-n;if(o<100||!f._useTypedArrays)for(var i=0;i<o;i++)e[i+t]=this[i+n];else e._set(this.subarray(n,n+o),t)}},f.prototype.slice=function(e,t){var n=this.length;if(e=S(e,n,0),t=S(t,n,n),f._useTypedArrays)return f._augment(this.subarray(e,t));for(var r=t-e,o=new f(r,void 0,!0),i=0;i<r;i++)o[i]=this[i+e];return o},f.prototype.get=function(e){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(e)},f.prototype.set=function(e,t){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(e,t)},f.prototype.readUInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return this[e]},f.prototype.readUInt16LE=function(e,t){return o(this,e,!0,t)},f.prototype.readUInt16BE=function(e,t){return o(this,e,!1,t)},f.prototype.readUInt32LE=function(e,t){return u(this,e,!0,t)},f.prototype.readUInt32BE=function(e,t){return u(this,e,!1,t)},f.prototype.readInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return 128&this[e]?-1*(255-this[e]+1):this[e]},f.prototype.readInt16LE=function(e,t){return _(this,e,!0,t)},f.prototype.readInt16BE=function(e,t){return _(this,e,!1,t)},f.prototype.readInt32LE=function(e,t){return E(this,e,!0,t)},f.prototype.readInt32BE=function(e,t){return E(this,e,!1,t)},f.prototype.readFloatLE=function(e,t){return I(this,e,!0,t)},f.prototype.readFloatBE=function(e,t){return I(this,e,!1,t)},f.prototype.readDoubleLE=function(e,t){return A(this,e,!0,t)},f.prototype.readDoubleBE=function(e,t){return A(this,e,!1,t)},f.prototype.writeUInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"trying to write beyond buffer length\"),Y(e,255)),t>=this.length||(this[t]=e)},f.prototype.writeUInt16LE=function(e,t,n){s(this,e,t,!0,n)},f.prototype.writeUInt16BE=function(e,t,n){s(this,e,t,!1,n)},f.prototype.writeUInt32LE=function(e,t,n){l(this,e,t,!0,n)},f.prototype.writeUInt32BE=function(e,t,n){l(this,e,t,!1,n)},f.prototype.writeInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"Trying to write beyond buffer length\"),F(e,127,-128)),t>=this.length||(0<=e?this.writeUInt8(e,t,n):this.writeUInt8(255+e+1,t,n))},f.prototype.writeInt16LE=function(e,t,n){B(this,e,t,!0,n)},f.prototype.writeInt16BE=function(e,t,n){B(this,e,t,!1,n)},f.prototype.writeInt32LE=function(e,t,n){L(this,e,t,!0,n)},f.prototype.writeInt32BE=function(e,t,n){L(this,e,t,!1,n)},f.prototype.writeFloatLE=function(e,t,n){U(this,e,t,!0,n)},f.prototype.writeFloatBE=function(e,t,n){U(this,e,t,!1,n)},f.prototype.writeDoubleLE=function(e,t,n){x(this,e,t,!0,n)},f.prototype.writeDoubleBE=function(e,t,n){x(this,e,t,!1,n)},f.prototype.fill=function(e,t,n){if(t=t||0,n=n||this.length,d(\"number\"==typeof(e=\"string\"==typeof(e=e||0)?e.charCodeAt(0):e)&&!isNaN(e),\"value is not a number\"),d(t<=n,\"end < start\"),n!==t&&0!==this.length){d(0<=t&&t<this.length,\"start out of bounds\"),d(0<=n&&n<=this.length,\"end out of bounds\");for(var r=t;r<n;r++)this[r]=e}},f.prototype.inspect=function(){for(var e=[],t=this.length,n=0;n<t;n++)if(e[n]=k(this[n]),n===H.INSPECT_MAX_BYTES){e[n+1]=\"...\";break}return\"<Buffer \"+e.join(\" \")+\">\"},f.prototype.toArrayBuffer=function(){if(\"undefined\"==typeof Uint8Array)throw new Error(\"Buffer.toArrayBuffer not supported in this browser\");if(f._useTypedArrays)return new f(this).buffer;for(var e=new Uint8Array(this.length),t=0,n=e.length;t<n;t+=1)e[t]=this[t];return e.buffer};var t=f.prototype;function S(e,t,n){return\"number\"!=typeof e?n:t<=(e=~~e)?t:0<=e||0<=(e+=t)?e:0}function j(e){return(e=~~Math.ceil(+e))<0?0:e}function C(e){return(Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)})(e)}function k(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function T(e){for(var t=[],n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<=127)t.push(e.charCodeAt(n));else for(var o=n,i=(55296<=r&&r<=57343&&n++,encodeURIComponent(e.slice(o,n+1)).substr(1).split(\"%\")),u=0;u<i.length;u++)t.push(parseInt(i[u],16))}return t}function M(e){return a.toByteArray(e)}function c(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);o++)t[o+n]=e[o];return o}function N(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}function Y(e,t){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(0<=e,\"specified a negative value for writing an unsigned value\"),d(e<=t,\"value is larger than maximum value for type\"),d(Math.floor(e)===e,\"value has a fractional component\")}function F(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\"),d(Math.floor(e)===e,\"value has a fractional component\")}function D(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\")}function d(e,t){if(!e)throw new Error(t||\"Failed assertion\")}f._augment=function(e){return e._isBuffer=!0,e._get=e.get,e._set=e.set,e.get=t.get,e.set=t.set,e.write=t.write,e.toString=t.toString,e.toLocaleString=t.toString,e.toJSON=t.toJSON,e.copy=t.copy,e.slice=t.slice,e.readUInt8=t.readUInt8,e.readUInt16LE=t.readUInt16LE,e.readUInt16BE=t.readUInt16BE,e.readUInt32LE=t.readUInt32LE,e.readUInt32BE=t.readUInt32BE,e.readInt8=t.readInt8,e.readInt16LE=t.readInt16LE,e.readInt16BE=t.readInt16BE,e.readInt32LE=t.readInt32LE,e.readInt32BE=t.readInt32BE,e.readFloatLE=t.readFloatLE,e.readFloatBE=t.readFloatBE,e.readDoubleLE=t.readDoubleLE,e.readDoubleBE=t.readDoubleBE,e.writeUInt8=t.writeUInt8,e.writeUInt16LE=t.writeUInt16LE,e.writeUInt16BE=t.writeUInt16BE,e.writeUInt32LE=t.writeUInt32LE,e.writeUInt32BE=t.writeUInt32BE,e.writeInt8=t.writeInt8,e.writeInt16LE=t.writeInt16LE,e.writeInt16BE=t.writeInt16BE,e.writeInt32LE=t.writeInt32LE,e.writeInt32BE=t.writeInt32BE,e.writeFloatLE=t.writeFloatLE,e.writeFloatBE=t.writeFloatBE,e.writeDoubleLE=t.writeDoubleLE,e.writeDoubleBE=t.writeDoubleBE,e.fill=t.fill,e.inspect=t.inspect,e.toArrayBuffer=t.toArrayBuffer,e}}.call(this,O(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},O(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(c,d,e){!function(e,t,a,n,r,o,i,u,s){var a=c(\"buffer\").Buffer,f=4,l=new a(f);l.fill(0);d.exports={hash:function(e,t,n,r){for(var o=t(function(e,t){e.length%f!=0&&(n=e.length+(f-e.length%f),e=a.concat([e,l],n));for(var n,r=[],o=t?e.readInt32BE:e.readInt32LE,i=0;i<e.length;i+=f)r.push(o.call(e,i));return r}(e=a.isBuffer(e)?e:new a(e),r),8*e.length),t=r,i=new a(n),u=t?i.writeInt32BE:i.writeInt32LE,s=0;s<o.length;s++)u.call(i,o[s],4*s,!0);return i}}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],5:[function(v,e,_){!function(l,c,u,d,h,p,g,y,w){var u=v(\"buffer\").Buffer,e=v(\"./sha\"),t=v(\"./sha256\"),n=v(\"./rng\"),b={sha1:e,sha256:t,md5:v(\"./md5\")},s=64,a=new u(s);function r(e,n){var r=b[e=e||\"sha1\"],o=[];return r||i(\"algorithm:\",e,\"is not yet supported\"),{update:function(e){return u.isBuffer(e)||(e=new u(e)),o.push(e),e.length,this},digest:function(e){var t=u.concat(o),t=n?function(e,t,n){u.isBuffer(t)||(t=new u(t)),u.isBuffer(n)||(n=new u(n)),t.length>s?t=e(t):t.length<s&&(t=u.concat([t,a],s));for(var r=new u(s),o=new u(s),i=0;i<s;i++)r[i]=54^t[i],o[i]=92^t[i];return n=e(u.concat([r,n])),e(u.concat([o,n]))}(r,n,t):r(t);return o=null,e?t.toString(e):t}}}function i(){var e=[].slice.call(arguments).join(\" \");throw new Error([e,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}a.fill(0),_.createHash=function(e){return r(e)},_.createHmac=r,_.randomBytes=function(e,t){if(!t||!t.call)return new u(n(e));try{t.call(this,void 0,new u(n(e)))}catch(e){t(e)}};var o,f=[\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],m=function(e){_[e]=function(){i(\"sorry,\",e,\"is not implemented yet\")}};for(o in f)m(f[o],o)}.call(this,v(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},v(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:11}],6:[function(w,b,e){!function(e,r,o,i,u,a,f,l,y){var t=w(\"./helpers\");function n(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var n=1732584193,r=-271733879,o=-1732584194,i=271733878,u=0;u<e.length;u+=16){var s=n,a=r,f=o,l=i,n=c(n,r,o,i,e[u+0],7,-680876936),i=c(i,n,r,o,e[u+1],12,-389564586),o=c(o,i,n,r,e[u+2],17,606105819),r=c(r,o,i,n,e[u+3],22,-1044525330);n=c(n,r,o,i,e[u+4],7,-176418897),i=c(i,n,r,o,e[u+5],12,1200080426),o=c(o,i,n,r,e[u+6],17,-1473231341),r=c(r,o,i,n,e[u+7],22,-45705983),n=c(n,r,o,i,e[u+8],7,1770035416),i=c(i,n,r,o,e[u+9],12,-1958414417),o=c(o,i,n,r,e[u+10],17,-42063),r=c(r,o,i,n,e[u+11],22,-1990404162),n=c(n,r,o,i,e[u+12],7,1804603682),i=c(i,n,r,o,e[u+13],12,-40341101),o=c(o,i,n,r,e[u+14],17,-1502002290),n=d(n,r=c(r,o,i,n,e[u+15],22,1236535329),o,i,e[u+1],5,-165796510),i=d(i,n,r,o,e[u+6],9,-1069501632),o=d(o,i,n,r,e[u+11],14,643717713),r=d(r,o,i,n,e[u+0],20,-373897302),n=d(n,r,o,i,e[u+5],5,-701558691),i=d(i,n,r,o,e[u+10],9,38016083),o=d(o,i,n,r,e[u+15],14,-660478335),r=d(r,o,i,n,e[u+4],20,-405537848),n=d(n,r,o,i,e[u+9],5,568446438),i=d(i,n,r,o,e[u+14],9,-1019803690),o=d(o,i,n,r,e[u+3],14,-187363961),r=d(r,o,i,n,e[u+8],20,1163531501),n=d(n,r,o,i,e[u+13],5,-1444681467),i=d(i,n,r,o,e[u+2],9,-51403784),o=d(o,i,n,r,e[u+7],14,1735328473),n=h(n,r=d(r,o,i,n,e[u+12],20,-1926607734),o,i,e[u+5],4,-378558),i=h(i,n,r,o,e[u+8],11,-2022574463),o=h(o,i,n,r,e[u+11],16,1839030562),r=h(r,o,i,n,e[u+14],23,-35309556),n=h(n,r,o,i,e[u+1],4,-1530992060),i=h(i,n,r,o,e[u+4],11,1272893353),o=h(o,i,n,r,e[u+7],16,-155497632),r=h(r,o,i,n,e[u+10],23,-1094730640),n=h(n,r,o,i,e[u+13],4,681279174),i=h(i,n,r,o,e[u+0],11,-358537222),o=h(o,i,n,r,e[u+3],16,-722521979),r=h(r,o,i,n,e[u+6],23,76029189),n=h(n,r,o,i,e[u+9],4,-640364487),i=h(i,n,r,o,e[u+12],11,-421815835),o=h(o,i,n,r,e[u+15],16,530742520),n=p(n,r=h(r,o,i,n,e[u+2],23,-995338651),o,i,e[u+0],6,-198630844),i=p(i,n,r,o,e[u+7],10,1126891415),o=p(o,i,n,r,e[u+14],15,-1416354905),r=p(r,o,i,n,e[u+5],21,-57434055),n=p(n,r,o,i,e[u+12],6,1700485571),i=p(i,n,r,o,e[u+3],10,-1894986606),o=p(o,i,n,r,e[u+10],15,-1051523),r=p(r,o,i,n,e[u+1],21,-2054922799),n=p(n,r,o,i,e[u+8],6,1873313359),i=p(i,n,r,o,e[u+15],10,-30611744),o=p(o,i,n,r,e[u+6],15,-1560198380),r=p(r,o,i,n,e[u+13],21,1309151649),n=p(n,r,o,i,e[u+4],6,-145523070),i=p(i,n,r,o,e[u+11],10,-1120210379),o=p(o,i,n,r,e[u+2],15,718787259),r=p(r,o,i,n,e[u+9],21,-343485551),n=g(n,s),r=g(r,a),o=g(o,f),i=g(i,l)}return Array(n,r,o,i)}function s(e,t,n,r,o,i){return g((t=g(g(t,e),g(r,i)))<<o|t>>>32-o,n)}function c(e,t,n,r,o,i,u){return s(t&n|~t&r,e,t,o,i,u)}function d(e,t,n,r,o,i,u){return s(t&r|n&~r,e,t,o,i,u)}function h(e,t,n,r,o,i,u){return s(t^n^r,e,t,o,i,u)}function p(e,t,n,r,o,i,u){return s(n^(t|~r),e,t,o,i,u)}function g(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}b.exports=function(e){return t.hash(e,n,16)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],7:[function(e,l,t){!function(e,t,n,r,o,i,u,s,f){var a;l.exports=a||function(e){for(var t,n=new Array(e),r=0;r<e;r++)0==(3&r)&&(t=4294967296*Math.random()),n[r]=t>>>((3&r)<<3)&255;return n}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],8:[function(c,d,e){!function(e,t,n,r,o,s,a,f,l){var i=c(\"./helpers\");function u(l,c){l[c>>5]|=128<<24-c%32,l[15+(c+64>>9<<4)]=c;for(var e,t,n,r=Array(80),o=1732584193,i=-271733879,u=-1732584194,s=271733878,d=-1009589776,h=0;h<l.length;h+=16){for(var p=o,g=i,y=u,w=s,b=d,a=0;a<80;a++){r[a]=a<16?l[h+a]:v(r[a-3]^r[a-8]^r[a-14]^r[a-16],1);var f=m(m(v(o,5),(f=i,t=u,n=s,(e=a)<20?f&t|~f&n:!(e<40)&&e<60?f&t|f&n|t&n:f^t^n)),m(m(d,r[a]),(e=a)<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514)),d=s,s=u,u=v(i,30),i=o,o=f}o=m(o,p),i=m(i,g),u=m(u,y),s=m(s,w),d=m(d,b)}return Array(o,i,u,s,d)}function m(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function v(e,t){return e<<t|e>>>32-t}d.exports=function(e){return i.hash(e,u,20,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],9:[function(c,d,e){!function(e,t,n,r,u,s,a,f,l){function b(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,l){var c,d=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),t=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),n=new Array(64);e[l>>5]|=128<<24-l%32,e[15+(l+64>>9<<4)]=l;for(var r,o,h=0;h<e.length;h+=16){for(var i=t[0],u=t[1],s=t[2],p=t[3],a=t[4],g=t[5],y=t[6],w=t[7],f=0;f<64;f++)n[f]=f<16?e[f+h]:b(b(b((o=n[f-2],m(o,17)^m(o,19)^v(o,10)),n[f-7]),(o=n[f-15],m(o,7)^m(o,18)^v(o,3))),n[f-16]),c=b(b(b(b(w,m(o=a,6)^m(o,11)^m(o,25)),a&g^~a&y),d[f]),n[f]),r=b(m(r=i,2)^m(r,13)^m(r,22),i&u^i&s^u&s),w=y,y=g,g=a,a=b(p,c),p=s,s=u,u=i,i=b(c,r);t[0]=b(i,t[0]),t[1]=b(u,t[1]),t[2]=b(s,t[2]),t[3]=b(p,t[3]),t[4]=b(a,t[4]),t[5]=b(g,t[5]),t[6]=b(y,t[6]),t[7]=b(w,t[7])}return t}var i=c(\"./helpers\"),m=function(e,t){return e>>>t|e<<32-t},v=function(e,t){return e>>>t};d.exports=function(e){return i.hash(e,o,32,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],10:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){f.read=function(e,t,n,r,o){var i,u,l=8*o-r-1,c=(1<<l)-1,d=c>>1,s=-7,a=n?o-1:0,f=n?-1:1,o=e[t+a];for(a+=f,i=o&(1<<-s)-1,o>>=-s,s+=l;0<s;i=256*i+e[t+a],a+=f,s-=8);for(u=i&(1<<-s)-1,i>>=-s,s+=r;0<s;u=256*u+e[t+a],a+=f,s-=8);if(0===i)i=1-d;else{if(i===c)return u?NaN:1/0*(o?-1:1);u+=Math.pow(2,r),i-=d}return(o?-1:1)*u*Math.pow(2,i-r)},f.write=function(e,t,l,n,r,c){var o,i,u=8*c-r-1,s=(1<<u)-1,a=s>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:c-1,h=n?1:-1,c=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=s):(o=Math.floor(Math.log(t)/Math.LN2),t*(n=Math.pow(2,-o))<1&&(o--,n*=2),2<=(t+=1<=o+a?d/n:d*Math.pow(2,1-a))*n&&(o++,n/=2),s<=o+a?(i=0,o=s):1<=o+a?(i=(t*n-1)*Math.pow(2,r),o+=a):(i=t*Math.pow(2,a-1)*Math.pow(2,r),o=0));8<=r;e[l+f]=255&i,f+=h,i/=256,r-=8);for(o=o<<r|i,u+=r;0<u;e[l+f]=255&o,f+=h,o/=256,u-=8);e[l+f-h]|=128*c}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/ieee754/index.js\",\"/node_modules/gulp-browserify/node_modules/ieee754\")},{buffer:3,lYpoI2:11}],11:[function(e,h,t){!function(e,t,n,r,o,f,l,c,d){var i,u,s;function a(){}(e=h.exports={}).nextTick=(u=\"undefined\"!=typeof window&&window.setImmediate,s=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener,u?function(e){return window.setImmediate(e)}:s?(i=[],window.addEventListener(\"message\",function(e){var t=e.source;t!==window&&null!==t||\"process-tick\"!==e.data||(e.stopPropagation(),0<i.length&&i.shift()())},!0),function(e){i.push(e),window.postMessage(\"process-tick\",\"*\")}):function(e){setTimeout(e,0)}),e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.on=a,e.addListener=a,e.once=a,e.off=a,e.removeListener=a,e.removeAllListeners=a,e.emit=a,e.binding=function(e){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(e){throw new Error(\"process.chdir is not supported\")}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:11}]},{},[1])(1)});", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { extend } from '@react-three/fiber';\nimport React, { useImperativeHandle, useMemo } from 'react';\nimport * as THREE from 'three';\nimport { Color as Color$2, Vector3, Vector2, Vector4, Matrix3, Matrix4, Texture as Texture$2, MathUtils, TextureLoader } from 'three';\nimport tokenize from 'glsl-tokenizer';\nimport descope from 'glsl-token-descope';\nimport stringify from 'glsl-token-string';\nimport tokenFunctions from 'glsl-token-functions';\nimport CustomShaderMaterial from 'three-custom-shader-material/vanilla';\nimport { createRoot } from 'react-dom/client';\nimport { useCreateStore, useControls, button, LevaPanel } from 'leva';\n\nfunction getUniform(value) {\n  if (typeof value === 'string') {\n    return new Color$2(value).convertLinearToSRGB();\n  }\n\n  return value;\n}\nfunction getSpecialParameters(label) {\n  switch (label) {\n    case 'alpha':\n      return {\n        min: 0,\n        max: 1\n      };\n\n    case 'scale':\n      return {\n        min: 0\n      };\n\n    case 'map':\n      return {\n        image: undefined\n      };\n\n    default:\n      return {};\n  }\n}\nfunction getLayerMaterialArgs({\n  color,\n  alpha,\n  lighting,\n  name,\n  ...rest\n} = {}) {\n  return [{\n    color,\n    alpha,\n    lighting,\n    name\n  }, rest];\n}\nfunction isSerializableType(prop) {\n  return prop instanceof Vector3 || prop instanceof Vector2 || prop instanceof Vector4 || prop instanceof Matrix3 || prop instanceof Matrix4;\n}\nfunction serializeProp(prop) {\n  if (isSerializableType(prop)) {\n    return prop.toArray();\n  } else if (prop instanceof Color$2) {\n    return '#' + prop.clone().convertLinearToSRGB().getHexString();\n  } else if (prop instanceof Texture$2) {\n    return prop.image.src;\n  }\n\n  return prop;\n}\n\nconst BlendModes = {\n  normal: 'normal',\n  add: 'add',\n  subtract: 'subtract',\n  multiply: 'multiply',\n  lighten: 'lighten',\n  darken: 'darken',\n  divide: 'divide',\n  overlay: 'overlay',\n  screen: 'screen',\n  softlight: 'softlight',\n  negation: 'negation',\n  reflect: 'reflect'\n};\nconst NoiseTypes = {\n  perlin: 'perlin',\n  simplex: 'simplex',\n  cell: 'cell',\n  curl: 'curl',\n  white: 'white'\n};\nconst MappingTypes = {\n  local: 'local',\n  world: 'world',\n  uv: 'uv'\n};\nconst ShadingTypes = {\n  phong: THREE.MeshPhongMaterial,\n  physical: THREE.MeshPhysicalMaterial,\n  toon: THREE.MeshToonMaterial,\n  basic: THREE.MeshBasicMaterial,\n  lambert: THREE.MeshLambertMaterial,\n  standard: THREE.MeshStandardMaterial\n};\n\nclass Abstract {\n  constructor(c, props, onParse) {\n    this.uuid = MathUtils.generateUUID().replace(/-/g, '_');\n    this.name = 'LayerMaterial';\n    this.mode = 'normal';\n    this.visible = true;\n    const defaults = Object.getOwnPropertyNames(c).filter(e => e.startsWith('u_'));\n    const uniforms = defaults.reduce((a, v) => {\n      var _Object$getOwnPropert;\n\n      let value = (_Object$getOwnPropert = Object.getOwnPropertyDescriptor(c, v)) == null ? void 0 : _Object$getOwnPropert.value;\n      if (isSerializableType(value) || value instanceof Color$2) value = value.clone();\n      return { ...a,\n        [v.slice(1)]: value\n      };\n    }, {});\n\n    for (const key in uniforms) {\n      const propName = key.split('_')[1];\n      if ((props == null ? void 0 : props[propName]) !== undefined) uniforms[key] = props[propName];\n    }\n\n    if (props) {\n      Object.keys(props).map(key => {\n        if (props[key] !== undefined) {\n          // @ts-ignore\n          this[key] = props[key];\n        }\n      });\n    }\n\n    this.uniforms = {};\n    this.schema = [];\n    const properties = {};\n    Object.keys(uniforms).map(key => {\n      const propName = key.split('_')[1];\n      this.uniforms[`u_${this.uuid}_${propName}`] = {\n        value: getUniform(uniforms[key])\n      };\n      this.schema.push({\n        value: uniforms[key],\n        label: propName\n      });\n      properties[propName] = {\n        set: v => {\n          this.uniforms[`u_${this.uuid}_${propName}`].value = getUniform(v);\n        },\n        get: () => {\n          return this.uniforms[`u_${this.uuid}_${propName}`].value;\n        }\n      };\n    });\n    if (props != null && props.name) this.name = props.name;\n    if (props != null && props.mode) this.mode = props.mode;\n    if (props != null && props.visible) this.visible = props.visible;\n    Object.defineProperties(this, properties);\n    this.vertexShader = '';\n    this.fragmentShader = '';\n    this.vertexVariables = '';\n    this.fragmentVariables = '';\n    this.onParse = onParse;\n    this.buildShaders(c); // Remove Name field from Debugger until a way to\n    // rename Leva folders is found\n    // this.schema.push({\n    //   value: this.name,\n    //   label: 'name',\n    // })\n\n    this.schema.push({\n      value: this.mode,\n      label: 'mode',\n      options: Object.values(BlendModes)\n    });\n    this.schema.push({\n      value: this.visible,\n      label: 'visible'\n    });\n  }\n\n  buildShaders(constructor) {\n    var _this$onParse;\n\n    const shaders = Object.getOwnPropertyNames(constructor).filter(e => e === 'fragmentShader' || e === 'vertexShader').reduce((a, v) => {\n      var _Object$getOwnPropert2;\n\n      return { ...a,\n        [v]: (_Object$getOwnPropert2 = Object.getOwnPropertyDescriptor(constructor, v)) == null ? void 0 : _Object$getOwnPropert2.value\n      };\n    }, {});\n    const tokens = {\n      vert: tokenize(shaders.vertexShader || ''),\n      frag: tokenize(shaders.fragmentShader || '')\n    };\n    const descoped = {\n      vert: descope(tokens.vert, this.renameTokens.bind(this)),\n      frag: descope(tokens.frag, this.renameTokens.bind(this))\n    };\n    const funcs = {\n      vert: tokenFunctions(descoped.vert),\n      frag: tokenFunctions(descoped.frag)\n    };\n    const mainIndex = {\n      vert: funcs.vert.map(e => {\n        return e.name;\n      }).indexOf('main'),\n      frag: funcs.frag.map(e => {\n        return e.name;\n      }).indexOf('main')\n    };\n    const variables = {\n      vert: mainIndex.vert >= 0 ? stringify(descoped.vert.slice(0, funcs.vert[mainIndex.vert].outer[0])) : '',\n      frag: mainIndex.frag >= 0 ? stringify(descoped.frag.slice(0, funcs.frag[mainIndex.frag].outer[0])) : ''\n    };\n    const funcBodies = {\n      vert: mainIndex.vert >= 0 ? this.getShaderFromIndex(descoped.vert, funcs.vert[mainIndex.vert].body) : '',\n      frag: mainIndex.frag >= 0 ? this.getShaderFromIndex(descoped.frag, funcs.frag[mainIndex.frag].body) : ''\n    };\n    this.vertexShader = this.processFinal(funcBodies.vert, true);\n    this.fragmentShader = this.processFinal(funcBodies.frag);\n    this.vertexVariables = variables.vert;\n    this.fragmentVariables = variables.frag;\n    (_this$onParse = this.onParse) == null ? void 0 : _this$onParse.call(this, this);\n    this.schema = this.schema.filter((value, index) => {\n      const _value = value.label;\n      return index === this.schema.findIndex(obj => {\n        return obj.label === _value;\n      });\n    });\n  }\n\n  renameTokens(name) {\n    if (name.startsWith('u_')) {\n      const slice = name.slice(2);\n      return `u_${this.uuid}_${slice}`;\n    } else if (name.startsWith('v_')) {\n      const slice = name.slice(2);\n      return `v_${this.uuid}_${slice}`;\n    } else if (name.startsWith('f_')) {\n      const slice = name.slice(2);\n      return `f_${this.uuid}_${slice}`;\n    } else {\n      return name;\n    }\n  }\n\n  processFinal(shader, isVertex) {\n    const s = shader.replace(/\\sf_/gm, ` f_${this.uuid}_`).replace(/\\(f_/gm, `(f_${this.uuid}_`);\n    const returnValue = s.match(/^.*return.*$/gm);\n    let sReplaced = s.replace(/^.*return.*$/gm, '');\n\n    if (returnValue != null && returnValue[0]) {\n      const returnVariable = returnValue[0].replace('return', '').trim().replace(';', '');\n      const blendMode = this.getBlendMode(returnVariable, 'lamina_finalColor');\n      sReplaced += isVertex ? `lamina_finalPosition = ${returnVariable};` : `lamina_finalColor = ${blendMode};`;\n    }\n\n    return sReplaced;\n  }\n\n  getShaderFromIndex(tokens, index) {\n    return stringify(tokens.slice(index[0], index[1]));\n  }\n\n  getBlendMode(b, a) {\n    switch (this.mode) {\n      default:\n      case 'normal':\n        return `lamina_blend_alpha(${a}, ${b}, ${b}.a)`;\n\n      case 'add':\n        return `lamina_blend_add(${a}, ${b}, ${b}.a)`;\n\n      case 'subtract':\n        return `lamina_blend_subtract(${a}, ${b}, ${b}.a)`;\n\n      case 'multiply':\n        return `lamina_blend_multiply(${a}, ${b}, ${b}.a)`;\n\n      case 'lighten':\n        return `lamina_blend_lighten(${a}, ${b}, ${b}.a)`;\n\n      case 'darken':\n        return `lamina_blend_darken(${a}, ${b}, ${b}.a)`;\n\n      case 'divide':\n        return `lamina_blend_divide(${a}, ${b}, ${b}.a)`;\n\n      case 'overlay':\n        return `lamina_blend_overlay(${a}, ${b}, ${b}.a)`;\n\n      case 'screen':\n        return `lamina_blend_screen(${a}, ${b}, ${b}.a)`;\n\n      case 'softlight':\n        return `lamina_blend_softlight(${a}, ${b}, ${b}.a)`;\n\n      case 'reflect':\n        return `lamina_blend_reflect(${a}, ${b}, ${b}.a)`;\n\n      case 'negation':\n        return `lamina_blend_negation(${a}, ${b}, ${b}.a)`;\n    }\n  }\n\n  getSchema() {\n    const latestSchema = this.schema.map(({\n      label,\n      options,\n      ...rest\n    }) => {\n      return {\n        label,\n        options,\n        ...getSpecialParameters(label),\n        ...rest,\n        // @ts-ignore\n        value: serializeProp(this[label])\n      };\n    });\n    return latestSchema;\n  }\n\n  serialize() {\n    const name = this.constructor.name.split('$')[0];\n    let nonUniformPropKeys = Object.keys(this);\n    nonUniformPropKeys = nonUniformPropKeys.filter(e => !['uuid', 'uniforms', 'schema', 'fragmentShader', 'vertexShader', 'fragmentVariables', 'vertexVariables', 'attribs', 'events', '__r3f', 'onParse'].includes(e));\n    const nonUniformProps = {};\n    nonUniformPropKeys.forEach(k => {\n      // @ts-ignore\n      nonUniformProps[k] = this[k];\n    });\n    const props = {};\n\n    for (const key in this.uniforms) {\n      const name = key.replace(`u_${this.uuid}_`, '');\n      props[name] = serializeProp(this.uniforms[key].value);\n    }\n\n    return {\n      constructor: name,\n      properties: { ...props,\n        ...nonUniformProps\n      }\n    };\n  }\n\n}\n\nclass Depth$1 extends Abstract {\n  constructor(props) {\n    super(Depth$1, {\n      name: 'Depth',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: ['vector', 'world', 'camera']\n      });\n      const mapping = Depth$1.getMapping(self.uuid, self.mapping);\n      self.fragmentShader = self.fragmentShader.replace('lamina_mapping_template', mapping);\n    });\n    this.mapping = 'vector';\n  }\n\n  static getMapping(uuid, type) {\n    switch (type) {\n      default:\n      case 'vector':\n        return `length(v_${uuid}_worldPosition - u_${uuid}_origin)`;\n\n      case 'world':\n        return `length(v_${uuid}_position - vec3(0.))`;\n\n      case 'camera':\n        return `length(v_${uuid}_worldPosition - cameraPosition)`;\n    }\n  }\n\n}\nDepth$1.u_near = 2;\nDepth$1.u_far = 10;\nDepth$1.u_origin = new Vector3(0, 0, 0);\nDepth$1.u_colorA = 'white';\nDepth$1.u_colorB = 'black';\nDepth$1.u_alpha = 1;\nDepth$1.vertexShader = `\n  varying vec3 v_worldPosition;\n  varying vec3 v_position;\n\n  void main() {\n    v_worldPosition = (vec4(position, 1.0) * modelMatrix).xyz;\n    v_position = position;\n  }\n  `;\nDepth$1.fragmentShader = `   \n    uniform float u_alpha;\n    uniform float u_near;\n    uniform float u_far;\n    uniform float u_isVector;\n    uniform vec3 u_origin;\n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n\n    varying vec3 v_worldPosition;\n    varying vec3 v_position;\n\n    void main() {\n      float f_dist = lamina_mapping_template;\n      float f_depth = (f_dist - u_near) / (u_far - u_near);\n\t\t\tvec3 f_depthColor =  mix(u_colorB, u_colorA, 1.0 - clamp(f_depth, 0., 1.));\n  \n  \n      return vec4(f_depthColor, u_alpha);\n    }\n  `;\n\nclass Color$1 extends Abstract {\n  constructor(props) {\n    super(Color$1, {\n      name: 'Color',\n      ...props\n    });\n  }\n\n}\nColor$1.u_color = 'red';\nColor$1.u_alpha = 1;\nColor$1.fragmentShader = `   \n    uniform vec3 u_color;\n    uniform float u_alpha;\n\n    void main() {\n      return vec4(u_color, u_alpha);\n    }\n  `;\n\nclass Noise$1 extends Abstract {\n  constructor(props) {\n    super(Noise$1, {\n      name: 'noise',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.type,\n        label: 'type',\n        options: Object.values(NoiseTypes)\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const noiseFunc = Noise$1.getNoiseFunction(self.type);\n      const mapping = Noise$1.getMapping(self.mapping);\n      self.vertexShader = self.vertexShader.replace('lamina_mapping_template', mapping);\n      self.fragmentShader = self.fragmentShader.replace('lamina_noise_template', noiseFunc);\n    });\n    this.type = 'perlin';\n    this.mapping = 'local';\n  }\n\n  static getNoiseFunction(type) {\n    switch (type) {\n      default:\n      case 'perlin':\n        return `lamina_noise_perlin`;\n\n      case 'simplex':\n        return `lamina_noise_simplex`;\n\n      case 'cell':\n        return `lamina_noise_worley`;\n\n      case 'white':\n        return `lamina_noise_white`;\n\n      case 'curl':\n        return `lamina_noise_swirl`;\n    }\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `position`;\n\n      case 'world':\n        return `(modelMatrix * vec4(position,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nNoise$1.u_colorA = '#666666';\nNoise$1.u_colorB = '#666666';\nNoise$1.u_colorC = '#FFFFFF';\nNoise$1.u_colorD = '#FFFFFF';\nNoise$1.u_alpha = 1;\nNoise$1.u_scale = 1;\nNoise$1.u_offset = new Vector3(0, 0, 0);\nNoise$1.vertexShader = `\n    varying vec3 v_position;\n\n    void main() {\n        v_position = lamina_mapping_template;\n    }\n  `;\nNoise$1.fragmentShader = `   \n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n    uniform vec3 u_colorC;\n    uniform vec3 u_colorD;\n    uniform vec3 u_offset;\n\n    uniform float u_alpha;\n    uniform float u_scale;\n\n    varying vec3 v_position;\n\n\n    void main() {\n        float f_n = lamina_noise_template((v_position + u_offset) * u_scale);\n\n        float f_step1 = 0.;\n        float f_step2 = 0.2;\n        float f_step3 = 0.6;\n        float f_step4 = 1.;\n\n        vec3 f_color = mix(u_colorA, u_colorB, smoothstep(f_step1, f_step2, f_n));\n        f_color = mix(f_color, u_colorC, smoothstep(f_step2, f_step3, f_n));\n        f_color = mix(f_color, u_colorD, smoothstep(f_step3, f_step4, f_n));\n\n        return vec4(f_color, u_alpha);\n    }\n  `;\n\nclass Fresnel$1 extends Abstract {\n  constructor(props) {\n    super(Fresnel$1, {\n      name: 'Fresnel',\n      ...props\n    });\n  }\n\n}\nFresnel$1.u_color = 'white';\nFresnel$1.u_alpha = 1;\nFresnel$1.u_bias = 0;\nFresnel$1.u_intensity = 1;\nFresnel$1.u_power = 2;\nFresnel$1.u_factor = 1;\nFresnel$1.vertexShader = `\n    varying vec3 v_worldPosition;\n    varying vec3 v_worldNormal;\n\n    void main() {\n        v_worldPosition = vec3(-viewMatrix[0][2], -viewMatrix[1][2], -viewMatrix[2][2]);\n        v_worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\n        \n    }\n  `;\nFresnel$1.fragmentShader = `   \n    uniform vec3 u_color;\n    uniform float u_alpha;\n    uniform float u_bias;\n    uniform float u_intensity;\n    uniform float u_power;\n    uniform float u_factor;\n\n    varying vec3 v_worldPosition;\n    varying vec3 v_worldNormal;\n\n    void main() {\n        float f_a = (u_factor  + dot(v_worldPosition, v_worldNormal));\n        float f_fresnel = u_bias + u_intensity * pow(abs(f_a), u_power);\n\n        f_fresnel = clamp(f_fresnel, 0.0, 1.0);\n        return vec4(f_fresnel * u_color, u_alpha);\n    }\n  `;\n\nclass Gradient$1 extends Abstract {\n  constructor(props) {\n    super(Gradient$1, {\n      name: 'Gradient',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.axes,\n        label: 'axes',\n        options: ['x', 'y', 'z']\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const mapping = Gradient$1.getMapping(self.mapping);\n      self.vertexShader = self.vertexShader.replace('lamina_mapping_template', mapping || 'local');\n      self.fragmentShader = self.fragmentShader.replace('axes_template', self.axes || 'x');\n    });\n    this.axes = 'x';\n    this.mapping = 'local';\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `position`;\n\n      case 'world':\n        return `(modelMatrix * vec4(position,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nGradient$1.u_colorA = 'white';\nGradient$1.u_colorB = 'black';\nGradient$1.u_alpha = 1;\nGradient$1.u_start = 1;\nGradient$1.u_end = -1;\nGradient$1.u_contrast = 1;\nGradient$1.vertexShader = `\n\t\tvarying vec3 v_position;\n\n\t\tvod main() {\n      v_position = lamina_mapping_template;\n\t\t}\n  `;\nGradient$1.fragmentShader = `   \n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n    uniform vec3 u_axis;\n    uniform float u_alpha;\n    uniform float u_start;\n    uniform float u_end;\n    uniform float u_contrast;\n\n\t\tvarying vec3 v_position;\n\n    void main() {\n\n      float f_step = smoothstep(u_start, u_end, v_position.axes_template * u_contrast);\n      vec3 f_color = mix(u_colorA, u_colorB, f_step);\n\n      return vec4(f_color, u_alpha);\n    }\n  `;\n\nclass Matcap$1 extends Abstract {\n  constructor(props) {\n    super(Matcap$1, {\n      name: \"Matcap\",\n      ...props\n    });\n  }\n\n}\nMatcap$1.u_alpha = 1;\nMatcap$1.u_map = undefined;\nMatcap$1.vertexShader = `\n    varying vec3 v_position;\n    varying vec3 v_normal;\n    \n    void main() {\n      v_position = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\n      v_normal = normalize( normalMatrix * normal );\n    }\n    `;\nMatcap$1.fragmentShader = ` \n\t\tuniform sampler2D u_map;  \n\t\tuniform float u_alpha;  \n\t\tvarying vec3 v_position;\n\t\tvarying vec3 v_normal;\n\n\t\t\n    void main() {\n\t\t\tvec3 f_r = reflect( v_position, v_normal );\n\t\t\tfloat f_m = 2. * sqrt( pow( f_r.x, 2. ) + pow( f_r.y, 2. ) + pow( f_r.z + 1., 2. ) );\n\t\t\tvec2 f_vN = f_r.xy / f_m + .5;\n\n\t\t\tvec3 f_base = texture2D(u_map, f_vN).rgb;\n\n      return vec4(f_base, u_alpha);\n    }\n  `;\n\nclass Texture$1 extends Abstract {\n  constructor(props) {\n    super(Texture$1, {\n      name: 'Texture',\n      ...props\n    });\n  }\n\n}\nTexture$1.u_alpha = 1;\nTexture$1.u_map = undefined;\nTexture$1.vertexShader = `\n    varying vec2 v_uv;\n    \n    void main() {\n        v_uv = uv;\n    }\n    `;\nTexture$1.fragmentShader = ` \n\t\tuniform sampler2D u_map;  \n\t\tuniform float u_alpha;  \n\t\tvarying vec2 v_uv;\n\n    void main() {\n\t\t\tvec4 f_color = texture2D(u_map, v_uv);\n      return vec4(f_color.rgb, f_color.a * u_alpha);\n    }\n  `;\n\nclass Displace$1 extends Abstract {\n  constructor(props) {\n    super(Displace$1, {\n      name: 'Displace',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.type,\n        label: 'type',\n        options: Object.values(NoiseTypes)\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const noiseFunc = Displace$1.getNoiseFunction(self.type);\n      const mapping = Displace$1.getMapping(self.mapping);\n      self.vertexVariables = self.vertexVariables.replace('lamina_mapping_template', mapping);\n      self.vertexVariables = self.vertexVariables.replace('lamina_noise_template', noiseFunc);\n    });\n    this.type = 'perlin';\n    this.mapping = 'local';\n  }\n\n  static getNoiseFunction(type) {\n    switch (type) {\n      default:\n      case 'perlin':\n        return `lamina_noise_perlin`;\n\n      case 'simplex':\n        return `lamina_noise_simplex`;\n\n      case 'cell':\n        return `lamina_noise_worley`;\n\n      case 'white':\n        return `lamina_noise_white`;\n\n      case 'curl':\n        return `lamina_noise_swirl`;\n    }\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `p`;\n\n      case 'world':\n        return `(modelMatrix * vec4(p,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nDisplace$1.u_strength = 1;\nDisplace$1.u_scale = 1;\nDisplace$1.u_offset = new Vector3(0, 0, 0);\nDisplace$1.vertexShader = `\n       \n      uniform float u_strength;\n      uniform float u_scale;\n      uniform vec3 u_offset;\n\n      vec3 displace(vec3 p) {\n\t\t\t\tvec3 f_position = lamina_mapping_template;\n        float f_n = lamina_noise_template((f_position + u_offset) * u_scale) * u_strength;\n        vec3 f_newPosition = p + (f_n * normal);\n\n\t\t\t\treturn f_newPosition;\n      }\n\n      \n\t\t\tvec3 orthogonal(vec3 v) {\n  \t\t  return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0)\n  \t\t  : vec3(0.0, -v.z, v.y));\n  \t\t}\n  \t\tvec3 recalcNormals(vec3 newPos) {\n  \t\t  float offset = 0.001;\n  \t\t  vec3 tangent = orthogonal(normal);\n  \t\t  vec3 bitangent = normalize(cross(normal, tangent));\n  \t\t  vec3 neighbour1 = position + tangent * offset;\n  \t\t  vec3 neighbour2 = position + bitangent * offset;\n  \t\t  vec3 displacedNeighbour1 = displace(neighbour1);\n  \t\t  vec3 displacedNeighbour2 = displace(neighbour2);\n  \t\t  vec3 displacedTangent = displacedNeighbour1 - newPos;\n  \t\t  vec3 displacedBitangent = displacedNeighbour2 - newPos;\n  \t\t  return normalize(cross(displacedTangent, displacedBitangent));\n  \t\t}\n  \n  \n      void main() {\n       \n\t\t\t\tvec3 f_newPosition = displace(position);\n        lamina_finalNormal = recalcNormals(f_newPosition);\n\n        return f_newPosition;\n      }\n    `;\n\nclass Normal$1 extends Abstract {\n  constructor(props) {\n    super(Normal$1, {\n      name: 'Normal',\n      ...props\n    });\n  }\n\n}\nNormal$1.u_alpha = 1;\nNormal$1.u_direction = new Vector3(1, 1, 1);\nNormal$1.vertexShader = `   \n  varying vec3 v_normals; \n\n  void main() {\n    v_normals = normal;\n  }\n`;\nNormal$1.fragmentShader = `   \n  \tuniform float u_alpha;\n  \tuniform vec3 u_color;\n  \tuniform vec3 u_direction;\n\n\t\tvarying vec3 v_normals;\n\n    void main() {\n\t\t\tvec3 f_normalColor = vec3(1.);\n      f_normalColor.x = v_normals.x * u_direction.x;\n      f_normalColor.y = v_normals.y * u_direction.y;\n      f_normalColor.z = v_normals.z * u_direction.z;\n\n      return vec4(f_normalColor, u_alpha);\n    }\n  `;\n\nvar BlendModesChunk = /* glsl */\n`\nvec4 lamina_blend_add(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(min(x.xyz + y.xyz, 1.0) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec3 lamina_blend_alpha(const in vec3 x, const in vec3 y, const in float opacity) {\n\n\treturn y * opacity + x * (1.0 - opacity);\n\n}\n\nvec4 lamina_blend_alpha(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tfloat a = min(y.a, opacity);\n\n\treturn vec4(lamina_blend_alpha(x.rgb, y.rgb, a), x.a);\n\n}\nvec4 lamina_blend_average(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4((x.xyz + y.xyz) * 0.5 * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_color_burn(const in float x, const in float y) {\n\n\treturn (y == 0.0) ? y : max(1.0 - (1.0 - x) / y, 0.0);\n\n}\n\nvec4 lamina_blend_color_burn(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_color_burn(x.r, y.r),\n\t\tlamina_blend_color_burn(x.g, y.g),\n\t\tlamina_blend_color_burn(x.b, y.b),\n\t\tlamina_blend_color_burn(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_color_dodge(const in float x, const in float y) {\n\n\treturn (y == 1.0) ? y : min(x / (1.0 - y), 1.0);\n\n}\n\nvec4 lamina_blend_color_dodge(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_color_dodge(x.r, y.r),\n\t\tlamina_blend_color_dodge(x.g, y.g),\n\t\tlamina_blend_color_dodge(x.b, y.b),\n\t\tlamina_blend_color_dodge(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_darken(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(min(x.xyz, y.xyz) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_difference(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(abs(x.xyz - y.xyz) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_divide(const in float x, const in float y) {\n\n\treturn (y > 0.0) ? min(x / y, 1.0) : 1.0;\n\n}\n\nvec4 lamina_blend_divide(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_divide(x.r, y.r),\n\t\tlamina_blend_divide(x.g, y.g),\n\t\tlamina_blend_divide(x.b, y.b),\n\t\tlamina_blend_divide(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_exclusion(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4((x.xyz + y.xyz - 2.0 * x.xyz * y.xyz) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_lighten(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(max(x.xyz, y.xyz) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_multiply(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4( x.xyz * y.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_negation(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4((1.0 - abs(1.0 - x.xyz - y.xyz)) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_normal(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(y.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_overlay(const in float x, const in float y) {\n\n\treturn (x < 0.5) ? (2.0 * x * y) : (1.0 - 2.0 * (1.0 - x) * (1.0 - y));\n\n}\n\nvec4 lamina_blend_overlay(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_overlay(x.r, y.r),\n\t\tlamina_blend_overlay(x.g, y.g),\n\t\tlamina_blend_overlay(x.b, y.b),\n\t\tlamina_blend_overlay(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_reflect(const in float x, const in float y) {\n\n\treturn (y == 1.0) ? y : min(x * x / (1.0 - y), 1.0);\n\n}\n\nvec4 lamina_blend_reflect(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_reflect(x.r, y.r),\n\t\tlamina_blend_reflect(x.g, y.g),\n\t\tlamina_blend_reflect(x.b, y.b),\n\t\tlamina_blend_reflect(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_screen(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4((1.0 - (1.0 - x.xyz) * (1.0 - y.xyz)) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nfloat lamina_blend_softlight(const in float x, const in float y) {\n\n\treturn (y < 0.5) ?\n\t\t(2.0 * x * y + x * x * (1.0 - 2.0 * y)) :\n\t\t(sqrt(x) * (2.0 * y - 1.0) + 2.0 * x * (1.0 - y));\n\n}\n\nvec4 lamina_blend_softlight(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_softlight(x.r, y.r),\n\t\tlamina_blend_softlight(x.g, y.g),\n\t\tlamina_blend_softlight(x.b, y.b),\n\t\tlamina_blend_softlight(x.a, y.a)\n\t);\n\n\treturn vec4(z.xyz * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\nvec4 lamina_blend_subtract(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn vec4(max(x.xyz + y.xyz - 1.0, 0.0) * opacity + x.xyz * (1.0 - opacity), x.a);\n\n}\n\n`;\n\nvar NoiseChunk = /* glsl */\n`\n\n// From: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\n// Huge thanks to the creators of these algorithms\n\nfloat lamina_noise_mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 lamina_noise_mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 lamina_noise_perm(vec4 x){return lamina_noise_mod289(((x * 34.0) + 1.0) * x);}\nvec4 lamina_noise_permute(vec4 x) { return mod(((x * 34.0) + 1.0) * x, 289.0); }\nvec4 lamina_noise_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\n\n\nfloat lamina_noise_white(vec2 p) {\n  return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) *\n               (0.1 + abs(sin(p.y * 13.0 + p.x))));\n}\n\nfloat lamina_noise_white(vec3 p) {\n  return lamina_noise_white(p.xy);\n}\n\n\nvec3 lamina_noise_fade(vec3 t) { return t * t * t * (t * (t * 6.0 - 15.0) + 10.0); }\n\nfloat lamina_noise_perlin(vec3 P) {\n  vec3 Pi0 = floor(P);        // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P);        // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = lamina_noise_permute(lamina_noise_permute(ix) + iy);\n  vec4 ixy0 = lamina_noise_permute(ixy + iz0);\n  vec4 ixy1 = lamina_noise_permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n  vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n  vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n  vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n  vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n  vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n  vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n  vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n\n  vec4 norm0 = lamina_noise_taylorInvSqrt(\n      vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = lamina_noise_taylorInvSqrt(\n      vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = lamina_noise_fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111),\n                 fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return lamina_normalize(2.2 * n_xyz);\n}\n\nfloat lamina_noise_simplex(vec3 v) {\n  const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\n  const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i = floor(v + dot(v, C.yyy));\n  vec3 x0 = v - i + dot(i, C.xxx);\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min(g.xyz, l.zxy);\n  vec3 i2 = max(g.xyz, l.zxy);\n\n  //  x0 = x0 - 0. + 0.0 * C\n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n  // Permutations\n  i = mod(i, 289.0);\n  vec4 p = lamina_noise_permute(lamina_noise_permute(lamina_noise_permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y +\n                             vec4(0.0, i1.y, i2.y, 1.0)) +\n                    i.x + vec4(0.0, i1.x, i2.x, 1.0));\n\n  // Gradients\n  // ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0 / 7.0; // N=7\n  vec3 ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z); //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_); // mod(j,N)\n\n  vec4 x = x_ * ns.x + ns.yyyy;\n  vec4 y = y_ * ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4(x.xy, y.xy);\n  vec4 b1 = vec4(x.zw, y.zw);\n\n  vec4 s0 = floor(b0) * 2.0 + 1.0;\n  vec4 s1 = floor(b1) * 2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n  vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n  vec3 p0 = vec3(a0.xy, h.x);\n  vec3 p1 = vec3(a0.zw, h.y);\n  vec3 p2 = vec3(a1.xy, h.z);\n  vec3 p3 = vec3(a1.zw, h.w);\n\n  // Normalise gradients\n  vec4 norm =\n      lamina_noise_taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m =\n      max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\n  m = m * m;\n  return lamina_normalize(42.0 *\n         dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3))));\n}\n\nvec3 lamina_noise_simplex3(vec3 x) {\n  float s = lamina_noise_simplex(vec3(x));\n  float s1 = lamina_noise_simplex(vec3(x.y - 19.1, x.z + 33.4, x.x + 47.2));\n  float s2 = lamina_noise_simplex(vec3(x.z + 74.2, x.x - 124.5, x.y + 99.4));\n  vec3 c = vec3(s, s1, s2);\n  return c;\n}\n\nvec3 lamina_noise_curl(vec3 p) {\n  const float e = .1;\n  vec3 dx = vec3(e, 0.0, 0.0);\n  vec3 dy = vec3(0.0, e, 0.0);\n  vec3 dz = vec3(0.0, 0.0, e);\n\n  vec3 p_x0 = lamina_noise_simplex3(p - dx);\n  vec3 p_x1 = lamina_noise_simplex3(p + dx);\n  vec3 p_y0 = lamina_noise_simplex3(p - dy);\n  vec3 p_y1 = lamina_noise_simplex3(p + dy);\n  vec3 p_z0 = lamina_noise_simplex3(p - dz);\n  vec3 p_z1 = lamina_noise_simplex3(p + dz);\n\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n  const float divisor = 1.0 / (2.0 * e);\n  return normalize(vec3(x, y, z) * divisor);\n}\n\nvec3 lamina_permute(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 lamina_dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\n// From: https://github.com/Erkaman/glsl-worley\nfloat lamina_noise_worley(vec3 P) {\n  float jitter = 1.;\n  bool manhattanDistance = false; \n\n  float K = 0.142857142857; // 1/7\n  float Ko = 0.428571428571; // 1/2-K/2\n  float  K2 = 0.020408163265306; // 1/(7*7)\n  float Kz = 0.166666666667; // 1/6\n  float Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = lamina_permute(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = lamina_permute(p + Pi.y - 1.0);\n\tvec3 p2 = lamina_permute(p + Pi.y);\n\tvec3 p3 = lamina_permute(p + Pi.y + 1.0);\n\n\tvec3 p11 = lamina_permute(p1 + Pi.z - 1.0);\n\tvec3 p12 = lamina_permute(p1 + Pi.z);\n\tvec3 p13 = lamina_permute(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = lamina_permute(p2 + Pi.z - 1.0);\n\tvec3 p22 = lamina_permute(p2 + Pi.z);\n\tvec3 p23 = lamina_permute(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = lamina_permute(p3 + Pi.z - 1.0);\n\tvec3 p32 = lamina_permute(p3 + Pi.z);\n\tvec3 p33 = lamina_permute(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = lamina_dist(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 = lamina_dist(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = lamina_dist(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = lamina_dist(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = lamina_dist(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = lamina_dist(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = lamina_dist(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = lamina_dist(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = lamina_dist(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\n  vec2 F = sqrt(d11.xy);\n\treturn F.x; // F1, F2\n\n}\n\nfloat lamina_noise_swirl(vec3 position) {\n    float scale = 0.1;\n    float freq = 4. * scale;\n    float t = 1.;\n\n    vec3 pos = (position * scale) + lamina_noise_curl(position * 7. * scale);\n\n    float worley1 = 1. - lamina_noise_worley((pos * (freq * 2.)) +  (t * 2.));\n    float worley2 = 1. - lamina_noise_worley((pos * (freq * 4.)) +  (t * 4.));\n    float worley3 = 1. - lamina_noise_worley((pos * (freq * 8.)) +  (t * 8.));\n    float worley4 = 1. - lamina_noise_worley((pos * (freq * 16.)) +  (t * 16.));\n    \n    float fbm1 = worley1 * .625 + worley2 * .25 + worley3 * .125;\n    float fbm2 = worley2 * .625 + worley3 * .25 + worley4 * .125;\n    float fbm3 = worley3 * .75 + worley4 * .25;\n\n    vec3 curlWorleyFbm = vec3(fbm1, fbm2, fbm3);\n    float curlWorley = curlWorleyFbm.r * .625 + curlWorleyFbm.g * .25 + \n        curlWorleyFbm.b * .125;\n\n    return curlWorley;\n}\n  \n  \n`;\n\nvar HelpersChunk = /* glsl */\n`\n\nfloat lamina_map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat lamina_normalize(float v) { return lamina_map(v, -1.0, 1.0, 0.0, 1.0); }\n`;\n\nclass LayerMaterial$1 extends CustomShaderMaterial {\n  constructor({\n    color,\n    alpha,\n    lighting,\n    layers,\n    name,\n    ...props\n  } = {}) {\n    super({\n      baseMaterial: ShadingTypes[lighting || 'basic'],\n      ...props\n    });\n    this.name = 'LayerMaterial';\n    this.layers = [];\n    this.lighting = 'basic';\n\n    const _baseColor = color || 'white';\n\n    const _alpha = alpha != null ? alpha : 1;\n\n    this.uniforms = {\n      u_lamina_color: {\n        value: typeof _baseColor === 'string' ? new THREE.Color(_baseColor).convertSRGBToLinear() : _baseColor\n      },\n      u_lamina_alpha: {\n        value: _alpha\n      }\n    };\n    this.layers = layers || this.layers;\n    this.lighting = lighting || this.lighting;\n    this.name = name || this.name;\n    this.refresh();\n  }\n\n  genShaders() {\n    let vertexVariables = '';\n    let fragmentVariables = '';\n    let vertexShader = '';\n    let fragmentShader = '';\n    let uniforms = {};\n    this.layers.filter(l => l.visible).forEach(l => {\n      // l.buildShaders(l.constructor)\n      vertexVariables += l.vertexVariables + '\\n';\n      fragmentVariables += l.fragmentVariables + '\\n';\n      vertexShader += l.vertexShader + '\\n';\n      fragmentShader += l.fragmentShader + '\\n';\n      uniforms = { ...uniforms,\n        ...l.uniforms\n      };\n    });\n    uniforms = { ...uniforms,\n      ...this.uniforms\n    };\n    return {\n      uniforms,\n      vertexShader: `\n        ${HelpersChunk}\n        ${NoiseChunk}\n        ${vertexVariables}\n\n        void main() {\n          vec3 lamina_finalPosition = position;\n          vec3 lamina_finalNormal = normal;\n\n          ${vertexShader}\n\n          csm_Position = lamina_finalPosition;\n          csm_Normal = lamina_finalNormal;\n        }\n        `,\n      fragmentShader: `\n        ${HelpersChunk}\n        ${NoiseChunk}\n        ${BlendModesChunk}\n        ${fragmentVariables}\n\n        uniform vec3 u_lamina_color;\n        uniform float u_lamina_alpha;\n\n        void main() {\n          vec4 lamina_finalColor = vec4(u_lamina_color, u_lamina_alpha);\n\n          ${fragmentShader}\n\n          csm_DiffuseColor = lamina_finalColor;\n         \n        }\n        `\n    };\n  }\n\n  refresh() {\n    const {\n      uniforms,\n      fragmentShader,\n      vertexShader\n    } = this.genShaders();\n    super.update({\n      fragmentShader,\n      vertexShader,\n      uniforms\n    });\n  }\n\n  serialize() {\n    return {\n      constructor: 'LayerMaterial',\n      properties: {\n        color: this.color,\n        alpha: this.alpha,\n        name: this.name,\n        lighting: this.lighting\n      }\n    };\n  }\n\n  set color(v) {\n    var _this$uniforms, _this$uniforms$u_lami;\n\n    if ((_this$uniforms = this.uniforms) != null && (_this$uniforms$u_lami = _this$uniforms.u_lamina_color) != null && _this$uniforms$u_lami.value) this.uniforms.u_lamina_color.value = typeof v === 'string' ? new THREE.Color(v).convertSRGBToLinear() : v;\n  }\n\n  get color() {\n    var _this$uniforms2, _this$uniforms2$u_lam;\n\n    return (_this$uniforms2 = this.uniforms) == null ? void 0 : (_this$uniforms2$u_lam = _this$uniforms2.u_lamina_color) == null ? void 0 : _this$uniforms2$u_lam.value;\n  }\n\n  set alpha(v) {\n    this.uniforms.u_lamina_alpha.value = v;\n  }\n\n  get alpha() {\n    return this.uniforms.u_lamina_alpha.value;\n  }\n\n}\n\nvar LAYERS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LayerMaterial: LayerMaterial$1,\n  Abstract: Abstract,\n  Depth: Depth$1,\n  Color: Color$1,\n  Noise: Noise$1,\n  Fresnel: Fresnel$1,\n  Gradient: Gradient$1,\n  Matcap: Matcap$1,\n  Texture: Texture$1,\n  Displace: Displace$1,\n  Normal: Normal$1\n});\n\nfunction getPropsFromLayer(layer) {\n  // @ts-ignore\n  const constructor = LAYERS[layer.constructor];\n  const instance = new constructor();\n  let props = '';\n  Object.entries(layer.properties).forEach(([key, val]) => {\n    var _constructor2;\n\n    const defaultVal = (_constructor2 = constructor['u_' + key]) != null ? _constructor2 : instance[key];\n\n    switch (key) {\n      case 'name':\n        if (val !== layer.constructor) props += ` ${key}={${JSON.stringify(val)}}`;\n        break;\n\n      case 'visible':\n        if (!val) props += ` ${key}={${JSON.stringify(val)}}`;\n        break;\n\n      default:\n        if (val !== defaultVal) props += ` ${key}={${JSON.stringify(val)}}`;\n        break;\n    }\n  });\n  return props;\n}\n\nfunction serializedLayersToJSX(layers, material) {\n  const materialProps = getPropsFromLayer(material);\n  const jsx = `\n    <LayerMaterial${materialProps}>\n      ${layers.map(layer => {\n    const props = getPropsFromLayer(layer);\n    return `<${layer.constructor}${props} />`;\n  }).join('\\n\\t')}\n    </LayerMaterial>\n    `;\n  return jsx;\n}\n\nfunction getJSPropsFromLayer(layer) {\n  // @ts-ignore\n  const constructor = LAYERS[layer.constructor];\n  const instance = new constructor();\n  let props = '\\t';\n  let entries = Object.entries(layer.properties);\n  entries.forEach(([key, val], idx) => {\n    var _constructor;\n\n    const eol = '\\n\\t\\t';\n\n    if (key.includes('color')) {\n      const v = typeof val === \"string\" ? val : '#' + val.getHexString();\n      props += `${key}: ${JSON.stringify(v)},${eol}`;\n    } else {\n      const defaultVal = (_constructor = constructor['u_' + key]) != null ? _constructor : instance[key];\n\n      switch (key) {\n        case 'name':\n          if (val !== layer.constructor) props += `${key}: ${JSON.stringify(val)},${eol}`;\n          break;\n\n        case 'visible':\n          if (!val) props += `${key}:${JSON.stringify(val)},${eol}`;\n          break;\n\n        default:\n          if (val !== defaultVal) props += `${key}: ${JSON.stringify(val)},${eol}`;\n          break;\n      }\n    }\n  });\n  return props;\n}\n\nfunction serializedLayersToJS(layers, material) {\n  const materialProps = getJSPropsFromLayer(material);\n  const jsLayers = `${layers.map(l => {\n    return `new ${l.constructor}({\n      ${getJSPropsFromLayer(l)}\n      })`;\n  }).join(',\\n\\t\\t')}`;\n  const js = `\n  new LayerMaterial({\n    ${materialProps}\n    layers: [\n      ${jsLayers}\n    ]\n  })`;\n  return js;\n}\n\nextend({\n  LayerMaterial: LayerMaterial$1\n});\n\nfunction DynamicLeva({\n  name,\n  layers,\n  store,\n  setUpdate\n}) {\n  useControls(name, () => {\n    const o = {};\n    layers.forEach((layer, i) => {\n      const n = `${layer.label} ~${i}`;\n      o[n] = layer;\n\n      o[n].onChange = () => setUpdate([`${name}.${n}`, layer.label]);\n    });\n    return o;\n  }, {\n    store\n  }, [layers, name]);\n  return null;\n}\n\nconst DebugLayerMaterial = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, forwardRef) => {\n  var _ref$current, _ref$current2, _ref$current3;\n\n  const ref = React.useRef(null);\n  useImperativeHandle(forwardRef, () => ref.current);\n  const store = useCreateStore();\n  const [layers, setLayers] = React.useState({});\n  const [path, setPath] = React.useState(['', '']);\n  const textureLoader = useMemo(() => new TextureLoader(), []);\n  useControls({\n    'Copy JSX': button(() => {\n      const serialized = ref.current.layers.map(l => l.serialize());\n      const jsx = serializedLayersToJSX(serialized, ref.current.serialize());\n      navigator.clipboard.writeText(jsx);\n    }),\n    'Copy JS': button(() => {\n      const serialized = ref.current.layers.map(l => l.serialize());\n      const js = serializedLayersToJS(serialized, ref.current.serialize());\n      navigator.clipboard.writeText(js);\n    })\n  }, {\n    store\n  });\n  const {\n    Lighting\n  } = useControls('Base', {\n    Color: {\n      value: '#' + new Color$2(((_ref$current = ref.current) == null ? void 0 : _ref$current.color) || (props == null ? void 0 : props.color) || 'white').convertLinearToSRGB().getHexString(),\n      onChange: v => {\n        ref.current.color = v;\n      }\n    },\n    Alpha: {\n      value: ((_ref$current2 = ref.current) == null ? void 0 : _ref$current2.alpha) || (props == null ? void 0 : props.alpha) || 1,\n      min: 0,\n      max: 1,\n      onChange: v => {\n        ref.current.alpha = v;\n      }\n    },\n    Lighting: {\n      value: ((_ref$current3 = ref.current) == null ? void 0 : _ref$current3.lighting) || (props == null ? void 0 : props.lighting) || 'basic',\n      options: Object.keys(ShadingTypes)\n    }\n  }, {\n    store\n  });\n  const [args, otherProps] = useMemo(() => getLayerMaterialArgs({ ...props,\n    lighting: Lighting\n  }), [props, Lighting]);\n  React.useEffect(() => {\n    const layers = ref.current.layers;\n    const schema = {};\n    layers.forEach((layer, i) => {\n      if (layer.getSchema) schema[`${layer.name} ~${i}`] = layer.getSchema();\n    });\n    setLayers(schema);\n  }, [children]);\n  React.useEffect(() => {\n    const data = store.getData();\n    const updatedData = data[path[0]];\n\n    if (updatedData) {\n      const split = path[0].split('.');\n      const index = parseInt(split[0].split(' ~')[1]);\n      const property = path[1];\n      const id = ref.current.layers[index].uuid;\n      const uniform = ref.current.uniforms[`u_${id}_${property}`];\n      const layer = ref.current.layers[index];\n\n      if (property !== 'map') {\n        layer[property] = updatedData.value;\n\n        if (uniform) {\n          uniform.value = getUniform(updatedData.value);\n        } else {\n          layer.buildShaders(layer.constructor);\n          ref.current.refresh();\n        }\n      } else {\n\n        (async () => {\n          try {\n            if (updatedData.value) {\n              const t = await textureLoader.loadAsync(updatedData.value);\n              layer[property] = t;\n              uniform.value = t;\n            } else {\n              layer[property] = undefined;\n              uniform.value = undefined;\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        })();\n      }\n    }\n  }, [path]);\n  React.useLayoutEffect(() => {\n    ref.current.layers = ref.current.__r3f.objects;\n    ref.current.refresh();\n  }, [children, args]);\n  React.useLayoutEffect(() => {\n    const root = document.body.querySelector('#root');\n    const div = document.createElement('div');\n\n    if (root) {\n      root.appendChild(div);\n      const levaRoot = createRoot(div);\n      levaRoot.render( /*#__PURE__*/React.createElement(LevaPanel, {\n        titleBar: {\n          title: props.name || ref.current.name\n        },\n        store: store\n      }));\n    }\n\n    return () => {\n      div.remove();\n    };\n  }, [props.name]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.entries(layers).map(([name, layers], i) => /*#__PURE__*/React.createElement(DynamicLeva, {\n    key: `${name} ~${i}`,\n    name: name,\n    layers: layers,\n    store: store,\n    setUpdate: setPath\n  })), /*#__PURE__*/React.createElement(\"layerMaterial\", _extends({\n    args: [args],\n    ref: ref\n  }, otherProps), children));\n});\n\nextend({\n  LayerMaterial: LayerMaterial$1,\n  Depth_: Depth$1,\n  Color_: Color$1,\n  Noise_: Noise$1,\n  Fresnel_: Fresnel$1,\n  Gradient_: Gradient$1,\n  Matcap_: Matcap$1,\n  Texture_: Texture$1,\n  Displace_: Displace$1,\n  Normal_: Normal$1\n});\nconst LayerMaterial = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  useImperativeHandle(forwardRef, () => ref.current);\n  React.useLayoutEffect(() => {\n    ref.current.layers = ref.current.__r3f.objects;\n    ref.current.refresh();\n  }, [children]);\n  const [args, otherProps] = useMemo(() => getLayerMaterialArgs(props), [props]);\n  return /*#__PURE__*/React.createElement(\"layerMaterial\", _extends({\n    args: [args],\n    ref: ref\n  }, otherProps), children);\n});\n\nfunction getNonUniformArgs(props) {\n  return [{\n    mode: props == null ? void 0 : props.mode,\n    visible: props == null ? void 0 : props.visible,\n    type: props == null ? void 0 : props.type,\n    mapping: props == null ? void 0 : props.mapping,\n    map: props == null ? void 0 : props.map,\n    axes: props == null ? void 0 : props.axes\n  }];\n}\n\nconst Depth = /*#__PURE__*/React.forwardRef((props, forwardRef) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"depth_\", _extends({\n    args: getNonUniformArgs(props),\n    ref: forwardRef\n  }, props));\n});\nconst Color = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"color_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Noise = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"noise_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Fresnel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"fresnel_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Gradient = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"gradient_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Matcap = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"matcap_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Texture = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"texture_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Displace = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"displace_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\nconst Normal = /*#__PURE__*/React.forwardRef((props, ref) => {\n  //@ts-ignore\n  return /*#__PURE__*/React.createElement(\"normal_\", _extends({\n    ref: ref,\n    args: getNonUniformArgs(props)\n  }, props));\n});\n\nexport { Color, DebugLayerMaterial, Depth, Displace, Fresnel, Gradient, LayerMaterial, Matcap, Noise, Normal, Texture };\n", "import { Material, MathUtils } from 'three';\nimport hash from 'object-hash';\nimport tokenize from 'glsl-tokenizer';\nimport stringify from 'glsl-token-string';\nimport tokenFunctions from 'glsl-token-functions';\n\nvar keywords = {\n  position: 'csm_Position',\n  positionRaw: 'csm_PositionRaw',\n  pointSize: 'csm_PointSize',\n  fragColor: 'csm_FragColor',\n  // PBR\n  diffuseColor: 'csm_DiffuseColor',\n  normal: 'csm_Normal',\n  roughness: 'csm_Roughness',\n  metalness: 'csm_Metalness',\n  emissive: 'csm_Emissive'\n};\n\nconst defaultPatchMap = {\n  // VERT\n  [`${keywords.normal}`]: {\n    '#include <beginnormal_vertex>': `\n    vec3 objectNormal = ${keywords.normal};\n    #ifdef USE_TANGENT\n\t    vec3 objectTangent = vec3( tangent.xyz );\n    #endif\n    `\n  },\n  [`${keywords.position}`]: {\n    '#include <begin_vertex>': `\n    vec3 transformed = ${keywords.position};\n  `\n  },\n  [`${keywords.positionRaw}`]: {\n    '#include <begin_vertex>': `\n    vec4 csm_positionUnprojected = ${keywords.positionRaw};\n    mat4x4 csm_unprojectMatrix = projectionMatrix * modelViewMatrix;\n    #ifdef USE_INSTANCING\n      csm_unprojectMatrix = csm_unprojectMatrix * instanceMatrix;\n    #endif\n    csm_positionUnprojected = inverse(csm_unprojectMatrix) * csm_positionUnprojected;\n    vec3 transformed = csm_positionUnprojected.xyz;\n  `\n  },\n  [`${keywords.pointSize}`]: {\n    'gl_PointSize = size;': `\n    gl_PointSize = ${keywords.pointSize};\n    `\n  },\n  // FRAG\n  [`${keywords.diffuseColor}`]: {\n    '#include <color_fragment>': `\n    #include <color_fragment>\n    diffuseColor = ${keywords.diffuseColor};\n  `\n  },\n  [`${keywords.fragColor}`]: {\n    '#include <dithering_fragment>': `\n    #include <dithering_fragment>\n    gl_FragColor  = ${keywords.fragColor};\n  `\n  },\n  [`${keywords.emissive}`]: {\n    'vec3 totalEmissiveRadiance = emissive;': `\n    vec3 totalEmissiveRadiance = ${keywords.emissive};\n    `\n  },\n  [`${keywords.roughness}`]: {\n    '#include <roughnessmap_fragment>': `\n    #include <roughnessmap_fragment>\n    roughnessFactor = ${keywords.roughness};\n    `\n  },\n  [`${keywords.metalness}`]: {\n    '#include <metalnessmap_fragment>': `\n    #include <metalnessmap_fragment>\n    metalnessFactor = ${keywords.metalness};\n    `\n  }\n};\nconst shaderMaterial_PatchMap = {\n  // VERT\n  [`${keywords.position}`]: {\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );': `\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( ${keywords.position}, 1.0 );\n  `\n  },\n  [`${keywords.positionRaw}`]: {\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );': `\n    gl_Position = ${keywords.position};\n  `\n  },\n  // FRAG\n  [`${keywords.diffuseColor}`]: {\n    'gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );': `\n    gl_FragColor = ${keywords.diffuseColor};\n  `\n  },\n  [`${keywords.fragColor}`]: {\n    'gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );': `\n    gl_FragColor = ${keywords.fragColor};\n  `\n  }\n};\n\nconst defaultDefinitions =\n/* glsl */\n`\n\n#ifdef IS_VERTEX\n    vec3 csm_Position = position;\n    vec4 csm_PositionRaw = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n    vec3 csm_Normal = normal;\n#else\n    #if defined IS_SHADERMATERIAL || defined IS_MESHDEPTHMATERIAL || defined IS_MESHNORMALMATERIAL\n        vec4 csm_DiffuseColor = vec4(1., 0., 1., 1.);\n        vec4 csm_FragColor = vec4(1., 0., 1., 1.);\n    #else\n        #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n            vec3 csm_Emissive = emissive;\n            float csm_Roughness = roughness;\n            float csm_Metalness = metalness;\n        #endif\n        \n        #ifdef USE_MAP\n            vec4 _csm_sampledDiffuseColor = texture2D(map, vUv);\n\n            #ifdef DECODE_VIDEO_TEXTURE\n            // inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n            _csm_sampledDiffuseColor = vec4(mix(pow(_csm_sampledDiffuseColor.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), _csm_sampledDiffuseColor.rgb * 0.0773993808, vec3(lessThanEqual(_csm_sampledDiffuseColor.rgb, vec3(0.04045)))), _csm_sampledDiffuseColor.w);\n            #endif\n\n            vec4 csm_DiffuseColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n            vec4 csm_FragColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n        #else\n            vec4 csm_DiffuseColor = vec4(diffuse, opacity);\n            vec4 csm_FragColor = vec4(diffuse, opacity);\n        #endif\n    #endif\n#endif\n`;\n\nconst replaceAll = (str, find, rep) => str.split(find).join(rep);\n\nconst escapeRegExpMatch = function (s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nconst isExactMatch = (str, match) => {\n  return new RegExp(`\\\\b${escapeRegExpMatch(match)}\\\\b`).test(str);\n};\n\nfunction isConstructor(f) {\n  try {\n    // @ts-ignore\n    new f();\n  } catch (err) {\n    if (err.message.indexOf('is not a constructor') >= 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\nclass CustomShaderMaterial extends Material {\n  constructor({\n    baseMaterial,\n    fragmentShader,\n    vertexShader,\n    uniforms,\n    patchMap,\n    cacheKey,\n    ...opts\n  }) {\n    let base;\n\n    if (isConstructor(baseMaterial)) {\n      base = new baseMaterial(opts);\n    } else {\n      base = baseMaterial;\n      Object.assign(base, opts);\n    }\n\n    if (base.type === 'RawShaderMaterial') {\n      throw new Error('CustomShaderMaterial does not support RawShaderMaterial');\n    }\n\n    super();\n    this.uniforms = uniforms || {};\n    this._customPatchMap = patchMap || {};\n    this._fs = fragmentShader || '';\n    this._vs = vertexShader || '';\n    this._cacheKey = cacheKey;\n    this._base = baseMaterial;\n    this._type = base.type;\n    this._instanceID = MathUtils.generateUUID();\n\n    for (const key in base) {\n      let k = key;\n\n      if (key.startsWith('_')) {\n        k = key.split('_')[1];\n      } // @ts-ignore\n\n\n      if (this[k] === undefined) this[k] = 0; // @ts-ignore\n\n      this[k] = base[k];\n    }\n\n    this.update({\n      fragmentShader,\n      vertexShader,\n      uniforms,\n      cacheKey\n    });\n  }\n\n  update(opts) {\n    const uniforms = (opts == null ? void 0 : opts.uniforms) || {};\n    const fragmentShader = (opts == null ? void 0 : opts.fragmentShader) || this._fs;\n    const vertexShader = (opts == null ? void 0 : opts.vertexShader) || this._vs;\n    const serializedUniforms = Object.values(uniforms).reduce((prev, {\n      value\n    }) => {\n      return prev + JSON.stringify(value);\n    }, '');\n    this.uuid = (opts == null ? void 0 : opts.cacheKey == null ? void 0 : opts.cacheKey()) || hash([fragmentShader, vertexShader, serializedUniforms, this._instanceID]);\n    this.generateMaterial({\n      fragmentShader,\n      vertexShader,\n      uniforms\n    });\n  }\n\n  clone() {\n    // @ts-ignore\n    const c = new this.constructor({\n      baseMaterial: this._base,\n      fragmentShader: this._fs,\n      vertexShader: this._vs,\n      patchMap: this._customPatchMap,\n      uniforms: this.uniforms,\n      cacheKey: this._cacheKey\n    });\n\n    for (const key in this) {\n      if (key === 'uuid') continue; // @ts-ignore\n\n      c[key] = this[key];\n    }\n\n    return c;\n  }\n\n  generateMaterial({\n    fragmentShader,\n    vertexShader,\n    uniforms\n  }) {\n    const parsedFragmentShader = this.parseShader(fragmentShader);\n    const parsedVertexShader = this.parseShader(vertexShader);\n    this.uniforms = uniforms || {};\n\n    this.customProgramCacheKey = () => {\n      return this.uuid;\n    };\n\n    this.onBeforeCompile = shader => {\n      if (parsedFragmentShader) {\n        const patchedFragmentShader = this.patchShader(parsedFragmentShader, shader.fragmentShader);\n        shader.fragmentShader = this.getMaterialDefine() + patchedFragmentShader;\n      }\n\n      if (parsedVertexShader) {\n        const patchedVertexShader = this.patchShader(parsedVertexShader, shader.vertexShader);\n        shader.vertexShader = '#define IS_VERTEX;\\n' + patchedVertexShader;\n        shader.vertexShader = this.getMaterialDefine() + shader.vertexShader;\n      }\n\n      shader.uniforms = { ...shader.uniforms,\n        ...this.uniforms\n      };\n      this.uniforms = shader.uniforms;\n    };\n\n    this.needsUpdate = true;\n  }\n\n  getMaterialDefine() {\n    return `#define IS_${this._type.toUpperCase()};\\n`;\n  }\n\n  getPatchMapForMaterial() {\n    switch (this._type) {\n      case 'ShaderMaterial':\n        return shaderMaterial_PatchMap;\n\n      default:\n        return defaultPatchMap;\n    }\n  }\n\n  patchShader(customShader, shader) {\n    let patchedShader = shader;\n    const patchMap = { ...this.getPatchMapForMaterial(),\n      ...this._customPatchMap\n    };\n    Object.keys(patchMap).forEach(name => {\n      Object.keys(patchMap[name]).forEach(key => {\n        if (isExactMatch(customShader.main, name)) {\n          patchedShader = replaceAll(patchedShader, key, patchMap[name][key]);\n        }\n      });\n    });\n    patchedShader = patchedShader.replace('void main() {', `\n          ${customShader.header}\n          void main() {\n            ${defaultDefinitions}\n            ${customShader.main}\n          `);\n    patchedShader = customShader.defines + patchedShader;\n    return patchedShader;\n  }\n\n  parseShader(shader) {\n    if (!shader) return; // Strip comments\n\n    const s = shader.replace(/\\/\\*\\*(.*?)\\*\\/|\\/\\/(.*?)\\n/gm, '');\n    const tokens = tokenize(s);\n    const funcs = tokenFunctions(tokens);\n    const mainIndex = funcs.map(e => {\n      return e.name;\n    }).indexOf('main');\n    const variables = stringify(tokens.slice(0, mainIndex >= 0 ? funcs[mainIndex].outer[0] : undefined));\n    const mainBody = mainIndex >= 0 ? this.getShaderFromIndex(tokens, funcs[mainIndex].body) : '';\n    return {\n      defines: '',\n      header: variables,\n      main: mainBody\n    };\n  }\n\n  getShaderFromIndex(tokens, index) {\n    return stringify(tokens.slice(index[0], index[1]));\n  }\n\n}\n\nexport { CustomShaderMaterial as default };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA,MAEbb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;AC9CA;AAAA;AAAA,WAAO,UAAU;AAAA,MAEfrJA;AAAA;AAAA,QAAI,OAAO;AAEX,WAAO,UAAU,KAAK,MAAM,EAAE,OAAO;AAAA,MACltFD;AAAA;AACA,QAAI,OAAO;AAIX,WAAO,KAAK,MAAM,EAAE,OAAO,SAAU,GAAG;AACtC,aAAO,CAAC,kBAAkB,KAAK,CAAC;AAAA,IAClC,CAAC;AAED,WAAO,UAAU,KAAK,OAAO;AAAA,MAEzpED;AAAA;AAAA,WAAO,UAAUA;AAEjB,QAAI,cAAc;AAAlB,QACI,YAAY;AADhB,QAEI,cAAc;AAFlB,QAGI,gBAAgB;AAHpB,QAII,gBAAgB;AAEpB,QAAI,SAAS;AAAb,QACI,QAAQ;AADZ,QAEI,gBAAgB;AAFpB,QAGI,eAAe;AAHnB,QAII,eAAe;AAJnB,QAKI,WAAW;AALf,QAMI,UAAU;AANd,QAOI,QAAQ;AAPZ,QAQI,QAAQ;AARZ,QASI,UAAU;AATd,QAUI,UAAU;AAVd,QAWI,aAAa;AAXjB,QAYI,MAAM;AAZV,QAaI,MAAM;AAEV,QAAI,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,aAASA,UAAS,KAAK;AACrB,UAAI,IAAI,GACJ,QAAQ,GACR,OAAO,QACP,GACA,MACA,UAAU,CAAC,GACX,SAAS,CAAC,GACV,YAAY,GACZ,aAAa,GACb,OAAO,GACP,MAAM,GACN,QAAQ,GACR,QAAQ,OACR,aAAa,OACb,QAAQ,IACR;AAEJ,YAAM,OAAO,CAAC;AACd,UAAI,cAAc;AAClB,UAAI,cAAc;AAClB,UAAI,IAAI,YAAY,UAAU;AAC5B,sBAAc;AACd,sBAAc;AAAA,MAChB;AAGA,UAAI,eAAe,CAAC,GAAG,eAAe,CAAC;AACvC,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,qBAAa,YAAY,MAAM;AAAA,MACjC;AACA,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,qBAAa,YAAY,MAAM;AAAA,MACjC;AAEA,aAAO,SAAS,MAAM;AACpB,iBAAS,CAAC;AACV,YAAI,SAAS;AAAM,iBAAO,MAAM,IAAI;AACpC,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,MAAM,MAAM;AACnB,YAAI,KAAK,QAAQ;AACf,iBAAO,KAAK;AAAA,YACV,MAAM,IAAI;AAAA,YACV;AAAA,YACA,UAAU;AAAA,YACV;AAAA,YACA,QAAQ;AAAA,UACV,CAAC;AAAA,QACH;AAAA,MACF;AAEA,eAAS,MAAM,OAAO;AACpB,YAAI;AAEJ,YAAI,MAAM;AAAU,kBAAQ,MAAM,SAAS;AAE3C,iBAAS,MAAM,QAAQ,SAAS,IAAI;AACpC,cAAM,MAAM;AAGZ,YAAIC;AAEJ,eAAM,IAAI,MAAM,IAAI,IAAI,KAAK;AAC3B,UAAAA,QAAO;AAEP,kBAAO,MAAM;AAAA,YACX,KAAK;AAAe,kBAAI,cAAc;AAAG;AAAA,YACzC,KAAK;AAAc,kBAAI,aAAa;AAAG;AAAA,YACvC,KAAK;AAAc,kBAAI,aAAa;AAAG;AAAA,YACvC,KAAK;AAAU,kBAAI,SAAS;AAAG;AAAA,YAC/B,KAAK;AAAS,kBAAI,QAAQ;AAAG;AAAA,YAC7B,KAAK;AAAK,kBAAI,IAAI;AAAG;AAAA,YACrB,KAAK;AAAO,kBAAI,QAAQ;AAAG;AAAA,YAC3B,KAAK;AAAO,kBAAI,UAAU;AAAG;AAAA,YAC7B,KAAK;AAAY,kBAAI,WAAW;AAAG;AAAA,YACnC,KAAK;AAAQ,kBAAI,OAAO;AAAG;AAAA,UAC7B;AAEA,cAAGA,UAAS,GAAG;AACb,oBAAO,MAAMA,QAAO;AAAA,cAClB,KAAK;AAAM,sBAAM;AAAG,kBAAE;AAAM;AAAA,cAC5B;AAAS,kBAAE;AAAK;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AAEA,iBAAS;AACT,gBAAQ,MAAM,MAAM,CAAC;AACrB,eAAO;AAAA,MACT;AAEA,eAAS,IAAI,OAAO;AAClB,YAAG,QAAQ,QAAQ;AACjB,gBAAM,QAAQ,KAAK,EAAE,CAAC;AAAA,QACxB;AAEA,eAAO;AACP,cAAM,OAAO;AACb,eAAO;AAAA,MACT;AAEA,eAAS,SAAS;AAChB,kBAAU,QAAQ,SAAS,CAAC,IAAI;AAEhC,YAAG,SAAS,OAAO,MAAM,KAAK;AAC5B,kBAAQ,QAAQ,IAAI;AACpB,iBAAO;AACP,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,SAAS,OAAO,MAAM,KAAK;AAC5B,kBAAQ,QAAQ,IAAI;AACpB,iBAAO;AACP,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,MAAM,KAAK;AACZ,iBAAO;AACP,kBAAQ,QAAQ;AAChB,iBAAO;AAAA,QACT;AAEA,YAAG,KAAK,KAAK,CAAC,GAAG;AACf,iBAAO;AACP,kBAAQ,QAAQ;AAChB,iBAAO;AAAA,QACT;AAEA,gBAAQ,KAAK,KAAK,CAAC;AACnB,qBAAa,SAAS,KAAK,CAAC;AAE5B,gBAAQ,QAAQ;AAChB,eAAO,QAAQ,UAAU,aAAa,WAAW;AACjD,eAAO;AAAA,MACT;AAEA,eAAS,aAAa;AACpB,YAAG,SAAS,KAAK,CAAC,GAAG;AACnB,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,eAAe;AACtB,aAAI,MAAM,QAAQ,MAAM,SAAS,SAAS,MAAM;AAC9C,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,eAAe;AACtB,eAAO,aAAa;AAAA,MACtB;AAEA,eAAS,gBAAgB;AACvB,YAAG,MAAM,OAAO,SAAS,KAAK;AAC5B,kBAAQ,KAAK,CAAC;AACd,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,WAAW;AAClB,YAAG,SAAS,OAAO,KAAK,KAAK,CAAC,GAAG;AAC/B,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,YAAG,SAAS,OAAO,MAAM,KAAK;AAC5B,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,YAAG,SAAS,OAAO,MAAM,KAAK;AAC5B,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,YAAG,MAAM,OAAO,QAAQ,QAAQ;AAC9B,iBAAM,mBAAmB,OAAO;AAAE;AAElC,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,YAAG,MAAM,OAAO,MAAM,OAAO,MAAM,KAAK;AACtC,cAAG,QAAQ;AAAQ,mBAAM,mBAAmB,OAAO;AAAE;AACrD,gBAAM,CAAC;AACP,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAI,wBAAwB,QAAQ,WAAW,KAAK,MAAM;AAC1D,YAAG,YAAY,KAAK,CAAC,KAAK,uBAAuB;AAC/C,iBAAM,mBAAmB,OAAO;AAAE;AAClC,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,mBAAmB,KAAK;AAC/B,YAAI,IAAI,GACJ,KACA;AAEJ,WAAG;AACD,gBAAM,UAAU,QAAQ,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;AAC7D,gBAAM,UAAU;AAEhB,cAAG,QAAQ,IAAI;AACb,gBAAG,MAAM,IAAI,SAAS;AAAG;AACzB,kBAAM,IAAI,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE;AAAA,UAC/B;AAEA,gBAAM,GAAG;AAET,mBAAS,IAAI;AACb,oBAAU,QAAQ,MAAM,IAAI,MAAM;AAClC,iBAAO,QAAQ;AAAA,QACjB,SAAQ;AAAA,MACV;AAEA,eAAS,MAAM;AACb,YAAG,eAAe,KAAK,CAAC,GAAG;AACzB,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,UAAU;AACjB,YAAG,MAAM,KAAK;AACZ,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,OAAO,KAAK,CAAC,GAAG;AACjB,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,MAAM,OAAO,QAAQ,WAAW,KAAK,QAAQ,OAAO,KAAK;AAC1D,iBAAO;AACP,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,QAAQ,KAAK,CAAC,GAAG;AAClB,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,UAAU;AACjB,YAAG,MAAM,KAAK;AACZ,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,eAAK;AAAA,QACP;AAEA,YAAG,OAAO,KAAK,CAAC,GAAG;AACjB,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,aAAK,MAAM,OAAO,MAAM,QAAQ,OAAO,KAAK,IAAI,GAAG;AACjD,kBAAQ,KAAK,CAAC;AACd,iBAAO;AACP,iBAAO,IAAI;AAAA,QACb;AAEA,YAAG,QAAQ,KAAK,CAAC,GAAG;AAClB,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AAEA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAEA,eAAS,YAAY;AACnB,YAAG,WAAW,KAAK,CAAC,GAAG;AACrB,cAAI,aAAa,QAAQ,KAAK,EAAE;AAChC,cAAG,aAAa,aAAa;AAC3B,mBAAO;AAAA,UACT,WAAU,aAAa,aAAa;AAClC,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO;AAAA,UACT;AACA,gBAAM,QAAQ,KAAK,EAAE,CAAC;AACtB,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,gBAAQ,KAAK,CAAC;AACd,eAAO;AACP,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AAAA;AAAA;;;ACtXA;AAAA;AAAA,QAAIC,YAAW;AAEf,WAAO,UAAU;AAEjB,aAAS,eAAe,KAAK,KAAK;AAChC,UAAI,YAAYA,UAAS,GAAG;AAC5B,UAAI,SAAS,CAAC;AAEd,eAAS,OAAO,OAAO,UAAU,GAAG,CAAC;AACrC,eAAS,OAAO,OAAO,UAAU,IAAI,CAAC;AAEtC,aAAO;AAAA,IACT;AAAA;AAAA;;;ACZA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,cAAc,QAAQ;AAC7B,UAAI,OAAQ;AACZ,UAAI,QAAQ;AAEZ,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,eAAO,QAAS,OAAO,GAAG,SAAS,aACjC,OAAO,GAAG,SAAS;AAGrB,gBAAQ,OAAO,GAAG,MAAM;AAAA,UACtB,KAAK;AAAK,mBAAO,GAAG,QAAQ,OAAO,UAAU;AAAO;AAAA,UACpD,KAAK;AAAK,mBAAO,GAAG,QAAQ,OAAO,QAAQ;AAAS,mBAAO;AAAO;AAAA,UAClE,KAAK;AAAK,mBAAO,GAAG,QAAQ,EAAE;AAAO;AAAA,UACrC;AAAU,mBAAO,GAAG,QAAQ;AAAA,QAC9B;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,QAAQ,IAAI;AAChB,YAAI,MAAM,SAAS,WAAW,MAAM,SAAS;AAAW;AACxD,2BAAmB;AACnB,YAAI,OAAO,OAAO,SAAS;AAAS;AACpC,2BAAmB;AACnB;AACA,YAAI,OAAO,OAAO,SAAS;AAAK;AAEhC,eAAO,OAAO,UAAU,OAAO,OAAO,SAAS,OAAO,OAAO,OAAO,SAAS,KAAK;AAChF,iBAAO,SAAS;AAAA,QAClB;AACA,YAAI,OAAO,UAAU,OAAO,OAAO,SAAS;AAAK,iBAAO,OAAO;AAAA,MACjE;AAEA,aAAO;AAEP,eAAS,qBAAqB;AAC5B,eAAO,OAAO,WACZ,OAAO,OAAO,SAAS,gBACvB,OAAO,OAAO,SAAS,OACvB,OAAO,OAAO,SAAS,OACvB,OAAO,OAAO,SAAS;AACtB;AAAA,MACL;AAAA,IACF;AAAA;AAAA;;;AC7CA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,WAAW,QAAQ;AAC1B,UAAI,QAAS,CAAC,CAAC;AACf,UAAI,MAAS,MAAM;AACnB,UAAI,SAAS;AAEb,UAAI,CAAC,UAAU,CAAC,OAAO;AAAQ,eAAO;AACtC,UAAI,EAAE,WAAW,OAAO,KAAK;AAC3B,cAAM,IAAI,MAAM,gGAAgG;AAAA,MAClH;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,QAAQ,MAAM;AAElB,YAAI,QAAQ,QAAQ;AAClB,gBAAM,KAAK,EAAE,GAAG;AAAA,QAClB,WACI,QAAQ,QAAQ;AAClB,gBAAM,OAAO,IAAI,CAAC;AAAA,QACpB;AAEA,cAAM,QAAQ,MAAM,MAAM,SAAS;AACnC,cAAM,QAAQ,MAAM,MAAM;AAC1B,iBAAS,MAAM;AAAA,MACjB;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC7BA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,WAAW,QAAQ;AAC1B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,cAAM,WAAW;AAEjB,YAAI,MAAM,SAAS;AAAS;AAE5B,YAAI,IAAI;AACR,eAAO,OAAO,EAAE,MAAM,OAAO,GAAG,SAAS;AAAa;AACtD,YAAI,CAAC,OAAO;AAAI;AAChB,YAAI,OAAO,GAAG,SAAS;AAAY;AACnC,YAAI,OAAO,GAAG,SAAS;AAAK;AAE5B,cAAM,WAAW;AAAA,MACnB;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACnBA;AAAA;AAAA,WAAO,UAAU;AAAA,MACb,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,IACT;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAU;AAAA,MACb,aAAa;AAAA,MACb,SAAS;AAAA,MACT,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IACd;AAAA;AAAA;;;ACtBA;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,kBAAkB;AAEtB,WAAO,UAAU;AAGjB,aAAS,QAAQ,QAAQ;AACvB,UAAI,MAAM;AAKV,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,OAAQ,MAAM;AAElB,cAAM,aAAa;AACnB,cAAM,cAAc;AACpB,YAAI,SAAS,WAAW,SAAS;AAAW;AAC5C,cAAM,IAAI;AAEV,uBAAe,CAAE;AACjB,YAAI,OAAO,KAAK,SAAS;AAAY;AACrC,YAAI,CAAC,YAAY,OAAO,KAAK;AAAO;AACpC,cAAM,aAAa;AAAA,MACrB;AAYA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,WAAW,OAAO;AACtB,YAAI,OAAW,SAAS;AACxB,YAAI,OAAW,SAAS;AAExB,iBAAS,cAAc;AAEvB,YAAI,SAAS,WAAW;AACtB,cAAI,gBAAgB;AAAO;AAAA,QAC7B,WACI,SAAS;AAAS;AAEtB,cAAM,IAAI;AAEV,4BAAoB;AACpB,YAAI,OAAO,KAAK,SAAS;AAAS;AAClC,eAAO,OAAO,cAAc;AAC5B,4BAAoB;AAGpB,YAAI,OAAO,KAAK,SAAS,KAAK;AAC5B;AAEA,yBAAe,CAAE;AACjB,iBAAO,OAAO,QAAQ,OAAO,KAAK,SAAS,KAAK;AAC9C,gBAAI,OAAO,KAAK,SAAS,aAAa,OAAO,KAAK,SAAS;AAAS;AACpE;AACA,2BAAe,CAAE;AACjB,gBAAI,OAAO,KAAK,SAAS;AAAS;AAClC,mBAAO,OAAO,cAAc;AAC5B,2BAAe,CAAE;AACjB,gCAAoB;AACpB,2BAAe,CAAE;AACjB,gBAAI,OAAO,KAAK,SAAS;AAAK;AAC9B;AACA,2BAAe,CAAE;AAAA,UACnB;AAEA,cAAI;AACJ;AAAA,QACF;AAGA,eAAO,OAAO,QAAQ,OAAO,KAAK,SAAS,KAAK;AAC9C,cAAI,OAAO,KAAK,SAAS,KAAK;AAC5B;AACA,2BAAe,CAAE;AACjB,gBAAI,OAAO,KAAK,cAAc,OAAO,KAAK,SAAS;AAAS;AAAA,UAC9D,OAAO;AACL,2BAAe,CAAE;AACjB,uBAAW;AACX,2BAAe,CAAE;AACjB;AAAA,UACF;AAAA,QACF;AAEA,YAAI;AAAA,MACN;AAOA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,MAAM,SAAS;AAAW;AAC9B,YAAI,MAAM,SAAS;AAAU;AAC7B,cAAM,IAAI;AACV,uBAAe,CAAE;AACjB,YAAI,OAAO,KAAK,SAAS;AAAS;AAElC;AACA,uBAAe,CAAE;AACjB,YAAI,OAAO,OAAO,SAAS;AAAK;AAChC,uBAAe,CAAE;AAEjB,eAAO,OAAO,KAAK,SAAS,WAAW,OAAO,KAAK,SAAS,WAAW;AACrE,aAAG;AACD;AACA,2BAAe,CAAE;AACjB,mBAAO,KAAK,eAAe;AAC3B,mBAAO,KAAK,cAAc;AAC1B;AACA,gCAAoB;AAAA,UACtB,SAAS,OAAO,KAAK,SAAS;AAE9B,cAAI,OAAO,KAAK,SAAS;AAAK;AAC9B,yBAAe;AAAA,QACjB;AAEA;AACA,uBAAe,CAAE;AACjB,YAAI,OAAO,KAAK,SAAS;AAAS;AAClC,eAAO,KAAK,cAAc;AAC1B,uBAAe,CAAE;AAEjB,eAAO,OAAO,EAAE,KAAK,SAAS,KAAK;AACjC,yBAAe,CAAE;AACjB;AACA,yBAAe,CAAE;AACjB,cAAI,OAAO,KAAK,SAAS;AAAS,mBAAO,KAAK,cAAc;AAC5D,yBAAe,CAAE;AAAA,QACnB;AAAA,MACF;AAEA,aAAO;AAEP,eAAS,eAAe,GAAG;AACzB,eAAO,OAAO,QAAQ,OAAO,KAAK,SAAS;AAAc;AAAA,MAC3D;AAEA,eAAS,sBAAsB;AAC7B,eAAO,OAAO,SACT,OAAO,KAAK,SAAS,aACrB,OAAO,KAAK,SAAS,OACrB,OAAO,KAAK,SAAS,OACrB,OAAO,KAAK,SAAS;AACvB;AAAA,MACL;AAEA,eAAS,aAAa;AACpB,YAAI,CAAC,OAAO;AAAM;AAClB,YAAI,OAAO,KAAK,SAAS;AAAK;AAC9B,YAAI,QAAQ;AACZ,YAAI,IAAI;AACR,WAAG;AACD,cAAI,OAAO,KAAK,SAAS;AAAK;AAC9B,cAAI,OAAO,KAAK,SAAS;AAAK;AAC9B,cAAI,OAAO,KAAK,SAAS;AAAK;AAAA,QAChC,SAAQ,SAAS,OAAO,EAAE;AAAA,MAC5B;AAAA,IACF;AAAA;AAAA;;;ACzKA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,iBAAiB,QAAQ,QAAQ;AACxC,iCAA4B,MAAM;AAClC,iCAA4B,MAAM;AAClC,sCAAiC,MAAM;AACvC,uCAAkC,MAAM;AAExC,UAAI,QAAU,SAAS,MAAM;AAC7B,UAAI,UAAU,UAAU,eAAe;AACvC,UAAI,MAAU,CAAC;AAEf,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,QAAQ,MAAM;AAClB,YAAI,OAAQ,MAAM;AAElB,cAAM,WAAW;AAEjB,YAAI,MAAM,SAAS;AAAS;AAC5B,YAAI,MAAM;AAAU;AACpB,YAAI,MAAM;AAAc;AAExB,YAAI,QAAQ;AAEZ,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,cAAI,IAAI,MAAM,MAAM;AACpB,cAAI,CAAC;AAAG;AACR,cAAI,CAAC,EAAE;AAAO;AAEd,kBAAQ;AAGR,cAAI;AAAG;AAEP,gBAAM,WAAW,MAAM;AACvB,gBAAM,OAAO,IAAI,QAAQ,IAAI,SAAS,QAAQ,MAAM,KAAK,KAAK,MAAM;AAAA,QACtE;AAIA,YAAI,CAAC,OAAO;AACV,gBAAM,WAAW,MAAM;AACvB,gBAAM,OAAO,IAAI,QAAQ,IAAI,SAAS,QAAQ,MAAM,KAAK,KAAK,MAAM;AAAA,QACtE;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB;AACxB,UAAI,IAAI;AAER,aAAO,SAAS,OAAO,MAAM;AAC3B,eAAO,OAAO,OAAO,KAAK,SAAS,EAAE;AAAA,MACvC;AAAA,IACF;AAEA,aAAS,SAAS,QAAQ;AACxB,UAAI,QAAQ,CAAC;AAEb,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO;AACnB,YAAI,MAAM,aAAa;AACrB,gBAAM,MAAM,SAAS,MAAM,MAAM,UAAU,CAAC;AAC5C,gBAAM,MAAM,OAAO,MAAM,QAAQ;AAAA,QACnC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACtEA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,SAAS,QAAQ;AACxB,UAAI,SAAS,CAAC;AAEd,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,OAAO,GAAG,SAAS;AAAO;AAC9B,eAAO,KAAK,OAAO,GAAG,IAAI;AAAA,MAC5B;AAEA,aAAO,OAAO,KAAK,EAAE;AAAA,IACvB;AAAA;AAAA;;;ACXA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,UAAW,QAAQ;AAC1B,UAAI,aAAa;AACjB,UAAI,WAAW;AACf,UAAI,aAAa;AACjB,UAAI,aAAa;AACjB,UAAI,YAAY;AAChB,UAAI,YAAY;AAChB,UAAI,WAAW;AACf,UAAI,SAAS,CAAC;AACd,UAAI,GAAG,GAAG;AAOV,WAAK,IAAI,GAAG,GAAG,IAAI,OAAO,QAAQ,KAAK;AACrC,gBAAQ,OAAO;AACf,YAAI,MAAM,SAAS,KAAK;AAEtB,cAAI,cAAc;AAAc;AAKhC,cAAI,aAAa,GAAG,OAAO,GAAG,GAAG,OAAO,CAAC;AACzC,cAAI,IAAI;AAAG;AACX,sBAAY;AAIZ,cAAI,aAAa,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,CAAC;AAC5C,cAAI,IAAI;AAAG;AACX,qBAAW;AAKX,cAAI,aAAa,GAAG,SAAS;AAC7B,cAAI,IAAI;AAAG;AACX,cAAI,OAAO,GAAG,SAAS;AAAS;AAChC,qBAAW,OAAO,GAAG;AAIrB,cAAI,aAAa,GAAG,SAAS;AAC7B,cAAI,IAAI;AAAG;AAEX,uBAAa;AACb,uBAAa;AACb,uBAAa,OAAO,GAAG;AACvB,sBAAY;AAMZ,cAAI,IAAI,aAAa,GAAG,SAAS;AACjC,kBAAQ,OAAO,MAAM,OAAO,GAAG,MAAM;AAAA,YACnC,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,0BAAY;AAAA,UAChB;AAAA,QACF,WACI,cAAc,MAAM,SAAS,KAAK;AACpC,cAAI,EAAE;AAAY;AAElB,iBAAO,KAAK;AAAA,YACV,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM,CAAC,aAAa,GAAG,CAAC;AAAA,YACxB,MAAM,CAAC,UAAU,YAAY,CAAC;AAAA,YAC9B,OAAO,CAAC,WAAW,IAAI,CAAC;AAAA,UAC1B,CAAC;AAAA,QACH;AAAA,MACF;AAOA,WAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAClC,gBAAQ,OAAO;AACf,YAAI,MAAM,SAAS,KAAK;AAGtB,cAAI,aAAa,GAAG,OAAO,GAAG,GAAG,OAAO,CAAC;AACzC,cAAI,IAAI;AAAG;AACX,sBAAY;AACZ,cAAI,aAAa,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,CAAC;AAC5C,cAAI,IAAI;AAAG;AACX,qBAAW;AACX,cAAI,aAAa,GAAG,SAAS;AAC7B,cAAI,IAAI;AAAG;AACX,cAAI,OAAO,GAAG,SAAS;AAAS;AAChC,qBAAW,OAAO,GAAG;AAIrB,cAAI,aAAa,GAAG,SAAS;AAC7B,cAAI,IAAI;AAAG;AACX,cAAI,OAAO,GAAG,SAAS;AAAY;AACnC,cAAI,OAAO,GAAG,SAAS;AAAU;AACjC,uBAAa,OAAO,GAAG;AAEvB,iBAAO,KAAK;AAAA,YACV,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM,CAAC,UAAU,YAAY,CAAC;AAAA,YAC9B,OAAO,CAAC,GAAG,IAAI,CAAC;AAAA,UAClB,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO,OAAO,KAAK,SAAU,GAAG,GAAG;AACjC,eAAO,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA,MAC9B,CAAC;AAED,eAAS,aAAc,OAAO,OAAO,MAAM;AACzC,iBAASC,KAAI,QAAQ,GAAGA,MAAK,GAAGA,MAAK;AACnC,cAAI,MAAM,OAAOA,GAAE;AAAG,mBAAOA;AAC7B,cAAI,QAAQ,KAAK,OAAOA,GAAE;AAAG,mBAAO;AAAA,QACtC;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,OAAQ,MAAM;AACrB,aAAO,SAAU,OAAO;AACtB,eAAO,MAAM,SAAS,eAAe,CAAC,QAAQ,MAAM,SAAS;AAAA,MAC/D;AAAA,IACF;AAEA,aAAS,UAAW,OAAO;AACzB,aAAO,MAAM,SAAS;AAAA,IACxB;AAAA;AAAA;;;AC7IA;AAAA;AAAA,KAAC,SAAS,GAAE;AAAC,UAAI;AAAE,kBAAU,OAAO,UAAQ,OAAO,UAAQ,EAAE,IAAE,cAAY,OAAO,UAAQ,OAAO,MAAI,OAAO,CAAC,KAAG,eAAa,OAAO,SAAO,IAAE,SAAO,eAAa,OAAO,SAAO,IAAE,SAAO,eAAa,OAAO,SAAO,IAAE,OAAM,EAAE,aAAW,EAAE;AAAA,IAAE,EAAE,WAAU;AAAC,aAAO,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,iBAAS,EAAE,GAAEC,IAAE;AAAC,cAAG,CAAC,EAAE,IAAG;AAAC,gBAAG,CAAC,EAAE,IAAG;AAAC,kBAAI,IAAE,cAAY,OAAO,aAAS;AAAQ,kBAAG,CAACA,MAAG;AAAE,uBAAO,EAAE,GAAE,IAAE;AAAE,kBAAG;AAAE,uBAAO,EAAE,GAAE,IAAE;AAAE,oBAAM,IAAI,MAAM,yBAAuB,IAAE,GAAG;AAAA,YAAC;AAAC,YAAAA,KAAE,EAAE,KAAG,EAAC,SAAQ,CAAC,EAAC;AAAE,cAAE,GAAG,GAAG,KAAKA,GAAE,SAAQ,SAASA,IAAE;AAAC,kBAAIC,KAAE,EAAE,GAAG,GAAGD;AAAG,qBAAO,EAAEC,MAAGD,EAAC;AAAA,YAAC,GAAEA,IAAEA,GAAE,SAAQ,GAAE,GAAE,GAAE,CAAC;AAAA,UAAC;AAAC,iBAAO,EAAE,GAAG;AAAA,QAAO;AAAC,iBAAQ,IAAE,cAAY,OAAO,aAAS,WAAQ,IAAE,GAAE,IAAE,EAAE,QAAO;AAAI,YAAE,EAAE,EAAE;AAAE,eAAO;AAAA,MAAC,EAAE,EAAC,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAAS,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC;AAAa,cAAI,IAAE,EAAE,QAAQ;AAAE,mBAAS,EAAEA,IAAEC,IAAE;AAAC,YAAAA,KAAE,EAAED,IAAEC,EAAC;AAAE,gBAAIC;AAAE,mBAAO,YAAUA,KAAE,kBAAgBD,GAAE,YAAU,EAAE,WAAWA,GAAE,SAAS,IAAE,IAAI,KAAG,UAAQC,GAAE,QAAMA,GAAE,QAAOA,GAAE,MAAIA,GAAE,SAAQ,EAAED,IAAEC,EAAC,EAAE,SAASF,EAAC,GAAEE,GAAE,UAAQA,GAAE,IAAI,EAAE,GAAEA,GAAE,SAAOA,GAAE,OAAO,aAAWD,GAAE,WAAS,SAAOA,GAAE,QAAQ,KAAGD,KAAEE,GAAE,KAAK,GAAE,aAAWD,GAAE,WAASD,GAAE,SAASC,GAAE,QAAQ,IAAED;AAAA,UAAE;AAAC,WAAC,IAAE,EAAE,UAAQ,GAAG,OAAK,SAASA,IAAE;AAAC,mBAAO,EAAEA,EAAC;AAAA,UAAC,GAAE,EAAE,OAAK,SAASA,IAAE;AAAC,mBAAO,EAAEA,IAAE,EAAC,eAAc,MAAG,WAAU,QAAO,UAAS,MAAK,CAAC;AAAA,UAAC,GAAE,EAAE,MAAI,SAASA,IAAE;AAAC,mBAAO,EAAEA,IAAE,EAAC,WAAU,OAAM,UAAS,MAAK,CAAC;AAAA,UAAC,GAAE,EAAE,UAAQ,SAASA,IAAE;AAAC,mBAAO,EAAEA,IAAE,EAAC,WAAU,OAAM,UAAS,OAAM,eAAc,KAAE,CAAC;AAAA,UAAC;AAAE,cAAI,IAAE,EAAE,YAAU,EAAE,UAAU,EAAE,MAAM,IAAE,CAAC,QAAO,KAAK,GAAE,KAAG,EAAE,KAAK,aAAa,GAAE,CAAC,UAAS,OAAM,UAAS,QAAQ;AAAG,mBAAS,EAAEA,IAAEC,IAAE;AAAC,gBAAIC,KAAE,CAAC;AAAE,gBAAGA,GAAE,aAAWD,KAAEA,MAAG,CAAC,GAAG,aAAW,QAAOC,GAAE,WAASD,GAAE,YAAU,OAAMC,GAAE,gBAAc,CAAC,CAACD,GAAE,eAAcC,GAAE,YAAUA,GAAE,UAAU,YAAY,GAAEA,GAAE,WAASA,GAAE,SAAS,YAAY,GAAEA,GAAE,gBAAc,SAAKD,GAAE,eAAcC,GAAE,cAAY,UAAKD,GAAE,aAAYC,GAAE,uBAAqB,UAAKD,GAAE,sBAAqBC,GAAE,4BAA0B,UAAKD,GAAE,2BAA0BC,GAAE,kBAAgB,SAAKD,GAAE,iBAAgBC,GAAE,gBAAc,UAAKD,GAAE,eAAcC,GAAE,mBAAiB,UAAKD,GAAE,kBAAiBC,GAAE,WAASD,GAAE,YAAU,QAAOC,GAAE,cAAYD,GAAE,eAAa,QAAO,WAASD;AAAE,oBAAM,IAAI,MAAM,2BAA2B;AAAE,qBAAQG,KAAE,GAAEA,KAAE,EAAE,QAAO,EAAEA;AAAE,gBAAEA,IAAG,YAAY,MAAID,GAAE,UAAU,YAAY,MAAIA,GAAE,YAAU,EAAEC;AAAI,gBAAG,OAAK,EAAE,QAAQD,GAAE,SAAS;AAAE,oBAAM,IAAI,MAAM,gBAAcA,GAAE,YAAU,yCAAuC,EAAE,KAAK,IAAI,CAAC;AAAE,gBAAG,OAAK,EAAE,QAAQA,GAAE,QAAQ,KAAG,kBAAgBA,GAAE;AAAU,oBAAM,IAAI,MAAM,eAAaA,GAAE,WAAS,yCAAuC,EAAE,KAAK,IAAI,CAAC;AAAE,mBAAOA;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAE;AAAC,gBAAG,cAAY,OAAOA;AAAE,qBAAO,QAAM,wDAAwD,KAAK,SAAS,UAAU,SAAS,KAAKA,EAAC,CAAC;AAAA,UAAC;AAAC,mBAAS,EAAEI,IAAEH,IAAEI,IAAE;AAAC,YAAAA,KAAEA,MAAG,CAAC;AAAE,qBAASC,GAAEN,IAAE;AAAC,qBAAOC,GAAE,SAAOA,GAAE,OAAOD,IAAE,MAAM,IAAEC,GAAE,MAAMD,IAAE,MAAM;AAAA,YAAC;AAAC,mBAAM,EAAC,UAAS,SAASA,IAAE;AAAC,qBAAO,KAAK,OAAK,UAAQA,KAAEI,GAAE,WAASA,GAAE,SAASJ,EAAC,IAAEA,MAAG,SAAO,OAAOA,KAAIA,EAAC;AAAA,YAAC,GAAE,SAAQ,SAASC,IAAE;AAAC,kBAAIC,IAAEF,KAAE,OAAO,UAAU,SAAS,KAAKC,EAAC,GAAEE,KAAE,mBAAmB,KAAKH,EAAC;AAAE,cAAAG,MAAGA,KAAEA,KAAEA,GAAE,KAAG,cAAYH,KAAE,KAAK,YAAY;AAAE,kBAAG,MAAIA,KAAEK,GAAE,QAAQJ,EAAC;AAAG,uBAAO,KAAK,SAAS,eAAaD,KAAE,GAAG;AAAE,kBAAGK,GAAE,KAAKJ,EAAC,GAAE,WAAS,KAAG,EAAE,YAAU,EAAE,SAASA,EAAC;AAAE,uBAAOK,GAAE,SAAS,GAAEA,GAAEL,EAAC;AAAE,kBAAG,aAAWE,MAAG,eAAaA,MAAG,oBAAkBA;AAAE,uBAAOH,KAAE,OAAO,KAAKC,EAAC,GAAEG,GAAE,qBAAmBJ,KAAEA,GAAE,KAAK,IAAG,UAAKI,GAAE,eAAa,EAAEH,EAAC,KAAGD,GAAE,OAAO,GAAE,GAAE,aAAY,aAAY,aAAa,GAAEI,GAAE,gBAAcJ,KAAEA,GAAE,OAAO,SAASA,IAAE;AAAC,yBAAM,CAACI,GAAE,YAAYJ,EAAC;AAAA,gBAAC,CAAC,IAAGM,GAAE,YAAUN,GAAE,SAAO,GAAG,GAAEE,KAAE,MAAKF,GAAE,QAAQ,SAASA,IAAE;AAAC,kBAAAE,GAAE,SAASF,EAAC,GAAEM,GAAE,GAAG,GAAEF,GAAE,iBAAeF,GAAE,SAASD,GAAED,GAAE,GAAEM,GAAE,GAAG;AAAA,gBAAC,CAAC;AAAE,kBAAG,CAAC,KAAK,MAAIH,KAAG;AAAC,oBAAGC,GAAE;AAAc,yBAAOE,GAAE,MAAIH,KAAE,GAAG;AAAE,sBAAM,IAAI,MAAM,0BAAwBA,KAAE,GAAG;AAAA,cAAC;AAAC,mBAAK,MAAIA,IAAGF,EAAC;AAAA,YAAC,GAAE,QAAO,SAASD,IAAEC,IAAE;AAAC,cAAAA,KAAE,WAASA,KAAEA,KAAE,UAAKG,GAAE;AAAgB,kBAAIF,KAAE;AAAK,kBAAGI,GAAE,WAASN,GAAE,SAAO,GAAG,GAAE,CAACC,MAAGD,GAAE,UAAQ;AAAE,uBAAOA,GAAE,QAAQ,SAASA,IAAE;AAAC,yBAAOE,GAAE,SAASF,EAAC;AAAA,gBAAC,CAAC;AAAE,kBAAIG,KAAE,CAAC,GAAEF,KAAED,GAAE,IAAI,SAASA,IAAE;AAAC,oBAAIC,KAAE,IAAI,KAAEC,KAAEG,GAAE,MAAM;AAAE,uBAAO,EAAED,IAAEH,IAAEC,EAAC,EAAE,SAASF,EAAC,GAAEG,KAAEA,GAAE,OAAOD,GAAE,MAAMG,GAAE,MAAM,CAAC,GAAEJ,GAAE,KAAK,EAAE,SAAS;AAAA,cAAC,CAAC;AAAE,qBAAOI,KAAEA,GAAE,OAAOF,EAAC,GAAEF,GAAE,KAAK,GAAE,KAAK,OAAOA,IAAE,KAAE;AAAA,YAAC,GAAE,OAAM,SAASD,IAAE;AAAC,qBAAOM,GAAE,UAAQN,GAAE,OAAO,CAAC;AAAA,YAAC,GAAE,SAAQ,SAASA,IAAE;AAAC,qBAAOM,GAAE,YAAUN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,QAAO,SAASA,IAAE;AAAC,qBAAOM,GAAE,WAASN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,UAAS,SAASA,IAAE;AAAC,qBAAOM,GAAE,UAAQN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,SAAQ,SAASA,IAAE;AAAC,cAAAM,GAAE,YAAUN,GAAE,SAAO,GAAG,GAAEM,GAAEN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,WAAU,SAASA,IAAE;AAAC,cAAAM,GAAE,KAAK,GAAE,EAAEN,EAAC,IAAE,KAAK,SAAS,UAAU,IAAE,KAAK,SAASA,GAAE,SAAS,CAAC,GAAE,UAAKI,GAAE,wBAAsB,KAAK,SAAS,mBAAiB,OAAOJ,GAAE,IAAI,CAAC,GAAEI,GAAE,6BAA2B,KAAK,QAAQJ,EAAC;AAAA,YAAC,GAAE,SAAQ,SAASA,IAAE;AAAC,qBAAOM,GAAE,YAAUN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,MAAK,SAASA,IAAE;AAAC,qBAAOM,GAAE,SAAON,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,OAAM,WAAU;AAAC,qBAAOM,GAAE,MAAM;AAAA,YAAC,GAAE,YAAW,WAAU;AAAC,qBAAOA,GAAE,WAAW;AAAA,YAAC,GAAE,SAAQ,SAASN,IAAE;AAAC,qBAAOM,GAAE,WAASN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,aAAY,SAASA,IAAE;AAAC,qBAAOM,GAAE,aAAa,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,oBAAmB,SAASA,IAAE;AAAC,qBAAOM,GAAE,oBAAoB,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,YAAW,SAASA,IAAE;AAAC,qBAAOM,GAAE,YAAY,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,cAAa,SAASA,IAAE;AAAC,qBAAOM,GAAE,cAAc,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,aAAY,SAASA,IAAE;AAAC,qBAAOM,GAAE,aAAa,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,cAAa,SAASA,IAAE;AAAC,qBAAOM,GAAE,cAAc,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,aAAY,SAASA,IAAE;AAAC,qBAAOM,GAAE,aAAa,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,eAAc,SAASA,IAAE;AAAC,qBAAOM,GAAE,eAAe,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,eAAc,SAASA,IAAE;AAAC,qBAAOM,GAAE,eAAe,GAAE,KAAK,SAAS,MAAM,UAAU,MAAM,KAAKN,EAAC,CAAC;AAAA,YAAC,GAAE,cAAa,SAASA,IAAE;AAAC,qBAAOM,GAAE,cAAc,GAAE,KAAK,SAAS,IAAI,WAAWN,EAAC,CAAC;AAAA,YAAC,GAAE,MAAK,SAASA,IAAE;AAAC,qBAAOM,GAAE,SAAON,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,MAAK,SAASA,IAAE;AAAC,cAAAM,GAAE,MAAM;AAAE,cAAAN,KAAE,MAAM,KAAKA,EAAC;AAAE,qBAAO,KAAK,OAAOA,IAAE,UAAKI,GAAE,aAAa;AAAA,YAAC,GAAE,MAAK,SAASJ,IAAE;AAAC,cAAAM,GAAE,MAAM;AAAE,cAAAN,KAAE,MAAM,KAAKA,EAAC;AAAE,qBAAO,KAAK,OAAOA,IAAE,UAAKI,GAAE,aAAa;AAAA,YAAC,GAAE,OAAM,SAASJ,IAAE;AAAC,qBAAOM,GAAE,OAAO,GAAE,KAAK,SAAS,CAACN,GAAE,MAAKA,GAAE,MAAKA,GAAE,MAAKA,GAAE,WAAW,CAAC;AAAA,YAAC,GAAE,OAAM,WAAU;AAAC,kBAAGI,GAAE;AAAc,uBAAOE,GAAE,QAAQ;AAAE,oBAAM,MAAM,6JAA6J;AAAA,YAAC,GAAE,YAAW,WAAU;AAAC,qBAAOA,GAAE,WAAW;AAAA,YAAC,GAAE,SAAQ,SAASN,IAAE;AAAC,qBAAOM,GAAE,YAAUN,GAAE,SAAS,CAAC;AAAA,YAAC,GAAE,UAAS,WAAU;AAAC,qBAAOM,GAAE,SAAS;AAAA,YAAC,GAAE,QAAO,WAAU;AAAC,qBAAOA,GAAE,OAAO;AAAA,YAAC,GAAE,OAAM,WAAU;AAAC,qBAAOA,GAAE,MAAM;AAAA,YAAC,GAAE,MAAK,WAAU;AAAC,qBAAOA,GAAE,KAAK;AAAA,YAAC,GAAE,MAAK,WAAU;AAAC,qBAAOA,GAAE,KAAK;AAAA,YAAC,GAAE,MAAK,WAAU;AAAC,qBAAOA,GAAE,KAAK;AAAA,YAAC,GAAE,cAAa,WAAU;AAAC,qBAAOA,GAAE,aAAa;AAAA,YAAC,GAAE,gBAAe,WAAU;AAAC,qBAAOA,GAAE,eAAe;AAAA,YAAC,GAAE,aAAY,WAAU;AAAC,qBAAOA,GAAE,YAAY;AAAA,YAAC,GAAE,OAAM,WAAU;AAAC,qBAAOA,GAAE,MAAM;AAAA,YAAC,GAAE,UAAS,WAAU;AAAC,qBAAOA,GAAE,SAAS;AAAA,YAAC,GAAE,aAAY,WAAU;AAAC,qBAAOA,GAAE,YAAY;AAAA,YAAC,GAAE,aAAY,WAAU;AAAC,qBAAOA,GAAE,YAAY;AAAA,YAAC,GAAE,WAAU,WAAU;AAAC,qBAAOA,GAAE,UAAU;AAAA,YAAC,GAAE,SAAQ,WAAU;AAAC,qBAAOA,GAAE,QAAQ;AAAA,YAAC,GAAE,UAAS,WAAU;AAAC,qBAAOA,GAAE,SAAS;AAAA,YAAC,GAAE,UAAS,WAAU;AAAC,qBAAOA,GAAE,SAAS;AAAA,YAAC,EAAC;AAAA,UAAC;AAAC,mBAAS,IAAG;AAAC,mBAAM,EAAC,KAAI,IAAG,OAAM,SAASN,IAAE;AAAC,mBAAK,OAAKA;AAAA,YAAC,GAAE,KAAI,SAASA,IAAE;AAAC,mBAAK,OAAKA;AAAA,YAAC,GAAE,MAAK,WAAU;AAAC,qBAAO,KAAK;AAAA,YAAG,EAAC;AAAA,UAAC;AAAC,YAAE,gBAAc,SAASA,IAAEC,IAAEC,IAAE;AAAC,mBAAO,WAASA,OAAIA,KAAED,IAAEA,KAAE,CAAC,IAAG,EAAEA,KAAE,EAAED,IAAEC,EAAC,GAAEC,EAAC,EAAE,SAASF,EAAC;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,qBAAoB,GAAG;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAEC,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,WAAC,SAASD,IAAE;AAAC;AAAa,gBAAIO,KAAE,eAAa,OAAO,aAAW,aAAW,OAAMN,KAAE,IAAI,WAAW,CAAC,GAAEC,KAAE,IAAI,WAAW,CAAC,GAAEC,KAAE,IAAI,WAAW,CAAC,GAAEC,KAAE,IAAI,WAAW,CAAC,GAAEC,KAAE,IAAI,WAAW,CAAC,GAAEC,KAAE,IAAI,WAAW,CAAC,GAAEE,KAAE,IAAI,WAAW,CAAC;AAAE,qBAASC,GAAET,IAAE;AAAC,cAAAA,KAAEA,GAAE,WAAW,CAAC;AAAE,qBAAOA,OAAIC,MAAGD,OAAIM,KAAE,KAAGN,OAAIE,MAAGF,OAAIQ,KAAE,KAAGR,KAAEG,KAAE,KAAGH,KAAEG,KAAE,KAAGH,KAAEG,KAAE,KAAG,KAAGH,KAAEK,KAAE,KAAGL,KAAEK,KAAEL,KAAEI,KAAE,KAAGJ,KAAEI,KAAE,KAAG;AAAA,YAAM;AAAC,YAAAJ,GAAE,cAAY,SAASA,IAAE;AAAC,kBAAIC,IAAEC;AAAE,kBAAG,IAAEF,GAAE,SAAO;AAAE,sBAAM,IAAI,MAAM,gDAAgD;AAAE,kBAAIG,KAAEH,GAAE,QAAOG,KAAE,QAAMH,GAAE,OAAOG,KAAE,CAAC,IAAE,IAAE,QAAMH,GAAE,OAAOG,KAAE,CAAC,IAAE,IAAE,GAAEC,KAAE,IAAIG,GAAE,IAAEP,GAAE,SAAO,IAAEG,EAAC,GAAEE,KAAE,IAAEF,KAAEH,GAAE,SAAO,IAAEA,GAAE,QAAOM,KAAE;AAAE,uBAASE,GAAER,IAAE;AAAC,gBAAAI,GAAEE,QAAKN;AAAA,cAAC;AAAC,mBAAIC,KAAE,GAAEA,KAAEI,IAAEJ,MAAG,GAAE;AAAE,gBAAAO,IAAG,YAAUN,KAAEO,GAAET,GAAE,OAAOC,EAAC,CAAC,KAAG,KAAGQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,KAAG,KAAGQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,KAAG,IAAEQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,OAAK,EAAE,GAAEO,IAAG,QAAMN,OAAI,CAAC,GAAEM,GAAE,MAAIN,EAAC;AAAE,qBAAO,KAAGC,KAAEK,GAAE,OAAKN,KAAEO,GAAET,GAAE,OAAOC,EAAC,CAAC,KAAG,IAAEQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,KAAG,EAAE,IAAE,KAAGE,OAAIK,IAAGN,KAAEO,GAAET,GAAE,OAAOC,EAAC,CAAC,KAAG,KAAGQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,KAAG,IAAEQ,GAAET,GAAE,OAAOC,KAAE,CAAC,CAAC,KAAG,MAAI,IAAE,GAAG,GAAEO,GAAE,MAAIN,EAAC,IAAGE;AAAA,YAAC,GAAEJ,GAAE,gBAAc,SAASA,IAAE;AAAC,kBAAIC,IAAEC,IAAEC,IAAEC,IAAEC,KAAEL,GAAE,SAAO,GAAEM,KAAE;AAAG,uBAASE,GAAER,IAAE;AAAC,uBAAM,mEAAmE,OAAOA,EAAC;AAAA,cAAC;AAAC,mBAAIC,KAAE,GAAEE,KAAEH,GAAE,SAAOK,IAAEJ,KAAEE,IAAEF,MAAG;AAAE,gBAAAC,MAAGF,GAAEC,OAAI,OAAKD,GAAEC,KAAE,MAAI,KAAGD,GAAEC,KAAE,IAAGK,MAAGE,IAAGJ,KAAEF,OAAI,KAAG,EAAE,IAAEM,GAAEJ,MAAG,KAAG,EAAE,IAAEI,GAAEJ,MAAG,IAAE,EAAE,IAAEI,GAAE,KAAGJ,EAAC;AAAE,sBAAOC,IAAE;AAAA,gBAAC,KAAK;AAAE,kBAAAC,MAAGA,MAAGE,IAAGN,KAAEF,GAAEA,GAAE,SAAO,OAAK,CAAC,KAAGQ,GAAEN,MAAG,IAAE,EAAE,IAAE;AAAK;AAAA,gBAAM,KAAK;AAAE,kBAAAI,MAAGA,MAAGA,MAAGE,IAAGN,MAAGF,GAAEA,GAAE,SAAO,MAAI,KAAGA,GAAEA,GAAE,SAAO,OAAK,EAAE,KAAGQ,GAAEN,MAAG,IAAE,EAAE,KAAGM,GAAEN,MAAG,IAAE,EAAE,IAAE;AAAA,cAAG;AAAC,qBAAOI;AAAA,YAAC;AAAA,UAAC,EAAE,WAAS,IAAE,KAAK,WAAS,CAAC,IAAE,CAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,mEAAkE,0DAA0D;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASN,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,IAAE,EAAE,WAAW,GAAE,IAAE,EAAE,SAAS;AAAE,mBAAS,EAAEA,IAAEC,IAAEC,IAAE;AAAC,gBAAG,EAAE,gBAAgB;AAAG,qBAAO,IAAI,EAAEF,IAAEC,IAAEC,EAAC;AAAE,gBAAIC,IAAEC,IAAEC,IAAEC,IAAEE,KAAE,OAAOR;AAAE,gBAAG,aAAWC,MAAG,YAAUO;AAAE,mBAAIR,MAAGM,KAAEN,IAAG,OAAKM,GAAE,KAAK,IAAEA,GAAE,QAAQ,cAAa,EAAE,GAAEN,GAAE,SAAO,KAAG;AAAG,gBAAAA,MAAG;AAAI,gBAAG,YAAUQ;AAAE,cAAAL,KAAE,EAAEH,EAAC;AAAA,qBAAU,YAAUQ;AAAE,cAAAL,KAAE,EAAE,WAAWH,IAAEC,EAAC;AAAA,iBAAM;AAAC,kBAAG,YAAUO;AAAE,sBAAM,IAAI,MAAM,uDAAuD;AAAE,cAAAL,KAAE,EAAEH,GAAE,MAAM;AAAA,YAAC;AAAC,gBAAG,EAAE,kBAAgBI,KAAE,EAAE,SAAS,IAAI,WAAWD,EAAC,CAAC,MAAIC,KAAE,MAAM,SAAOD,IAAEC,GAAE,YAAU,OAAI,EAAE,mBAAiB,YAAU,OAAOJ,GAAE;AAAW,cAAAI,GAAE,KAAKJ,EAAC;AAAA,qBAAU,EAAEM,KAAEN,EAAC,KAAG,EAAE,SAASM,EAAC,KAAGA,MAAG,YAAU,OAAOA,MAAG,YAAU,OAAOA,GAAE;AAAO,mBAAID,KAAE,GAAEA,KAAEF,IAAEE;AAAI,kBAAE,SAASL,EAAC,IAAEI,GAAEC,MAAGL,GAAE,UAAUK,EAAC,IAAED,GAAEC,MAAGL,GAAEK;AAAA,qBAAW,YAAUG;AAAE,cAAAJ,GAAE,MAAMJ,IAAE,GAAEC,EAAC;AAAA,qBAAU,YAAUO,MAAG,CAAC,EAAE,mBAAiB,CAACN;AAAE,mBAAIG,KAAE,GAAEA,KAAEF,IAAEE;AAAI,gBAAAD,GAAEC,MAAG;AAAE,mBAAOD;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAE,gBAAc,EAAE,SAASH,IAAE;AAAC,uBAAQC,KAAE,CAAC,GAAEC,KAAE,GAAEA,KAAEF,GAAE,QAAOE;AAAI,gBAAAD,GAAE,KAAK,MAAID,GAAE,WAAWE,EAAC,CAAC;AAAE,qBAAOD;AAAA,YAAC,EAAEA,EAAC,GAAED,IAAEE,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAE,gBAAc,EAAE,SAASH,IAAE;AAAC,uBAAQC,IAAEC,IAAEC,KAAE,CAAC,GAAEC,KAAE,GAAEA,KAAEJ,GAAE,QAAOI;AAAI,gBAAAF,KAAEF,GAAE,WAAWI,EAAC,GAAEH,KAAEC,MAAG,GAAEA,KAAEA,KAAE,KAAIC,GAAE,KAAKD,EAAC,GAAEC,GAAE,KAAKF,EAAC;AAAE,qBAAOE;AAAA,YAAC,EAAEF,EAAC,GAAED,IAAEE,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAE;AAAC,gBAAIC,KAAE;AAAG,YAAAD,KAAE,KAAK,IAAIF,GAAE,QAAOE,EAAC;AAAE,qBAAQE,KAAEH,IAAEG,KAAEF,IAAEE;AAAI,cAAAD,MAAG,OAAO,aAAaH,GAAEI,GAAE;AAAE,mBAAOD;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAED,GAAE,QAAO,qCAAqC;AAAG,gBAAII,IAAED,KAAEH,GAAE;AAAO,gBAAG,EAAEG,MAAGF;AAAG,qBAAOC,MAAGE,KAAEJ,GAAEC,KAAGA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,MAAI,OAAKG,KAAEJ,GAAEC,OAAI,GAAEA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,MAAKG;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAED,GAAE,QAAO,qCAAqC;AAAG,gBAAII,IAAED,KAAEH,GAAE;AAAO,gBAAG,EAAEG,MAAGF;AAAG,qBAAOC,MAAGD,KAAE,IAAEE,OAAIC,KAAEJ,GAAEC,KAAE,MAAI,KAAIA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,MAAI,IAAGG,MAAGJ,GAAEC,KAAGA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,MAAI,OAAK,OAAKA,KAAE,IAAEE,OAAIC,KAAEJ,GAAEC,KAAE,MAAI,KAAIA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,MAAI,IAAGA,KAAE,IAAEE,OAAIC,MAAGJ,GAAEC,KAAE,KAAIG,MAAGJ,GAAEC,OAAI,OAAK,IAAGG;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAEC,IAAEC,IAAEC,IAAE;AAAC,gBAAGA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAED,GAAE,QAAO,qCAAqC,IAAG,EAAEA,GAAE,UAAQC;AAAG,qBAAOE,KAAE,EAAEH,IAAEC,IAAEC,IAAE,IAAE,GAAE,QAAMC,KAAE,MAAI,QAAMA,KAAE,KAAGA;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAEC,IAAE;AAAC,gBAAGA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAED,GAAE,QAAO,qCAAqC,IAAG,EAAEA,GAAE,UAAQC;AAAG,qBAAOE,KAAE,EAAEH,IAAEC,IAAEC,IAAE,IAAE,GAAE,aAAWC,KAAE,MAAI,aAAWA,KAAE,KAAGA;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAOA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAED,KAAE,IAAED,GAAE,QAAO,qCAAqC,IAAG,EAAE,KAAKA,IAAEC,IAAEC,IAAE,IAAG,CAAC;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAOA,OAAI,EAAE,aAAW,OAAOD,IAAE,2BAA2B,GAAE,EAAED,KAAE,IAAED,GAAE,QAAO,qCAAqC,IAAG,EAAE,KAAKA,IAAEC,IAAEC,IAAE,IAAG,CAAC;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,KAAK;AAAG,YAAAG,KAAEJ,GAAE;AAAO,gBAAG,EAAEI,MAAGF;AAAG,uBAAQG,KAAE,GAAEC,KAAE,KAAK,IAAIF,KAAEF,IAAE,CAAC,GAAEG,KAAEC,IAAED;AAAI,gBAAAL,GAAEE,KAAEG,OAAIJ,KAAE,OAAK,KAAGE,KAAEE,KAAE,IAAEA,SAAM,KAAGF,KAAEE,KAAE,IAAEA;AAAA,UAAE;AAAC,mBAAS,EAAEL,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,UAAU;AAAG,YAAAG,KAAEJ,GAAE;AAAO,gBAAG,EAAEI,MAAGF;AAAG,uBAAQG,KAAE,GAAEC,KAAE,KAAK,IAAIF,KAAEF,IAAE,CAAC,GAAEG,KAAEC,IAAED;AAAI,gBAAAL,GAAEE,KAAEG,MAAGJ,OAAI,KAAGE,KAAEE,KAAE,IAAEA,MAAG;AAAA,UAAG;AAAC,mBAAS,EAAEL,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,OAAM,MAAM,IAAGD,GAAE,UAAQE,MAAG,EAAEF,IAAE,KAAGC,KAAEA,KAAE,QAAMA,KAAE,GAAEC,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,YAAW,WAAW,IAAGD,GAAE,UAAQE,MAAG,EAAEF,IAAE,KAAGC,KAAEA,KAAE,aAAWA,KAAE,GAAEC,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,sBAAqB,qBAAqB,IAAGD,GAAE,UAAQE,MAAG,EAAE,MAAMF,IAAEC,IAAEC,IAAEC,IAAE,IAAG,CAAC;AAAA,UAAC;AAAC,mBAAS,EAAEH,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMH,IAAE,eAAe,GAAE,EAAE,aAAW,OAAOE,IAAE,2BAA2B,GAAE,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,IAAEF,GAAE,QAAO,sCAAsC,GAAE,EAAEC,IAAE,uBAAsB,sBAAsB,IAAGD,GAAE,UAAQE,MAAG,EAAE,MAAMF,IAAEC,IAAEC,IAAEC,IAAE,IAAG,CAAC;AAAA,UAAC;AAAC,YAAE,SAAO,GAAE,EAAE,aAAW,GAAE,EAAE,oBAAkB,IAAG,EAAE,WAAS,MAAK,EAAE,kBAAgB,WAAU;AAAC,gBAAG;AAAC,kBAAIH,KAAE,IAAI,YAAY,CAAC,GAAEC,KAAE,IAAI,WAAWD,EAAC;AAAE,qBAAOC,GAAE,MAAI,WAAU;AAAC,uBAAO;AAAA,cAAE,GAAE,OAAKA,GAAE,IAAI,KAAG,cAAY,OAAOA,GAAE;AAAA,YAAQ,SAAOD,IAAN;AAAS,qBAAM;AAAA,YAAE;AAAA,UAAC,EAAE,GAAE,EAAE,aAAW,SAASA,IAAE;AAAC,oBAAO,OAAOA,EAAC,EAAE,YAAY,GAAE;AAAA,cAAC,KAAI;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAS,KAAI;AAAA,cAAS,KAAI;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAU,KAAI;AAAW,uBAAM;AAAA,cAAG;AAAQ,uBAAM;AAAA,YAAE;AAAA,UAAC,GAAE,EAAE,WAAS,SAASA,IAAE;AAAC,mBAAM,EAAE,QAAMA,MAAG,CAACA,GAAE;AAAA,UAAU,GAAE,EAAE,aAAW,SAASA,IAAEC,IAAE;AAAC,gBAAIC;AAAE,oBAAOF,MAAG,IAAGC,MAAG,QAAO;AAAA,cAAC,KAAI;AAAM,gBAAAC,KAAEF,GAAE,SAAO;AAAE;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAQ,gBAAAE,KAAE,EAAEF,EAAC,EAAE;AAAO;AAAA,cAAM,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAS,KAAI;AAAM,gBAAAE,KAAEF,GAAE;AAAO;AAAA,cAAM,KAAI;AAAS,gBAAAE,KAAE,EAAEF,EAAC,EAAE;AAAO;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAU,KAAI;AAAW,gBAAAE,KAAE,IAAEF,GAAE;AAAO;AAAA,cAAM;AAAQ,sBAAM,IAAI,MAAM,kBAAkB;AAAA,YAAC;AAAC,mBAAOE;AAAA,UAAC,GAAE,EAAE,SAAO,SAASF,IAAEC,IAAE;AAAC,gBAAG,EAAE,EAAED,EAAC,GAAE,qEAAqE,GAAE,MAAIA,GAAE;AAAO,qBAAO,IAAI,EAAE,CAAC;AAAE,gBAAG,MAAIA,GAAE;AAAO,qBAAOA,GAAE;AAAG,gBAAG,YAAU,OAAOC;AAAE,mBAAIG,KAAEH,KAAE,GAAEG,KAAEJ,GAAE,QAAOI;AAAI,gBAAAH,MAAGD,GAAEI,IAAG;AAAO,qBAAQF,KAAE,IAAI,EAAED,EAAC,GAAEE,KAAE,GAAEC,KAAE,GAAEA,KAAEJ,GAAE,QAAOI,MAAI;AAAC,kBAAIC,KAAEL,GAAEI;AAAG,cAAAC,GAAE,KAAKH,IAAEC,EAAC,GAAEA,MAAGE,GAAE;AAAA,YAAM;AAAC,mBAAOH;AAAA,UAAC,GAAE,EAAE,UAAU,QAAM,SAASF,IAAEC,IAAEC,IAAEC,IAAE;AAAC,qBAASF,EAAC,IAAE,SAASC,EAAC,MAAIC,KAAED,IAAEA,KAAE,WAASK,KAAEJ,IAAEA,KAAEF,IAAEA,KAAEC,IAAEA,KAAEK,KAAGN,KAAE,OAAOA,EAAC,KAAG;AAAE,gBAAIG,IAAEC,IAAEC,IAAEE,IAAED,KAAE,KAAK,SAAON;AAAE,qBAAQ,CAACC,MAAGK,MAAGL,KAAE,OAAOA,EAAC,QAAMA,KAAEK,KAAGJ,KAAE,OAAOA,MAAG,MAAM,EAAE,YAAY,GAAE;AAAA,cAAC,KAAI;AAAM,gBAAAC,KAAE,SAASJ,IAAEC,IAAEC,IAAEC,IAAE;AAAC,kBAAAD,KAAE,OAAOA,EAAC,KAAG;AAAE,sBAAIE,KAAEJ,GAAE,SAAOE;AAAE,mBAAC,CAACC,MAAGC,MAAGD,KAAE,OAAOA,EAAC,QAAMA,KAAEC,KAAG,GAAGA,KAAEH,GAAE,UAAQ,KAAG,GAAE,oBAAoB,GAAEG,KAAE,IAAED,OAAIA,KAAEC,KAAE;AAAG,2BAAQC,KAAE,GAAEA,KAAEF,IAAEE,MAAI;AAAC,wBAAIC,KAAE,SAASL,GAAE,OAAO,IAAEI,IAAE,CAAC,GAAE,EAAE;AAAE,sBAAE,CAAC,MAAMC,EAAC,GAAE,oBAAoB,GAAEN,GAAEE,KAAEG,MAAGC;AAAA,kBAAC;AAAC,yBAAO,EAAE,gBAAc,IAAED,IAAEA;AAAA,gBAAC,EAAE,MAAKL,IAAEC,IAAEC,EAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAQ,gBAAAG,KAAE,MAAKC,KAAEL,IAAEO,KAAEN,IAAEE,KAAE,EAAE,gBAAc,EAAE,EAAEJ,EAAC,GAAEK,IAAEC,IAAEE,EAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAQ,KAAI;AAAS,gBAAAJ,KAAE,EAAE,MAAKJ,IAAEC,IAAEC,EAAC;AAAE;AAAA,cAAM,KAAI;AAAS,gBAAAG,KAAE,MAAKC,KAAEL,IAAEO,KAAEN,IAAEE,KAAE,EAAE,gBAAc,EAAE,EAAEJ,EAAC,GAAEK,IAAEC,IAAEE,EAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAU,KAAI;AAAW,gBAAAJ,KAAE,EAAE,MAAKJ,IAAEC,IAAEC,EAAC;AAAE;AAAA,cAAM;AAAQ,sBAAM,IAAI,MAAM,kBAAkB;AAAA,YAAC;AAAC,mBAAOE;AAAA,UAAC,GAAE,EAAE,UAAU,WAAS,SAASJ,IAAEC,IAAEC,IAAE;AAAC,gBAAIC,IAAEC,IAAEC,IAAEC,IAAEE,KAAE;AAAK,gBAAGR,KAAE,OAAOA,MAAG,MAAM,EAAE,YAAY,GAAEC,KAAE,OAAOA,EAAC,KAAG,IAAGC,KAAE,WAASA,KAAE,OAAOA,EAAC,IAAEM,GAAE,YAAUP;AAAE,qBAAM;AAAG,oBAAOD,IAAE;AAAA,cAAC,KAAI;AAAM,gBAAAG,KAAE,SAASH,IAAEC,IAAEC,IAAE;AAAC,sBAAIC,KAAEH,GAAE;AAAO,mBAAC,CAACC,MAAGA,KAAE,OAAKA,KAAE;AAAG,mBAAC,CAACC,MAAGA,KAAE,KAAGC,KAAED,QAAKA,KAAEC;AAAG,2BAAQC,KAAE,IAAGC,KAAEJ,IAAEI,KAAEH,IAAEG;AAAI,oBAAAD,MAAG,EAAEJ,GAAEK,GAAE;AAAE,yBAAOD;AAAA,gBAAC,EAAEI,IAAEP,IAAEC,EAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAQ,gBAAAC,KAAE,SAASH,IAAEC,IAAEC,IAAE;AAAC,sBAAIC,KAAE,IAAGC,KAAE;AAAG,kBAAAF,KAAE,KAAK,IAAIF,GAAE,QAAOE,EAAC;AAAE,2BAAQG,KAAEJ,IAAEI,KAAEH,IAAEG;AAAI,oBAAAL,GAAEK,OAAI,OAAKF,MAAG,EAAEC,EAAC,IAAE,OAAO,aAAaJ,GAAEK,GAAE,GAAED,KAAE,MAAIA,MAAG,MAAIJ,GAAEK,IAAG,SAAS,EAAE;AAAE,yBAAOF,KAAE,EAAEC,EAAC;AAAA,gBAAC,EAAEI,IAAEP,IAAEC,EAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAQ,KAAI;AAAS,gBAAAC,KAAE,EAAEK,IAAEP,IAAEC,EAAC;AAAE;AAAA,cAAM,KAAI;AAAS,gBAAAE,KAAEI,IAAEF,KAAEJ,IAAEC,KAAE,OAAKE,KAAEJ,OAAIK,OAAIF,GAAE,SAAO,EAAE,cAAcA,EAAC,IAAE,EAAE,cAAcA,GAAE,MAAMC,IAAEC,EAAC,CAAC;AAAE;AAAA,cAAM,KAAI;AAAA,cAAO,KAAI;AAAA,cAAQ,KAAI;AAAA,cAAU,KAAI;AAAW,gBAAAH,KAAE,SAASH,IAAEC,IAAEC,IAAE;AAAC,2BAAQC,KAAEH,GAAE,MAAMC,IAAEC,EAAC,GAAEE,KAAE,IAAGC,KAAE,GAAEA,KAAEF,GAAE,QAAOE,MAAG;AAAE,oBAAAD,MAAG,OAAO,aAAaD,GAAEE,MAAG,MAAIF,GAAEE,KAAE,EAAE;AAAE,yBAAOD;AAAA,gBAAC,EAAEI,IAAEP,IAAEC,EAAC;AAAE;AAAA,cAAM;AAAQ,sBAAM,IAAI,MAAM,kBAAkB;AAAA,YAAC;AAAC,mBAAOC;AAAA,UAAC,GAAE,EAAE,UAAU,SAAO,WAAU;AAAC,mBAAM,EAAC,MAAK,UAAS,MAAK,MAAM,UAAU,MAAM,KAAK,KAAK,QAAM,MAAK,CAAC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,OAAK,SAASH,IAAEC,IAAEC,IAAEC,IAAE;AAAC,gBAAGF,KAAEA,MAAG,IAAGE,KAAEA,MAAG,MAAIA,KAAEA,KAAE,KAAK,aAAWD,KAAEA,MAAG,MAAI,MAAIF,GAAE,UAAQ,MAAI,KAAK,QAAO;AAAC,gBAAEE,MAAGC,IAAE,yBAAyB,GAAE,EAAE,KAAGF,MAAGA,KAAED,GAAE,QAAO,2BAA2B,GAAE,EAAE,KAAGE,MAAGA,KAAE,KAAK,QAAO,2BAA2B,GAAE,EAAE,KAAGC,MAAGA,MAAG,KAAK,QAAO,yBAAyB,GAAEA,KAAE,KAAK,WAASA,KAAE,KAAK;AAAQ,kBAAIC,MAAGD,KAAEH,GAAE,SAAOC,KAAEE,KAAED,KAAEF,GAAE,SAAOC,KAAEC,KAAEC,MAAGD;AAAE,kBAAGE,KAAE,OAAK,CAAC,EAAE;AAAgB,yBAAQC,KAAE,GAAEA,KAAED,IAAEC;AAAI,kBAAAL,GAAEK,KAAEJ,MAAG,KAAKI,KAAEH;AAAA;AAAQ,gBAAAF,GAAE,KAAK,KAAK,SAASE,IAAEA,KAAEE,EAAC,GAAEH,EAAC;AAAA,YAAC;AAAA,UAAC,GAAE,EAAE,UAAU,QAAM,SAASD,IAAEC,IAAE;AAAC,gBAAIC,KAAE,KAAK;AAAO,gBAAGF,KAAE,EAAEA,IAAEE,IAAE,CAAC,GAAED,KAAE,EAAEA,IAAEC,IAAEA,EAAC,GAAE,EAAE;AAAgB,qBAAO,EAAE,SAAS,KAAK,SAASF,IAAEC,EAAC,CAAC;AAAE,qBAAQE,KAAEF,KAAED,IAAEI,KAAE,IAAI,EAAED,IAAE,QAAO,IAAE,GAAEE,KAAE,GAAEA,KAAEF,IAAEE;AAAI,cAAAD,GAAEC,MAAG,KAAKA,KAAEL;AAAG,mBAAOI;AAAA,UAAC,GAAE,EAAE,UAAU,MAAI,SAASJ,IAAE;AAAC,mBAAO,QAAQ,IAAI,2DAA2D,GAAE,KAAK,UAAUA,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,MAAI,SAASA,IAAEC,IAAE;AAAC,mBAAO,QAAQ,IAAI,2DAA2D,GAAE,KAAK,WAAWD,IAAEC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,YAAU,SAASD,IAAEC,IAAE;AAAC,gBAAGA,OAAI,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,KAAK,QAAO,qCAAqC,IAAG,EAAEA,MAAG,KAAK;AAAQ,qBAAO,KAAKA;AAAA,UAAE,GAAE,EAAE,UAAU,eAAa,SAASA,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,WAAS,SAASD,IAAEC,IAAE;AAAC,gBAAGA,OAAI,EAAE,QAAMD,IAAE,gBAAgB,GAAE,EAAEA,KAAE,KAAK,QAAO,qCAAqC,IAAG,EAAEA,MAAG,KAAK;AAAQ,qBAAO,MAAI,KAAKA,MAAG,MAAI,MAAI,KAAKA,MAAG,KAAG,KAAKA;AAAA,UAAE,GAAE,EAAE,UAAU,cAAY,SAASA,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,cAAY,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,cAAY,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,cAAY,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,cAAY,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,cAAY,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASD,IAAEC,IAAE;AAAC,mBAAO,EAAE,MAAKD,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,aAAW,SAASD,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMF,IAAE,eAAe,GAAE,EAAE,QAAMC,IAAE,gBAAgB,GAAE,EAAEA,KAAE,KAAK,QAAO,sCAAsC,GAAE,EAAED,IAAE,GAAG,IAAGC,MAAG,KAAK,WAAS,KAAKA,MAAGD;AAAA,UAAE,GAAE,EAAE,UAAU,gBAAc,SAASA,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,gBAAc,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,gBAAc,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,gBAAc,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,YAAU,SAASF,IAAEC,IAAEC,IAAE;AAAC,YAAAA,OAAI,EAAE,QAAMF,IAAE,eAAe,GAAE,EAAE,QAAMC,IAAE,gBAAgB,GAAE,EAAEA,KAAE,KAAK,QAAO,sCAAsC,GAAE,EAAED,IAAE,KAAI,IAAI,IAAGC,MAAG,KAAK,WAAS,KAAGD,KAAE,KAAK,WAAWA,IAAEC,IAAEC,EAAC,IAAE,KAAK,WAAW,MAAIF,KAAE,GAAEC,IAAEC,EAAC;AAAA,UAAE,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,eAAa,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,gBAAc,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,MAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,gBAAc,SAASF,IAAEC,IAAEC,IAAE;AAAC,cAAE,MAAKF,IAAEC,IAAE,OAAGC,EAAC;AAAA,UAAC,GAAE,EAAE,UAAU,OAAK,SAASF,IAAEC,IAAEC,IAAE;AAAC,gBAAGD,KAAEA,MAAG,GAAEC,KAAEA,MAAG,KAAK,QAAO,EAAE,YAAU,QAAOF,KAAE,YAAU,QAAOA,KAAEA,MAAG,KAAGA,GAAE,WAAW,CAAC,IAAEA,OAAI,CAAC,MAAMA,EAAC,GAAE,uBAAuB,GAAE,EAAEC,MAAGC,IAAE,aAAa,GAAEA,OAAID,MAAG,MAAI,KAAK,QAAO;AAAC,gBAAE,KAAGA,MAAGA,KAAE,KAAK,QAAO,qBAAqB,GAAE,EAAE,KAAGC,MAAGA,MAAG,KAAK,QAAO,mBAAmB;AAAE,uBAAQC,KAAEF,IAAEE,KAAED,IAAEC;AAAI,qBAAKA,MAAGH;AAAA,YAAC;AAAA,UAAC,GAAE,EAAE,UAAU,UAAQ,WAAU;AAAC,qBAAQA,KAAE,CAAC,GAAEC,KAAE,KAAK,QAAOC,KAAE,GAAEA,KAAED,IAAEC;AAAI,kBAAGF,GAAEE,MAAG,EAAE,KAAKA,GAAE,GAAEA,OAAI,EAAE,mBAAkB;AAAC,gBAAAF,GAAEE,KAAE,KAAG;AAAM;AAAA,cAAK;AAAC,mBAAM,aAAWF,GAAE,KAAK,GAAG,IAAE;AAAA,UAAG,GAAE,EAAE,UAAU,gBAAc,WAAU;AAAC,gBAAG,eAAa,OAAO;AAAW,oBAAM,IAAI,MAAM,oDAAoD;AAAE,gBAAG,EAAE;AAAgB,qBAAO,IAAI,EAAE,IAAI,EAAE;AAAO,qBAAQA,KAAE,IAAI,WAAW,KAAK,MAAM,GAAEC,KAAE,GAAEC,KAAEF,GAAE,QAAOC,KAAEC,IAAED,MAAG;AAAE,cAAAD,GAAEC,MAAG,KAAKA;AAAG,mBAAOD,GAAE;AAAA,UAAM;AAAE,cAAI,IAAE,EAAE;AAAU,mBAAS,EAAEA,IAAEC,IAAEC,IAAE;AAAC,mBAAM,YAAU,OAAOF,KAAEE,KAAED,OAAID,KAAE,CAAC,CAACA,MAAGC,KAAE,KAAGD,MAAG,MAAIA,MAAGC,MAAGD,KAAE;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAE;AAAC,oBAAOA,KAAE,CAAC,CAAC,KAAK,KAAK,CAACA,EAAC,KAAG,IAAE,IAAEA;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAE;AAAC,oBAAO,MAAM,WAAS,SAASA,IAAE;AAAC,qBAAM,qBAAmB,OAAO,UAAU,SAAS,KAAKA,EAAC;AAAA,YAAC,GAAGA,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAE;AAAC,mBAAOA,KAAE,KAAG,MAAIA,GAAE,SAAS,EAAE,IAAEA,GAAE,SAAS,EAAE;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAE;AAAC,qBAAQC,KAAE,CAAC,GAAEC,KAAE,GAAEA,KAAEF,GAAE,QAAOE,MAAI;AAAC,kBAAIC,KAAEH,GAAE,WAAWE,EAAC;AAAE,kBAAGC,MAAG;AAAI,gBAAAF,GAAE,KAAKD,GAAE,WAAWE,EAAC,CAAC;AAAA;AAAO,yBAAQE,KAAEF,IAAEG,MAAG,SAAOF,MAAGA,MAAG,SAAOD,MAAI,mBAAmBF,GAAE,MAAMI,IAAEF,KAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,MAAM,GAAG,IAAGI,KAAE,GAAEA,KAAED,GAAE,QAAOC;AAAI,kBAAAL,GAAE,KAAK,SAASI,GAAEC,KAAG,EAAE,CAAC;AAAA,YAAC;AAAC,mBAAOL;AAAA,UAAC;AAAC,mBAAS,EAAED,IAAE;AAAC,mBAAO,EAAE,YAAYA,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAEC,IAAEC,IAAEC,IAAE;AAAC,qBAAQC,KAAE,GAAEA,KAAED,MAAG,EAAEC,KAAEF,MAAGD,GAAE,UAAQG,MAAGJ,GAAE,SAAQI;AAAI,cAAAH,GAAEG,KAAEF,MAAGF,GAAEI;AAAG,mBAAOA;AAAA,UAAC;AAAC,mBAAS,EAAEJ,IAAE;AAAC,gBAAG;AAAC,qBAAO,mBAAmBA,EAAC;AAAA,YAAC,SAAOA,IAAN;AAAS,qBAAO,OAAO,aAAa,KAAK;AAAA,YAAC;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAEC,IAAE;AAAC,cAAE,YAAU,OAAOD,IAAE,uCAAuC,GAAE,EAAE,KAAGA,IAAE,0DAA0D,GAAE,EAAEA,MAAGC,IAAE,6CAA6C,GAAE,EAAE,KAAK,MAAMD,EAAC,MAAIA,IAAE,kCAAkC;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAEC,IAAEC,IAAE;AAAC,cAAE,YAAU,OAAOF,IAAE,uCAAuC,GAAE,EAAEA,MAAGC,IAAE,yCAAyC,GAAE,EAAEC,MAAGF,IAAE,0CAA0C,GAAE,EAAE,KAAK,MAAMA,EAAC,MAAIA,IAAE,kCAAkC;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAEC,IAAEC,IAAE;AAAC,cAAE,YAAU,OAAOF,IAAE,uCAAuC,GAAE,EAAEA,MAAGC,IAAE,yCAAyC,GAAE,EAAEC,MAAGF,IAAE,0CAA0C;AAAA,UAAC;AAAC,mBAAS,EAAEA,IAAEC,IAAE;AAAC,gBAAG,CAACD;AAAE,oBAAM,IAAI,MAAMC,MAAG,kBAAkB;AAAA,UAAC;AAAC,YAAE,WAAS,SAASD,IAAE;AAAC,mBAAOA,GAAE,YAAU,MAAGA,GAAE,OAAKA,GAAE,KAAIA,GAAE,OAAKA,GAAE,KAAIA,GAAE,MAAI,EAAE,KAAIA,GAAE,MAAI,EAAE,KAAIA,GAAE,QAAM,EAAE,OAAMA,GAAE,WAAS,EAAE,UAASA,GAAE,iBAAe,EAAE,UAASA,GAAE,SAAO,EAAE,QAAOA,GAAE,OAAK,EAAE,MAAKA,GAAE,QAAM,EAAE,OAAMA,GAAE,YAAU,EAAE,WAAUA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,WAAS,EAAE,UAASA,GAAE,cAAY,EAAE,aAAYA,GAAE,cAAY,EAAE,aAAYA,GAAE,cAAY,EAAE,aAAYA,GAAE,cAAY,EAAE,aAAYA,GAAE,cAAY,EAAE,aAAYA,GAAE,cAAY,EAAE,aAAYA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,aAAW,EAAE,YAAWA,GAAE,gBAAc,EAAE,eAAcA,GAAE,gBAAc,EAAE,eAAcA,GAAE,gBAAc,EAAE,eAAcA,GAAE,gBAAc,EAAE,eAAcA,GAAE,YAAU,EAAE,WAAUA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,eAAa,EAAE,cAAaA,GAAE,gBAAc,EAAE,eAAcA,GAAE,gBAAc,EAAE,eAAcA,GAAE,OAAK,EAAE,MAAKA,GAAE,UAAQ,EAAE,SAAQA,GAAE,gBAAc,EAAE,eAAcA;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,8DAA6D,mDAAmD;AAAA,MAAC,GAAE,EAAC,aAAY,GAAE,QAAO,GAAE,SAAQ,IAAG,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,IAAE,EAAE,QAAQ,EAAE,QAAO,IAAE,GAAE,IAAE,IAAI,EAAE,CAAC;AAAE,YAAE,KAAK,CAAC;AAAE,YAAE,UAAQ,EAAC,MAAK,SAASA,IAAEC,IAAEC,IAAEC,IAAE;AAAC,qBAAQC,KAAEH,GAAE,SAASD,IAAEC,IAAE;AAAC,cAAAD,GAAE,SAAO,KAAG,MAAIE,KAAEF,GAAE,UAAQ,IAAEA,GAAE,SAAO,IAAGA,KAAE,EAAE,OAAO,CAACA,IAAE,CAAC,GAAEE,EAAC;AAAG,uBAAQA,IAAEC,KAAE,CAAC,GAAEC,KAAEH,KAAED,GAAE,cAAYA,GAAE,aAAYK,KAAE,GAAEA,KAAEL,GAAE,QAAOK,MAAG;AAAE,gBAAAF,GAAE,KAAKC,GAAE,KAAKJ,IAAEK,EAAC,CAAC;AAAE,qBAAOF;AAAA,YAAC,EAAEH,KAAE,EAAE,SAASA,EAAC,IAAEA,KAAE,IAAI,EAAEA,EAAC,GAAEG,EAAC,GAAE,IAAEH,GAAE,MAAM,GAAEC,KAAEE,IAAEE,KAAE,IAAI,EAAEH,EAAC,GAAEI,KAAEL,KAAEI,GAAE,eAAaA,GAAE,cAAaG,KAAE,GAAEA,KAAEJ,GAAE,QAAOI;AAAI,cAAAF,GAAE,KAAKD,IAAED,GAAEI,KAAG,IAAEA,IAAE,IAAE;AAAE,mBAAOH;AAAA,UAAC,EAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,2EAA0E,8DAA8D;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAAS,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,IAAE,EAAE,QAAQ,EAAE,QAAOL,KAAE,EAAE,OAAO,GAAE,IAAE,EAAE,UAAU,GAAE,IAAE,EAAE,OAAO,GAAE,IAAE,EAAC,MAAKA,IAAE,QAAO,GAAE,KAAI,EAAE,OAAO,EAAC,GAAE,IAAE,IAAG,IAAE,IAAI,EAAE,CAAC;AAAE,mBAAS,EAAEA,IAAEE,IAAE;AAAC,gBAAIC,KAAE,EAAEH,KAAEA,MAAG,SAAQI,KAAE,CAAC;AAAE,mBAAOD,MAAG,EAAE,cAAaH,IAAE,sBAAsB,GAAE,EAAC,QAAO,SAASA,IAAE;AAAC,qBAAO,EAAE,SAASA,EAAC,MAAIA,KAAE,IAAI,EAAEA,EAAC,IAAGI,GAAE,KAAKJ,EAAC,GAAEA,GAAE,QAAO;AAAA,YAAI,GAAE,QAAO,SAASA,IAAE;AAAC,kBAAIC,KAAE,EAAE,OAAOG,EAAC,GAAEH,KAAEC,KAAE,SAASF,IAAEC,IAAEC,IAAE;AAAC,kBAAE,SAASD,EAAC,MAAIA,KAAE,IAAI,EAAEA,EAAC,IAAG,EAAE,SAASC,EAAC,MAAIA,KAAE,IAAI,EAAEA,EAAC,IAAGD,GAAE,SAAO,IAAEA,KAAED,GAAEC,EAAC,IAAEA,GAAE,SAAO,MAAIA,KAAE,EAAE,OAAO,CAACA,IAAE,CAAC,GAAE,CAAC;AAAG,yBAAQE,KAAE,IAAI,EAAE,CAAC,GAAEC,KAAE,IAAI,EAAE,CAAC,GAAEC,KAAE,GAAEA,KAAE,GAAEA;AAAI,kBAAAF,GAAEE,MAAG,KAAGJ,GAAEI,KAAGD,GAAEC,MAAG,KAAGJ,GAAEI;AAAG,uBAAOH,KAAEF,GAAE,EAAE,OAAO,CAACG,IAAED,EAAC,CAAC,CAAC,GAAEF,GAAE,EAAE,OAAO,CAACI,IAAEF,EAAC,CAAC,CAAC;AAAA,cAAC,EAAEC,IAAED,IAAED,EAAC,IAAEE,GAAEF,EAAC;AAAE,qBAAOG,KAAE,MAAKJ,KAAEC,GAAE,SAASD,EAAC,IAAEC;AAAA,YAAC,EAAC;AAAA,UAAC;AAAC,mBAAS,IAAG;AAAC,gBAAID,KAAE,CAAC,EAAE,MAAM,KAAK,SAAS,EAAE,KAAK,GAAG;AAAE,kBAAM,IAAI,MAAM,CAACA,IAAE,2BAA0B,iDAAiD,EAAE,KAAK,IAAI,CAAC;AAAA,UAAC;AAAC,YAAE,KAAK,CAAC,GAAE,EAAE,aAAW,SAASA,IAAE;AAAC,mBAAO,EAAEA,EAAC;AAAA,UAAC,GAAE,EAAE,aAAW,GAAE,EAAE,cAAY,SAASA,IAAEC,IAAE;AAAC,gBAAG,CAACA,MAAG,CAACA,GAAE;AAAK,qBAAO,IAAI,EAAE,EAAED,EAAC,CAAC;AAAE,gBAAG;AAAC,cAAAC,GAAE,KAAK,MAAK,QAAO,IAAI,EAAE,EAAED,EAAC,CAAC,CAAC;AAAA,YAAC,SAAOA,IAAN;AAAS,cAAAC,GAAED,EAAC;AAAA,YAAC;AAAA,UAAC;AAAE,cAAI,GAAE,IAAE,CAAC,qBAAoB,gBAAe,kBAAiB,kBAAiB,oBAAmB,cAAa,gBAAe,uBAAsB,QAAQ,GAAE,IAAE,SAASA,IAAE;AAAC,cAAEA,MAAG,WAAU;AAAC,gBAAE,UAASA,IAAE,wBAAwB;AAAA,YAAC;AAAA,UAAC;AAAE,eAAI,KAAK;AAAE,cAAE,EAAE,IAAG,CAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,yEAAwE,8DAA8D;AAAA,MAAC,GAAE,EAAC,SAAQ,GAAE,SAAQ,GAAE,SAAQ,GAAE,YAAW,GAAE,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,IAAE,EAAE,WAAW;AAAE,mBAAS,EAAEA,IAAEC,IAAE;AAAC,YAAAD,GAAEC,MAAG,MAAI,OAAKA,KAAE,IAAGD,GAAE,MAAIC,KAAE,OAAK,KAAG,MAAIA;AAAE,qBAAQC,KAAE,YAAWC,KAAE,YAAWC,KAAE,aAAYC,KAAE,WAAUC,KAAE,GAAEA,KAAEN,GAAE,QAAOM,MAAG,IAAG;AAAC,kBAAIE,KAAEN,IAAEK,KAAEJ,IAAEM,KAAEL,IAAEM,KAAEL,IAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,SAAS,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,WAAW;AAAE,cAAAJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,SAAS,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,MAAM,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,KAAI,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,IAAG,SAAS,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEJ,KAAE,EAAEA,IAAEC,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,UAAU,GAAEF,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,GAAE,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,SAAS,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,GAAE,QAAQ,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,UAAU,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,SAAS,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,GAAE,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,KAAI,GAAE,WAAW,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,GAAE,SAAS,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEC,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEF,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,OAAO,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,UAAU,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,SAAS,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,WAAW,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,KAAI,GAAE,SAAS,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,QAAQ,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,SAAS,GAAEJ,KAAE,EAAEA,IAAEC,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,SAAS,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,KAAI,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,KAAI,IAAG,QAAQ,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,IAAG,SAAS,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,WAAW,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,KAAI,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEC,IAAEC,IAAEC,IAAEL,GAAEM,KAAE,IAAG,GAAE,UAAU,GAAED,KAAE,EAAEA,IAAEH,IAAEC,IAAEC,IAAEJ,GAAEM,KAAE,KAAI,IAAG,WAAW,GAAEF,KAAE,EAAEA,IAAEC,IAAEH,IAAEC,IAAEH,GAAEM,KAAE,IAAG,IAAG,SAAS,GAAEH,KAAE,EAAEA,IAAEC,IAAEC,IAAEH,IAAEF,GAAEM,KAAE,IAAG,IAAG,UAAU,GAAEJ,KAAE,EAAEA,IAAEM,EAAC,GAAEL,KAAE,EAAEA,IAAEI,EAAC,GAAEH,KAAE,EAAEA,IAAEK,EAAC,GAAEJ,KAAE,EAAEA,IAAEK,EAAC;AAAA,YAAC;AAAC,mBAAO,MAAMR,IAAEC,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEL,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,GAAGJ,KAAE,EAAE,EAAEA,IAAED,EAAC,GAAE,EAAEG,IAAEE,EAAC,CAAC,MAAID,KAAEH,OAAI,KAAGG,IAAEF,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAEL,KAAEC,KAAE,CAACD,KAAEE,IAAEH,IAAEC,IAAEG,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEN,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAEL,KAAEE,KAAED,KAAE,CAACC,IAAEH,IAAEC,IAAEG,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEN,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAEL,KAAEC,KAAEC,IAAEH,IAAEC,IAAEG,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEN,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,mBAAO,EAAEJ,MAAGD,KAAE,CAACE,KAAGH,IAAEC,IAAEG,IAAEC,IAAEC,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEN,IAAEC,IAAE;AAAC,gBAAIC,MAAG,QAAMF,OAAI,QAAMC;AAAG,oBAAOD,MAAG,OAAKC,MAAG,OAAKC,MAAG,OAAK,KAAG,QAAMA;AAAA,UAAC;AAAC,YAAE,UAAQ,SAASF,IAAE;AAAC,mBAAO,EAAE,KAAKA,IAAE,GAAE,EAAE;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,uEAAsE,8DAA8D;AAAA,MAAC,GAAE,EAAC,aAAY,GAAE,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAEC,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI;AAAE,YAAE,UAAQ,KAAG,SAASD,IAAE;AAAC,qBAAQC,IAAEC,KAAE,IAAI,MAAMF,EAAC,GAAEG,KAAE,GAAEA,KAAEH,IAAEG;AAAI,oBAAI,IAAEA,QAAKF,KAAE,aAAW,KAAK,OAAO,IAAGC,GAAEC,MAAGF,SAAM,IAAEE,OAAI,KAAG;AAAI,mBAAOD;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,uEAAsE,8DAA8D;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASF,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,IAAE,EAAE,WAAW;AAAE,mBAAS,EAAEU,IAAEC,IAAE;AAAC,YAAAD,GAAEC,MAAG,MAAI,OAAK,KAAGA,KAAE,IAAGD,GAAE,MAAIC,KAAE,MAAI,KAAG,MAAIA;AAAE,qBAAQX,IAAEC,IAAEC,IAAEC,KAAE,MAAM,EAAE,GAAEC,KAAE,YAAWC,KAAE,YAAWC,KAAE,aAAYE,KAAE,WAAUI,KAAE,aAAY,IAAE,GAAE,IAAEF,GAAE,QAAO,KAAG,IAAG;AAAC,uBAAQ,IAAEN,IAAE,IAAEC,IAAE,IAAEC,IAAE,IAAEE,IAAE,IAAEI,IAAEL,KAAE,GAAEA,KAAE,IAAGA,MAAI;AAAC,gBAAAJ,GAAEI,MAAGA,KAAE,KAAGG,GAAE,IAAEH,MAAG,EAAEJ,GAAEI,KAAE,KAAGJ,GAAEI,KAAE,KAAGJ,GAAEI,KAAE,MAAIJ,GAAEI,KAAE,KAAI,CAAC;AAAE,oBAAIE,KAAE,EAAE,EAAE,EAAEL,IAAE,CAAC,IAAGK,KAAEJ,IAAEJ,KAAEK,IAAEJ,KAAEM,KAAGR,KAAEO,MAAG,KAAGE,KAAER,KAAE,CAACQ,KAAEP,KAAE,EAAEF,KAAE,OAAKA,KAAE,KAAGS,KAAER,KAAEQ,KAAEP,KAAED,KAAEC,KAAEO,KAAER,KAAEC,GAAE,GAAE,EAAE,EAAEU,IAAET,GAAEI,GAAE,IAAGP,KAAEO,MAAG,KAAG,aAAWP,KAAE,KAAG,aAAWA,KAAE,KAAG,cAAY,UAAU,CAAC,GAAEY,KAAEJ,IAAEA,KAAEF,IAAEA,KAAE,EAAED,IAAE,EAAE,GAAEA,KAAED,IAAEA,KAAEK;AAAA,cAAC;AAAC,cAAAL,KAAE,EAAEA,IAAE,CAAC,GAAEC,KAAE,EAAEA,IAAE,CAAC,GAAEC,KAAE,EAAEA,IAAE,CAAC,GAAEE,KAAE,EAAEA,IAAE,CAAC,GAAEI,KAAE,EAAEA,IAAE,CAAC;AAAA,YAAC;AAAC,mBAAO,MAAMR,IAAEC,IAAEC,IAAEE,IAAEI,EAAC;AAAA,UAAC;AAAC,mBAAS,EAAEZ,IAAEC,IAAE;AAAC,gBAAIC,MAAG,QAAMF,OAAI,QAAMC;AAAG,oBAAOD,MAAG,OAAKC,MAAG,OAAKC,MAAG,OAAK,KAAG,QAAMA;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAEC,IAAE;AAAC,mBAAOD,MAAGC,KAAED,OAAI,KAAGC;AAAA,UAAC;AAAC,YAAE,UAAQ,SAASD,IAAE;AAAC,mBAAO,EAAE,KAAKA,IAAE,GAAE,IAAG,IAAE;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,uEAAsE,8DAA8D;AAAA,MAAC,GAAE,EAAC,aAAY,GAAE,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,GAAE,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,mBAAS,EAAEA,IAAEC,IAAE;AAAC,gBAAIC,MAAG,QAAMF,OAAI,QAAMC;AAAG,oBAAOD,MAAG,OAAKC,MAAG,OAAKC,MAAG,OAAK,KAAG,QAAMA;AAAA,UAAC;AAAC,mBAAS,EAAEF,IAAEU,IAAE;AAAC,gBAAIC,IAAEC,KAAE,IAAI,MAAM,YAAW,YAAW,YAAW,YAAW,WAAU,YAAW,YAAW,YAAW,YAAW,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,WAAU,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,WAAU,WAAU,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,WAAU,WAAU,WAAU,WAAU,WAAU,WAAU,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,UAAU,GAAEX,KAAE,IAAI,MAAM,YAAW,YAAW,YAAW,YAAW,YAAW,YAAW,WAAU,UAAU,GAAEC,KAAE,IAAI,MAAM,EAAE;AAAE,YAAAF,GAAEU,MAAG,MAAI,OAAK,KAAGA,KAAE,IAAGV,GAAE,MAAIU,KAAE,MAAI,KAAG,MAAIA;AAAE,qBAAQP,IAAEC,IAAE,IAAE,GAAE,IAAEJ,GAAE,QAAO,KAAG,IAAG;AAAC,uBAAQK,KAAEJ,GAAE,IAAGK,KAAEL,GAAE,IAAGO,KAAEP,GAAE,IAAG,IAAEA,GAAE,IAAGM,KAAEN,GAAE,IAAG,IAAEA,GAAE,IAAG,IAAEA,GAAE,IAAG,IAAEA,GAAE,IAAGQ,KAAE,GAAEA,KAAE,IAAGA;AAAI,gBAAAP,GAAEO,MAAGA,KAAE,KAAGT,GAAES,KAAE,KAAG,EAAE,EAAE,GAAGL,KAAEF,GAAEO,KAAE,IAAG,EAAEL,IAAE,EAAE,IAAE,EAAEA,IAAE,EAAE,IAAE,EAAEA,IAAE,EAAE,IAAGF,GAAEO,KAAE,EAAE,IAAGL,KAAEF,GAAEO,KAAE,KAAI,EAAEL,IAAE,CAAC,IAAE,EAAEA,IAAE,EAAE,IAAE,EAAEA,IAAE,CAAC,EAAE,GAAEF,GAAEO,KAAE,GAAG,GAAEE,KAAE,EAAE,EAAE,EAAE,EAAE,GAAE,EAAEP,KAAEG,IAAE,CAAC,IAAE,EAAEH,IAAE,EAAE,IAAE,EAAEA,IAAE,EAAE,CAAC,GAAEG,KAAE,IAAE,CAACA,KAAE,CAAC,GAAEK,GAAEH,GAAE,GAAEP,GAAEO,GAAE,GAAEN,KAAE,EAAE,EAAEA,KAAEE,IAAE,CAAC,IAAE,EAAEF,IAAE,EAAE,IAAE,EAAEA,IAAE,EAAE,GAAEE,KAAEC,KAAED,KAAEG,KAAEF,KAAEE,EAAC,GAAE,IAAE,GAAE,IAAE,GAAE,IAAED,IAAEA,KAAE,EAAE,GAAEI,EAAC,GAAE,IAAEH,IAAEA,KAAEF,IAAEA,KAAED,IAAEA,KAAE,EAAEM,IAAER,EAAC;AAAE,cAAAF,GAAE,KAAG,EAAEI,IAAEJ,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAEK,IAAEL,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAEO,IAAEP,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAE,GAAEA,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAEM,IAAEN,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAE,GAAEA,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAE,GAAEA,GAAE,EAAE,GAAEA,GAAE,KAAG,EAAE,GAAEA,GAAE,EAAE;AAAA,YAAC;AAAC,mBAAOA;AAAA,UAAC;AAAC,cAAI,IAAE,EAAE,WAAW,GAAE,IAAE,SAASD,IAAEC,IAAE;AAAC,mBAAOD,OAAIC,KAAED,MAAG,KAAGC;AAAA,UAAC,GAAE,IAAE,SAASD,IAAEC,IAAE;AAAC,mBAAOD,OAAIC;AAAA,UAAC;AAAE,YAAE,UAAQ,SAASD,IAAE;AAAC,mBAAO,EAAE,KAAKA,IAAE,GAAE,IAAG,IAAE;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,0EAAyE,8DAA8D;AAAA,MAAC,GAAE,EAAC,aAAY,GAAE,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,IAAG,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAASA,IAAEC,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,YAAE,OAAK,SAASD,IAAEC,IAAEC,IAAEC,IAAEC,IAAE;AAAC,gBAAIC,IAAEC,IAAE,IAAE,IAAEF,KAAED,KAAE,GAAE,KAAG,KAAG,KAAG,GAAE,IAAE,KAAG,GAAEK,KAAE,IAAGD,KAAEL,KAAEE,KAAE,IAAE,GAAEK,KAAEP,KAAE,KAAG,GAAEE,KAAEJ,GAAEC,KAAEM;AAAG,iBAAIA,MAAGE,IAAEJ,KAAED,MAAG,KAAG,CAACI,MAAG,GAAEJ,OAAI,CAACI,IAAEA,MAAG,GAAE,IAAEA,IAAEH,KAAE,MAAIA,KAAEL,GAAEC,KAAEM,KAAGA,MAAGE,IAAED,MAAG;AAAE;AAAC,iBAAIF,KAAED,MAAG,KAAG,CAACG,MAAG,GAAEH,OAAI,CAACG,IAAEA,MAAGL,IAAE,IAAEK,IAAEF,KAAE,MAAIA,KAAEN,GAAEC,KAAEM,KAAGA,MAAGE,IAAED,MAAG;AAAE;AAAC,gBAAG,MAAIH;AAAE,cAAAA,KAAE,IAAE;AAAA,iBAAM;AAAC,kBAAGA,OAAI;AAAE,uBAAOC,KAAE,MAAI,IAAE,KAAGF,KAAE,KAAG;AAAG,cAAAE,MAAG,KAAK,IAAI,GAAEH,EAAC,GAAEE,MAAG;AAAA,YAAC;AAAC,oBAAOD,KAAE,KAAG,KAAGE,KAAE,KAAK,IAAI,GAAED,KAAEF,EAAC;AAAA,UAAC,GAAE,EAAE,QAAM,SAASH,IAAEC,IAAE,GAAEC,IAAEC,IAAE,GAAE;AAAC,gBAAIC,IAAEC,IAAEC,KAAE,IAAE,IAAEH,KAAE,GAAEK,MAAG,KAAGF,MAAG,GAAEC,KAAEC,MAAG,GAAE,IAAE,OAAKL,KAAE,KAAK,IAAI,GAAE,GAAG,IAAE,KAAK,IAAI,GAAE,GAAG,IAAE,GAAEM,KAAEP,KAAE,IAAE,IAAE,GAAE,IAAEA,KAAE,IAAE,IAAG,IAAED,KAAE,KAAG,MAAIA,MAAG,IAAEA,KAAE,IAAE,IAAE;AAAE,iBAAIA,KAAE,KAAK,IAAIA,EAAC,GAAE,MAAMA,EAAC,KAAGA,OAAI,IAAE,KAAGI,KAAE,MAAMJ,EAAC,IAAE,IAAE,GAAEG,KAAEI,OAAIJ,KAAE,KAAK,MAAM,KAAK,IAAIH,EAAC,IAAE,KAAK,GAAG,GAAEA,MAAGC,KAAE,KAAK,IAAI,GAAE,CAACE,EAAC,KAAG,MAAIA,MAAIF,MAAG,IAAG,MAAID,MAAG,KAAGG,KAAEG,KAAE,IAAEL,KAAE,IAAE,KAAK,IAAI,GAAE,IAAEK,EAAC,KAAGL,OAAIE,MAAIF,MAAG,IAAGM,MAAGJ,KAAEG,MAAGF,KAAE,GAAED,KAAEI,MAAG,KAAGJ,KAAEG,MAAGF,MAAGJ,KAAEC,KAAE,KAAG,KAAK,IAAI,GAAEC,EAAC,GAAEC,MAAGG,OAAIF,KAAEJ,KAAE,KAAK,IAAI,GAAEM,KAAE,CAAC,IAAE,KAAK,IAAI,GAAEJ,EAAC,GAAEC,KAAE,KAAI,KAAGD,IAAEH,GAAE,IAAES,MAAG,MAAIJ,IAAEI,MAAG,GAAEJ,MAAG,KAAIF,MAAG;AAAE;AAAC,iBAAIC,KAAEA,MAAGD,KAAEE,IAAEC,MAAGH,IAAE,IAAEG,IAAEN,GAAE,IAAES,MAAG,MAAIL,IAAEK,MAAG,GAAEL,MAAG,KAAIE,MAAG;AAAE;AAAC,YAAAN,GAAE,IAAES,KAAE,MAAI,MAAI;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,+DAA8D,oDAAoD;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,CAAC,GAAE,IAAG,CAAC,SAAS,GAAE,GAAE,GAAE;AAAC,SAAC,SAAST,IAAEC,IAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,cAAI,GAAE,GAAE;AAAE,mBAAS,IAAG;AAAA,UAAC;AAAC,WAACD,KAAE,EAAE,UAAQ,CAAC,GAAG,YAAU,IAAE,eAAa,OAAO,UAAQ,OAAO,cAAa,IAAE,eAAa,OAAO,UAAQ,OAAO,eAAa,OAAO,kBAAiB,IAAE,SAASA,IAAE;AAAC,mBAAO,OAAO,aAAaA,EAAC;AAAA,UAAC,IAAE,KAAG,IAAE,CAAC,GAAE,OAAO,iBAAiB,WAAU,SAASA,IAAE;AAAC,gBAAIC,KAAED,GAAE;AAAO,YAAAC,OAAI,UAAQ,SAAOA,MAAG,mBAAiBD,GAAE,SAAOA,GAAE,gBAAgB,GAAE,IAAE,EAAE,UAAQ,EAAE,MAAM,EAAE;AAAA,UAAE,GAAE,IAAE,GAAE,SAASA,IAAE;AAAC,cAAE,KAAKA,EAAC,GAAE,OAAO,YAAY,gBAAe,GAAG;AAAA,UAAC,KAAG,SAASA,IAAE;AAAC,uBAAWA,IAAE,CAAC;AAAA,UAAC,IAAGA,GAAE,QAAM,WAAUA,GAAE,UAAQ,MAAGA,GAAE,MAAI,CAAC,GAAEA,GAAE,OAAK,CAAC,GAAEA,GAAE,KAAG,GAAEA,GAAE,cAAY,GAAEA,GAAE,OAAK,GAAEA,GAAE,MAAI,GAAEA,GAAE,iBAAe,GAAEA,GAAE,qBAAmB,GAAEA,GAAE,OAAK,GAAEA,GAAE,UAAQ,SAASA,IAAE;AAAC,kBAAM,IAAI,MAAM,kCAAkC;AAAA,UAAC,GAAEA,GAAE,MAAI,WAAU;AAAC,mBAAM;AAAA,UAAG,GAAEA,GAAE,QAAM,SAASA,IAAE;AAAC,kBAAM,IAAI,MAAM,gCAAgC;AAAA,UAAC;AAAA,QAAC,EAAE,KAAK,MAAK,EAAE,QAAQ,GAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,CAAC,GAAE,EAAE,QAAQ,EAAE,QAAO,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,UAAU,IAAG,iEAAgE,oDAAoD;AAAA,MAAC,GAAE,EAAC,QAAO,GAAE,QAAO,GAAE,CAAC,EAAC,GAAE,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAAA,IAAC,CAAC;AAAA;AAAA;;;ACEt9jC,mBAAoD;AAGpD,IAAAa,yBAAqB;AACrB,gCAAoB;AACpB,IAAAC,4BAAsB;AACtB,IAAAC,+BAA2B;;;ACP3B,yBAAiB;AACjB,4BAAqB;AACrB,+BAAsB;AACtB,kCAA2B;AAE3B,IAAI,WAAW;AAAA,EACb,UAAU;AAAA,EACV,aAAa;AAAA,EACb,WAAW;AAAA,EACX,WAAW;AAAA,EAEX,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AACZ;AAEA,IAAM,kBAAkB;AAAA,EAEtB,CAAC,GAAG,SAAS,WAAW;AAAA,IACtB,iCAAiC;AAAA,0BACX,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC;AAAA,EACA,CAAC,GAAG,SAAS,aAAa;AAAA,IACxB,2BAA2B;AAAA,yBACN,SAAS;AAAA;AAAA,EAEhC;AAAA,EACA,CAAC,GAAG,SAAS,gBAAgB;AAAA,IAC3B,2BAA2B;AAAA,qCACM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ5C;AAAA,EACA,CAAC,GAAG,SAAS,cAAc;AAAA,IACzB,wBAAwB;AAAA,qBACP,SAAS;AAAA;AAAA,EAE5B;AAAA,EAEA,CAAC,GAAG,SAAS,iBAAiB;AAAA,IAC5B,6BAA6B;AAAA;AAAA,qBAEZ,SAAS;AAAA;AAAA,EAE5B;AAAA,EACA,CAAC,GAAG,SAAS,cAAc;AAAA,IACzB,iCAAiC;AAAA;AAAA,sBAEf,SAAS;AAAA;AAAA,EAE7B;AAAA,EACA,CAAC,GAAG,SAAS,aAAa;AAAA,IACxB,0CAA0C;AAAA,mCACX,SAAS;AAAA;AAAA,EAE1C;AAAA,EACA,CAAC,GAAG,SAAS,cAAc;AAAA,IACzB,oCAAoC;AAAA;AAAA,wBAEhB,SAAS;AAAA;AAAA,EAE/B;AAAA,EACA,CAAC,GAAG,SAAS,cAAc;AAAA,IACzB,oCAAoC;AAAA;AAAA,wBAEhB,SAAS;AAAA;AAAA,EAE/B;AACF;AACA,IAAM,0BAA0B;AAAA,EAE9B,CAAC,GAAG,SAAS,aAAa;AAAA,IACxB,6EAA6E;AAAA,+DAClB,SAAS;AAAA;AAAA,EAEtE;AAAA,EACA,CAAC,GAAG,SAAS,gBAAgB;AAAA,IAC3B,6EAA6E;AAAA,oBAC7D,SAAS;AAAA;AAAA,EAE3B;AAAA,EAEA,CAAC,GAAG,SAAS,iBAAiB;AAAA,IAC5B,8CAA8C;AAAA,qBAC7B,SAAS;AAAA;AAAA,EAE5B;AAAA,EACA,CAAC,GAAG,SAAS,cAAc;AAAA,IACzB,8CAA8C;AAAA,qBAC7B,SAAS;AAAA;AAAA,EAE5B;AACF;AAEA,IAAM,qBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA,IAAM,aAAa,CAAC,KAAK,MAAM,QAAQ,IAAI,MAAM,IAAI,EAAE,KAAK,GAAG;AAE/D,IAAM,oBAAoB,SAAU,GAAG;AACrC,SAAO,EAAE,QAAQ,0BAA0B,MAAM;AACnD;AAEA,IAAM,eAAe,CAAC,KAAK,UAAU;AACnC,SAAO,IAAI,OAAO,MAAM,kBAAkB,KAAK,MAAM,EAAE,KAAK,GAAG;AACjE;AAEA,SAAS,cAAc,GAAG;AACxB,MAAI;AAEF,QAAI,EAAE;AAAA,EACR,SAAS,KAAP;AACA,QAAI,IAAI,QAAQ,QAAQ,sBAAsB,KAAK,GAAG;AACpD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AACA,IAAM,uBAAN,cAAmC,SAAS;AAAA,EAC1C,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,OACG;AAAA,EACL,GAAG;AACD,QAAI;AAEJ,QAAI,cAAc,YAAY,GAAG;AAC/B,aAAO,IAAI,aAAa,IAAI;AAAA,IAC9B,OAAO;AACL,aAAO;AACP,aAAO,OAAO,MAAM,IAAI;AAAA,IAC1B;AAEA,QAAI,KAAK,SAAS,qBAAqB;AACrC,YAAM,IAAI,MAAM,yDAAyD;AAAA,IAC3E;AAEA,UAAM;AACN,SAAK,WAAW,YAAY,CAAC;AAC7B,SAAK,kBAAkB,YAAY,CAAC;AACpC,SAAK,MAAM,kBAAkB;AAC7B,SAAK,MAAM,gBAAgB;AAC3B,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,QAAQ,KAAK;AAClB,SAAK,cAAc,UAAU,aAAa;AAE1C,eAAW,OAAO,MAAM;AACtB,UAAI,IAAI;AAER,UAAI,IAAI,WAAW,GAAG,GAAG;AACvB,YAAI,IAAI,MAAM,GAAG,EAAE;AAAA,MACrB;AAGA,UAAI,KAAK,OAAO;AAAW,aAAK,KAAK;AAErC,WAAK,KAAK,KAAK;AAAA,IACjB;AAEA,SAAK,OAAO;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,MAAM;AACX,UAAM,YAAY,QAAQ,OAAO,SAAS,KAAK,aAAa,CAAC;AAC7D,UAAM,kBAAkB,QAAQ,OAAO,SAAS,KAAK,mBAAmB,KAAK;AAC7E,UAAM,gBAAgB,QAAQ,OAAO,SAAS,KAAK,iBAAiB,KAAK;AACzE,UAAM,qBAAqB,OAAO,OAAO,QAAQ,EAAE,OAAO,CAAC,MAAM;AAAA,MAC/D;AAAA,IACF,MAAM;AACJ,aAAO,OAAO,KAAK,UAAU,KAAK;AAAA,IACpC,GAAG,EAAE;AACL,SAAK,QAAQ,QAAQ,OAAO,SAAS,KAAK,YAAY,OAAO,SAAS,KAAK,SAAS,UAAM,mBAAAC,SAAK,CAAC,gBAAgB,cAAc,oBAAoB,KAAK,WAAW,CAAC;AACnK,SAAK,iBAAiB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,QAAQ;AAEN,UAAM,IAAI,IAAI,KAAK,YAAY;AAAA,MAC7B,cAAc,KAAK;AAAA,MACnB,gBAAgB,KAAK;AAAA,MACrB,cAAc,KAAK;AAAA,MACnB,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,IACjB,CAAC;AAED,eAAW,OAAO,MAAM;AACtB,UAAI,QAAQ;AAAQ;AAEpB,QAAE,OAAO,KAAK;AAAA,IAChB;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,iBAAiB;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAM,uBAAuB,KAAK,YAAY,cAAc;AAC5D,UAAM,qBAAqB,KAAK,YAAY,YAAY;AACxD,SAAK,WAAW,YAAY,CAAC;AAE7B,SAAK,wBAAwB,MAAM;AACjC,aAAO,KAAK;AAAA,IACd;AAEA,SAAK,kBAAkB,YAAU;AAC/B,UAAI,sBAAsB;AACxB,cAAM,wBAAwB,KAAK,YAAY,sBAAsB,OAAO,cAAc;AAC1F,eAAO,iBAAiB,KAAK,kBAAkB,IAAI;AAAA,MACrD;AAEA,UAAI,oBAAoB;AACtB,cAAM,sBAAsB,KAAK,YAAY,oBAAoB,OAAO,YAAY;AACpF,eAAO,eAAe,yBAAyB;AAC/C,eAAO,eAAe,KAAK,kBAAkB,IAAI,OAAO;AAAA,MAC1D;AAEA,aAAO,WAAW;AAAA,QAAE,GAAG,OAAO;AAAA,QAC5B,GAAG,KAAK;AAAA,MACV;AACA,WAAK,WAAW,OAAO;AAAA,IACzB;AAEA,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,oBAAoB;AAClB,WAAO,cAAc,KAAK,MAAM,YAAY;AAAA;AAAA,EAC9C;AAAA,EAEA,yBAAyB;AACvB,YAAQ,KAAK,OAAO;AAAA,MAClB,KAAK;AACH,eAAO;AAAA,MAET;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAAA,EAEA,YAAY,cAAc,QAAQ;AAChC,QAAI,gBAAgB;AACpB,UAAM,WAAW;AAAA,MAAE,GAAG,KAAK,uBAAuB;AAAA,MAChD,GAAG,KAAK;AAAA,IACV;AACA,WAAO,KAAK,QAAQ,EAAE,QAAQ,UAAQ;AACpC,aAAO,KAAK,SAAS,KAAK,EAAE,QAAQ,SAAO;AACzC,YAAI,aAAa,aAAa,MAAM,IAAI,GAAG;AACzC,0BAAgB,WAAW,eAAe,KAAK,SAAS,MAAM,IAAI;AAAA,QACpE;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,oBAAgB,cAAc,QAAQ,iBAAiB;AAAA,YAC/C,aAAa;AAAA;AAAA,cAEX;AAAA,cACA,aAAa;AAAA,WAChB;AACP,oBAAgB,aAAa,UAAU;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,YAAY,QAAQ;AAClB,QAAI,CAAC;AAAQ;AAEb,UAAM,IAAI,OAAO,QAAQ,iCAAiC,EAAE;AAC5D,UAAM,aAAS,sBAAAC,SAAS,CAAC;AACzB,UAAM,YAAQ,4BAAAC,SAAe,MAAM;AACnC,UAAM,YAAY,MAAM,IAAI,OAAK;AAC/B,aAAO,EAAE;AAAA,IACX,CAAC,EAAE,QAAQ,MAAM;AACjB,UAAM,gBAAY,yBAAAC,SAAU,OAAO,MAAM,GAAG,aAAa,IAAI,MAAM,WAAW,MAAM,KAAK,MAAS,CAAC;AACnG,UAAM,WAAW,aAAa,IAAI,KAAK,mBAAmB,QAAQ,MAAM,WAAW,IAAI,IAAI;AAC3F,WAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,mBAAmB,QAAQ,OAAO;AAChC,eAAO,yBAAAA,SAAU,OAAO,MAAM,MAAM,IAAI,MAAM,EAAE,CAAC;AAAA,EACnD;AAEF;;;ADlVA,oBAA2B;AAG3B,SAAS,WAAW,OAAO;AACzB,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,IAAI,MAAQ,KAAK,EAAE,oBAAoB;AAAA,EAChD;AAEA,SAAO;AACT;AACA,SAAS,qBAAqB,OAAO;AACnC,UAAQ,OAAO;AAAA,IACb,KAAK;AACH,aAAO;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IAEF;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AACA,SAAS,qBAAqB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,IAAI,CAAC,GAAG;AACN,SAAO,CAAC;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG,IAAI;AACT;AACA,SAAS,mBAAmB,MAAM;AAChC,SAAO,gBAAgB,WAAW,gBAAgB,WAAW,gBAAgB,WAAW,gBAAgB,WAAW,gBAAgB;AACrI;AACA,SAAS,cAAc,MAAM;AAC3B,MAAI,mBAAmB,IAAI,GAAG;AAC5B,WAAO,KAAK,QAAQ;AAAA,EACtB,WAAW,gBAAgB,OAAS;AAClC,WAAO,MAAM,KAAK,MAAM,EAAE,oBAAoB,EAAE,aAAa;AAAA,EAC/D,WAAW,gBAAgB,SAAW;AACpC,WAAO,KAAK,MAAM;AAAA,EACpB;AAEA,SAAO;AACT;AAEA,IAAM,aAAa;AAAA,EACjB,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AACX;AACA,IAAM,aAAa;AAAA,EACjB,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AACA,IAAM,eAAe;AAAA,EACnB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,IAAI;AACN;AACA,IAAM,eAAe;AAAA,EACnB,OAAa;AAAA,EACb,UAAgB;AAAA,EAChB,MAAY;AAAA,EACZ,OAAa;AAAA,EACb,SAAe;AAAA,EACf,UAAgB;AAClB;AAEA,IAAM,WAAN,MAAe;AAAA,EACb,YAAY,GAAG,OAAO,SAAS;AAC7B,SAAK,OAAO,UAAU,aAAa,EAAE,QAAQ,MAAM,GAAG;AACtD,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,UAAM,WAAW,OAAO,oBAAoB,CAAC,EAAE,OAAO,OAAK,EAAE,WAAW,IAAI,CAAC;AAC7E,UAAM,WAAW,SAAS,OAAO,CAAC,GAAG,MAAM;AACzC,UAAI;AAEJ,UAAI,SAAS,wBAAwB,OAAO,yBAAyB,GAAG,CAAC,MAAM,OAAO,SAAS,sBAAsB;AACrH,UAAI,mBAAmB,KAAK,KAAK,iBAAiB;AAAS,gBAAQ,MAAM,MAAM;AAC/E,aAAO;AAAA,QAAE,GAAG;AAAA,QACV,CAAC,EAAE,MAAM,CAAC,IAAI;AAAA,MAChB;AAAA,IACF,GAAG,CAAC,CAAC;AAEL,eAAW,OAAO,UAAU;AAC1B,YAAM,WAAW,IAAI,MAAM,GAAG,EAAE;AAChC,WAAK,SAAS,OAAO,SAAS,MAAM,eAAe;AAAW,iBAAS,OAAO,MAAM;AAAA,IACtF;AAEA,QAAI,OAAO;AACT,aAAO,KAAK,KAAK,EAAE,IAAI,SAAO;AAC5B,YAAI,MAAM,SAAS,QAAW;AAE5B,eAAK,OAAO,MAAM;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,SAAK,WAAW,CAAC;AACjB,SAAK,SAAS,CAAC;AACf,UAAM,aAAa,CAAC;AACpB,WAAO,KAAK,QAAQ,EAAE,IAAI,SAAO;AAC/B,YAAM,WAAW,IAAI,MAAM,GAAG,EAAE;AAChC,WAAK,SAAS,KAAK,KAAK,QAAQ,cAAc;AAAA,QAC5C,OAAO,WAAW,SAAS,IAAI;AAAA,MACjC;AACA,WAAK,OAAO,KAAK;AAAA,QACf,OAAO,SAAS;AAAA,QAChB,OAAO;AAAA,MACT,CAAC;AACD,iBAAW,YAAY;AAAA,QACrB,KAAK,OAAK;AACR,eAAK,SAAS,KAAK,KAAK,QAAQ,YAAY,QAAQ,WAAW,CAAC;AAAA,QAClE;AAAA,QACA,KAAK,MAAM;AACT,iBAAO,KAAK,SAAS,KAAK,KAAK,QAAQ,YAAY;AAAA,QACrD;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,SAAS,QAAQ,MAAM;AAAM,WAAK,OAAO,MAAM;AACnD,QAAI,SAAS,QAAQ,MAAM;AAAM,WAAK,OAAO,MAAM;AACnD,QAAI,SAAS,QAAQ,MAAM;AAAS,WAAK,UAAU,MAAM;AACzD,WAAO,iBAAiB,MAAM,UAAU;AACxC,SAAK,eAAe;AACpB,SAAK,iBAAiB;AACtB,SAAK,kBAAkB;AACvB,SAAK,oBAAoB;AACzB,SAAK,UAAU;AACf,SAAK,aAAa,CAAC;AAOnB,SAAK,OAAO,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAAS,OAAO,OAAO,UAAU;AAAA,IACnC,CAAC;AACD,SAAK,OAAO,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EAEA,aAAa,aAAa;AACxB,QAAI;AAEJ,UAAM,UAAU,OAAO,oBAAoB,WAAW,EAAE,OAAO,OAAK,MAAM,oBAAoB,MAAM,cAAc,EAAE,OAAO,CAAC,GAAG,MAAM;AACnI,UAAI;AAEJ,aAAO;AAAA,QAAE,GAAG;AAAA,QACV,CAAC,KAAK,yBAAyB,OAAO,yBAAyB,aAAa,CAAC,MAAM,OAAO,SAAS,uBAAuB;AAAA,MAC5H;AAAA,IACF,GAAG,CAAC,CAAC;AACL,UAAM,SAAS;AAAA,MACb,UAAM,uBAAAC,SAAS,QAAQ,gBAAgB,EAAE;AAAA,MACzC,UAAM,uBAAAA,SAAS,QAAQ,kBAAkB,EAAE;AAAA,IAC7C;AACA,UAAM,WAAW;AAAA,MACf,UAAM,0BAAAC,SAAQ,OAAO,MAAM,KAAK,aAAa,KAAK,IAAI,CAAC;AAAA,MACvD,UAAM,0BAAAA,SAAQ,OAAO,MAAM,KAAK,aAAa,KAAK,IAAI,CAAC;AAAA,IACzD;AACA,UAAM,QAAQ;AAAA,MACZ,UAAM,6BAAAC,SAAe,SAAS,IAAI;AAAA,MAClC,UAAM,6BAAAA,SAAe,SAAS,IAAI;AAAA,IACpC;AACA,UAAM,YAAY;AAAA,MAChB,MAAM,MAAM,KAAK,IAAI,OAAK;AACxB,eAAO,EAAE;AAAA,MACX,CAAC,EAAE,QAAQ,MAAM;AAAA,MACjB,MAAM,MAAM,KAAK,IAAI,OAAK;AACxB,eAAO,EAAE;AAAA,MACX,CAAC,EAAE,QAAQ,MAAM;AAAA,IACnB;AACA,UAAM,YAAY;AAAA,MAChB,MAAM,UAAU,QAAQ,QAAI,0BAAAC,SAAU,SAAS,KAAK,MAAM,GAAG,MAAM,KAAK,UAAU,MAAM,MAAM,EAAE,CAAC,IAAI;AAAA,MACrG,MAAM,UAAU,QAAQ,QAAI,0BAAAA,SAAU,SAAS,KAAK,MAAM,GAAG,MAAM,KAAK,UAAU,MAAM,MAAM,EAAE,CAAC,IAAI;AAAA,IACvG;AACA,UAAM,aAAa;AAAA,MACjB,MAAM,UAAU,QAAQ,IAAI,KAAK,mBAAmB,SAAS,MAAM,MAAM,KAAK,UAAU,MAAM,IAAI,IAAI;AAAA,MACtG,MAAM,UAAU,QAAQ,IAAI,KAAK,mBAAmB,SAAS,MAAM,MAAM,KAAK,UAAU,MAAM,IAAI,IAAI;AAAA,IACxG;AACA,SAAK,eAAe,KAAK,aAAa,WAAW,MAAM,IAAI;AAC3D,SAAK,iBAAiB,KAAK,aAAa,WAAW,IAAI;AACvD,SAAK,kBAAkB,UAAU;AACjC,SAAK,oBAAoB,UAAU;AACnC,KAAC,gBAAgB,KAAK,YAAY,OAAO,SAAS,cAAc,KAAK,MAAM,IAAI;AAC/E,SAAK,SAAS,KAAK,OAAO,OAAO,CAAC,OAAO,UAAU;AACjD,YAAM,SAAS,MAAM;AACrB,aAAO,UAAU,KAAK,OAAO,UAAU,SAAO;AAC5C,eAAO,IAAI,UAAU;AAAA,MACvB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,aAAa,MAAM;AACjB,QAAI,KAAK,WAAW,IAAI,GAAG;AACzB,YAAM,QAAQ,KAAK,MAAM,CAAC;AAC1B,aAAO,KAAK,KAAK,QAAQ;AAAA,IAC3B,WAAW,KAAK,WAAW,IAAI,GAAG;AAChC,YAAM,QAAQ,KAAK,MAAM,CAAC;AAC1B,aAAO,KAAK,KAAK,QAAQ;AAAA,IAC3B,WAAW,KAAK,WAAW,IAAI,GAAG;AAChC,YAAM,QAAQ,KAAK,MAAM,CAAC;AAC1B,aAAO,KAAK,KAAK,QAAQ;AAAA,IAC3B,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,aAAa,QAAQ,UAAU;AAC7B,UAAM,IAAI,OAAO,QAAQ,UAAU,MAAM,KAAK,OAAO,EAAE,QAAQ,UAAU,MAAM,KAAK,OAAO;AAC3F,UAAM,cAAc,EAAE,MAAM,gBAAgB;AAC5C,QAAI,YAAY,EAAE,QAAQ,kBAAkB,EAAE;AAE9C,QAAI,eAAe,QAAQ,YAAY,IAAI;AACzC,YAAM,iBAAiB,YAAY,GAAG,QAAQ,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,KAAK,EAAE;AAClF,YAAM,YAAY,KAAK,aAAa,gBAAgB,mBAAmB;AACvE,mBAAa,WAAW,0BAA0B,oBAAoB,uBAAuB;AAAA,IAC/F;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB,QAAQ,OAAO;AAChC,eAAO,0BAAAA,SAAU,OAAO,MAAM,MAAM,IAAI,MAAM,EAAE,CAAC;AAAA,EACnD;AAAA,EAEA,aAAa,GAAG,GAAG;AACjB,YAAQ,KAAK,MAAM;AAAA,MACjB;AAAA,MACA,KAAK;AACH,eAAO,sBAAsB,MAAM,MAAM;AAAA,MAE3C,KAAK;AACH,eAAO,oBAAoB,MAAM,MAAM;AAAA,MAEzC,KAAK;AACH,eAAO,yBAAyB,MAAM,MAAM;AAAA,MAE9C,KAAK;AACH,eAAO,yBAAyB,MAAM,MAAM;AAAA,MAE9C,KAAK;AACH,eAAO,wBAAwB,MAAM,MAAM;AAAA,MAE7C,KAAK;AACH,eAAO,uBAAuB,MAAM,MAAM;AAAA,MAE5C,KAAK;AACH,eAAO,uBAAuB,MAAM,MAAM;AAAA,MAE5C,KAAK;AACH,eAAO,wBAAwB,MAAM,MAAM;AAAA,MAE7C,KAAK;AACH,eAAO,uBAAuB,MAAM,MAAM;AAAA,MAE5C,KAAK;AACH,eAAO,0BAA0B,MAAM,MAAM;AAAA,MAE/C,KAAK;AACH,eAAO,wBAAwB,MAAM,MAAM;AAAA,MAE7C,KAAK;AACH,eAAO,yBAAyB,MAAM,MAAM;AAAA,IAChD;AAAA,EACF;AAAA,EAEA,YAAY;AACV,UAAM,eAAe,KAAK,OAAO,IAAI,CAAC;AAAA,MACpC;AAAA,MACA;AAAA,SACG;AAAA,IACL,MAAM;AACJ,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,GAAG,qBAAqB,KAAK;AAAA,QAC7B,GAAG;AAAA,QAEH,OAAO,cAAc,KAAK,MAAM;AAAA,MAClC;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EAEA,YAAY;AACV,UAAM,OAAO,KAAK,YAAY,KAAK,MAAM,GAAG,EAAE;AAC9C,QAAI,qBAAqB,OAAO,KAAK,IAAI;AACzC,yBAAqB,mBAAmB,OAAO,OAAK,CAAC,CAAC,QAAQ,YAAY,UAAU,kBAAkB,gBAAgB,qBAAqB,mBAAmB,WAAW,UAAU,SAAS,SAAS,EAAE,SAAS,CAAC,CAAC;AAClN,UAAM,kBAAkB,CAAC;AACzB,uBAAmB,QAAQ,OAAK;AAE9B,sBAAgB,KAAK,KAAK;AAAA,IAC5B,CAAC;AACD,UAAM,QAAQ,CAAC;AAEf,eAAW,OAAO,KAAK,UAAU;AAC/B,YAAMC,QAAO,IAAI,QAAQ,KAAK,KAAK,SAAS,EAAE;AAC9C,YAAMA,SAAQ,cAAc,KAAK,SAAS,KAAK,KAAK;AAAA,IACtD;AAEA,WAAO;AAAA,MACL,aAAa;AAAA,MACb,YAAY;AAAA,QAAE,GAAG;AAAA,QACf,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAEF;AAEA,IAAM,UAAN,cAAsB,SAAS;AAAA,EAC7B,YAAY,OAAO;AACjB,UAAM,SAAS;AAAA,MACb,MAAM;AAAA,MACN,GAAG;AAAA,IACL,GAAG,CAAAC,UAAQ;AACT,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,CAAC,UAAU,SAAS,QAAQ;AAAA,MACvC,CAAC;AACD,YAAM,UAAU,QAAQ,WAAWA,MAAK,MAAMA,MAAK,OAAO;AAC1D,MAAAA,MAAK,iBAAiBA,MAAK,eAAe,QAAQ,2BAA2B,OAAO;AAAA,IACtF,CAAC;AACD,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,WAAW,MAAM,MAAM;AAC5B,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO,YAAY,0BAA0B;AAAA,MAE/C,KAAK;AACH,eAAO,YAAY;AAAA,MAErB,KAAK;AACH,eAAO,YAAY;AAAA,IACvB;AAAA,EACF;AAEF;AACA,QAAQ,SAAS;AACjB,QAAQ,QAAQ;AAChB,QAAQ,WAAW,IAAI,QAAQ,GAAG,GAAG,CAAC;AACtC,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,QAAQ,UAAU;AAClB,QAAQ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvB,QAAQ,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBzB,IAAM,UAAN,cAAsB,SAAS;AAAA,EAC7B,YAAY,OAAO;AACjB,UAAM,SAAS;AAAA,MACb,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AAEF;AACA,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASzB,IAAM,UAAN,cAAsB,SAAS;AAAA,EAC7B,YAAY,OAAO;AACjB,UAAM,SAAS;AAAA,MACb,MAAM;AAAA,MACN,GAAG;AAAA,IACL,GAAG,CAAAA,UAAQ;AACT,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,OAAO,OAAO,UAAU;AAAA,MACnC,CAAC;AACD,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,OAAO,OAAO,YAAY;AAAA,MACrC,CAAC;AACD,YAAM,YAAY,QAAQ,iBAAiBA,MAAK,IAAI;AACpD,YAAM,UAAU,QAAQ,WAAWA,MAAK,OAAO;AAC/C,MAAAA,MAAK,eAAeA,MAAK,aAAa,QAAQ,2BAA2B,OAAO;AAChF,MAAAA,MAAK,iBAAiBA,MAAK,eAAe,QAAQ,yBAAyB,SAAS;AAAA,IACtF,CAAC;AACD,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,iBAAiB,MAAM;AAC5B,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF;AAAA,EAEA,OAAO,WAAW,MAAM;AACtB,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF;AAEF;AACA,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,WAAW,IAAI,QAAQ,GAAG,GAAG,CAAC;AACtC,QAAQ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvB,QAAQ,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BzB,IAAM,YAAN,cAAwB,SAAS;AAAA,EAC/B,YAAY,OAAO;AACjB,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AAEF;AACA,UAAU,UAAU;AACpB,UAAU,UAAU;AACpB,UAAU,SAAS;AACnB,UAAU,cAAc;AACxB,UAAU,UAAU;AACpB,UAAU,WAAW;AACrB,UAAU,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzB,UAAU,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB3B,IAAM,aAAN,cAAyB,SAAS;AAAA,EAChC,YAAY,OAAO;AACjB,UAAM,YAAY;AAAA,MAChB,MAAM;AAAA,MACN,GAAG;AAAA,IACL,GAAG,CAAAA,UAAQ;AACT,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,CAAC;AACD,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,OAAO,OAAO,YAAY;AAAA,MACrC,CAAC;AACD,YAAM,UAAU,WAAW,WAAWA,MAAK,OAAO;AAClD,MAAAA,MAAK,eAAeA,MAAK,aAAa,QAAQ,2BAA2B,WAAW,OAAO;AAC3F,MAAAA,MAAK,iBAAiBA,MAAK,eAAe,QAAQ,iBAAiBA,MAAK,QAAQ,GAAG;AAAA,IACrF,CAAC;AACD,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,WAAW,MAAM;AACtB,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF;AAEF;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB,WAAW,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B,WAAW,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB5B,IAAM,WAAN,cAAuB,SAAS;AAAA,EAC9B,YAAY,OAAO;AACjB,UAAM,UAAU;AAAA,MACd,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AAEF;AACA,SAAS,UAAU;AACnB,SAAS,QAAQ;AACjB,SAAS,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASxB,SAAS,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB1B,IAAM,YAAN,cAAwB,SAAS;AAAA,EAC/B,YAAY,OAAO;AACjB,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AAEF;AACA,UAAU,UAAU;AACpB,UAAU,QAAQ;AAClB,UAAU,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzB,UAAU,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW3B,IAAM,aAAN,cAAyB,SAAS;AAAA,EAChC,YAAY,OAAO;AACjB,UAAM,YAAY;AAAA,MAChB,MAAM;AAAA,MACN,GAAG;AAAA,IACL,GAAG,CAAAA,UAAQ;AACT,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,OAAO,OAAO,UAAU;AAAA,MACnC,CAAC;AACD,MAAAA,MAAK,OAAO,KAAK;AAAA,QACf,OAAOA,MAAK;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,OAAO,OAAO,YAAY;AAAA,MACrC,CAAC;AACD,YAAM,YAAY,WAAW,iBAAiBA,MAAK,IAAI;AACvD,YAAM,UAAU,WAAW,WAAWA,MAAK,OAAO;AAClD,MAAAA,MAAK,kBAAkBA,MAAK,gBAAgB,QAAQ,2BAA2B,OAAO;AACtF,MAAAA,MAAK,kBAAkBA,MAAK,gBAAgB,QAAQ,yBAAyB,SAAS;AAAA,IACxF,CAAC;AACD,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,iBAAiB,MAAM;AAC5B,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF;AAAA,EAEA,OAAO,WAAW,MAAM;AACtB,YAAQ,MAAM;AAAA,MACZ;AAAA,MACA,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,MAET,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF;AAEF;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,WAAW,IAAI,QAAQ,GAAG,GAAG,CAAC;AACzC,WAAW,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0C1B,IAAM,WAAN,cAAuB,SAAS;AAAA,EAC9B,YAAY,OAAO;AACjB,UAAM,UAAU;AAAA,MACd,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AAEF;AACA,SAAS,UAAU;AACnB,SAAS,cAAc,IAAI,QAAQ,GAAG,GAAG,CAAC;AAC1C,SAAS,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxB,SAAS,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB1B,IAAI,ksLA,IAAI,aeACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,IAAM,kBAAN,cAA8B,qBAAqB;AAAA,EACjD,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,OACG;AAAA,EACL,IAAI,CAAC,GAAG;AACN,UAAM;AAAA,MACJ,cAAc,aAAa,YAAY;AAAA,MACvC,GAAG;AAAA,IACL,CAAC;AACD,SAAK,OAAO;AACZ,SAAK,SAAS,CAAC;AACf,SAAK,WAAW;AAEhB,UAAM,aAAa,SAAS;AAE5B,UAAM,SAAS,SAAS,OAAO,QAAQ;AAEvC,SAAK,WAAW;AAAA,MACd,gBAAgB;AAAA,QACd,OAAO,OAAO,eAAe,WAAW,IAAU,MAAM,UAAU,EAAE,oBAAoB,IAAI;AAAA,MAC9F;AAAA,MACA,gBAAgB;AAAA,QACd,OAAO;AAAA,MACT;AAAA,IACF;AACA,SAAK,SAAS,UAAU,KAAK;AAC7B,SAAK,WAAW,YAAY,KAAK;AACjC,SAAK,OAAO,QAAQ,KAAK;AACzB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,aAAa;AACX,QAAI,kBAAkB;AACtB,QAAI,oBAAoB;AACxB,QAAI,eAAe;AACnB,QAAI,iBAAiB;AACrB,QAAI,WAAW,CAAC;AAChB,SAAK,OAAO,OAAO,OAAK,EAAE,OAAO,EAAE,QAAQ,OAAK;AAE9C,yBAAmB,EAAE,kBAAkB;AACvC,2BAAqB,EAAE,oBAAoB;AAC3C,sBAAgB,EAAE,eAAe;AACjC,wBAAkB,EAAE,iBAAiB;AACrC,iBAAW;AAAA,QAAE,GAAG;AAAA,QACd,GAAG,EAAE;AAAA,MACP;AAAA,IACF,CAAC;AACD,eAAW;AAAA,MAAE,GAAG;AAAA,MACd,GAAG,KAAK;AAAA,IACV;AACA,WAAO;AAAA,MACL;AAAA,MACA,cAAc;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMN,gBAAgB;AAAA,UACZ;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMR;AAAA,EACF;AAAA,EAEA,UAAU;AACR,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,WAAW;AACpB,UAAM,OAAO;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,YAAY;AACV,WAAO;AAAA,MACL,aAAa;AAAA,MACb,YAAY;AAAA,QACV,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,QACZ,MAAM,KAAK;AAAA,QACX,UAAU,KAAK;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,MAAM,GAAG;AACX,QAAI,gBAAgB;AAEpB,SAAK,iBAAiB,KAAK,aAAa,SAAS,wBAAwB,eAAe,mBAAmB,QAAQ,sBAAsB;AAAO,WAAK,SAAS,eAAe,QAAQ,OAAO,MAAM,WAAW,IAAU,MAAM,CAAC,EAAE,oBAAoB,IAAI;AAAA,EAC1P;AAAA,EAEA,IAAI,QAAQ;AACV,QAAI,iBAAiB;AAErB,YAAQ,kBAAkB,KAAK,aAAa,OAAO,UAAU,wBAAwB,gBAAgB,mBAAmB,OAAO,SAAS,sBAAsB;AAAA,EAChK;AAAA,EAEA,IAAI,MAAM,GAAG;AACX,SAAK,SAAS,eAAe,QAAQ;AAAA,EACvC;AAAA,EAEA,IAAI,QAAQ;AACV,WAAO,KAAK,SAAS,eAAe;AAAA,EACtC;AAEF;AAEA,IAAI,SAAsB,OAAO,OAAO;AAAA,EACtC,WAAW;AAAA,EACX,eAAe;AAAA,EACf;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AACV,CAAC;AAED,SAAS,kBAAkB,OAAO;AAEhC,QAAM,cAAc,OAAO,MAAM;AACjC,QAAM,WAAW,IAAI,YAAY;AACjC,MAAI,QAAQ;AACZ,SAAO,QAAQ,MAAM,UAAU,EAAE,QAAQ,CAAC,CAAC,KAAK,GAAG,MAAM;AACvD,QAAI;AAEJ,UAAM,cAAc,gBAAgB,YAAY,OAAO,SAAS,OAAO,gBAAgB,SAAS;AAEhG,YAAQ,KAAK;AAAA,MACX,KAAK;AACH,YAAI,QAAQ,MAAM;AAAa,mBAAS,IAAI,QAAQ,KAAK,UAAU,GAAG;AACtE;AAAA,MAEF,KAAK;AACH,YAAI,CAAC;AAAK,mBAAS,IAAI,QAAQ,KAAK,UAAU,GAAG;AACjD;AAAA,MAEF;AACE,YAAI,QAAQ;AAAY,mBAAS,IAAI,QAAQ,KAAK,UAAU,GAAG;AAC/D;AAAA,IACJ;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEA,SAAS,sBAAsB,QAAQ,UAAU;AAC/C,QAAM,gBAAgB,kBAAkB,QAAQ;AAChD,QAAM,MAAM;AAAA,oBACM;AAAA,QACZ,OAAO,IAAI,WAAS;AACxB,UAAM,QAAQ,kBAAkB,KAAK;AACrC,WAAO,IAAI,MAAM,cAAc;AAAA,EACjC,CAAC,EAAE,KAAK,KAAM;AAAA;AAAA;AAGd,SAAO;AACT;AAEA,SAAS,oBAAoB,OAAO;AAElC,QAAM,cAAc,OAAO,MAAM;AACjC,QAAM,WAAW,IAAI,YAAY;AACjC,MAAI,QAAQ;AACZ,MAAI,UAAU,OAAO,QAAQ,MAAM,UAAU;AAC7C,UAAQ,QAAQ,CAAC,CAAC,KAAK,GAAG,GAAG,QAAQ;AACnC,QAAI;AAEJ,UAAM,MAAM;AAEZ,QAAI,IAAI,SAAS,OAAO,GAAG;AACzB,YAAM,IAAI,OAAO,QAAQ,WAAW,MAAM,MAAM,IAAI,aAAa;AACjE,eAAS,GAAG,QAAQ,KAAK,UAAU,CAAC,KAAK;AAAA,IAC3C,OAAO;AACL,YAAM,cAAc,eAAe,YAAY,OAAO,SAAS,OAAO,eAAe,SAAS;AAE9F,cAAQ,KAAK;AAAA,QACX,KAAK;AACH,cAAI,QAAQ,MAAM;AAAa,qBAAS,GAAG,QAAQ,KAAK,UAAU,GAAG,KAAK;AAC1E;AAAA,QAEF,KAAK;AACH,cAAI,CAAC;AAAK,qBAAS,GAAG,OAAO,KAAK,UAAU,GAAG,KAAK;AACpD;AAAA,QAEF;AACE,cAAI,QAAQ;AAAY,qBAAS,GAAG,QAAQ,KAAK,UAAU,GAAG,KAAK;AACnE;AAAA,MACJ;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEA,SAAS,qBAAqB,QAAQ,UAAU;AAC9C,QAAM,gBAAgB,oBAAoB,QAAQ;AAClD,QAAM,WAAW,GAAG,OAAO,IAAI,OAAK;AAClC,WAAO,OAAO,EAAE;AAAA,QACZ,oBAAoB,CAAC;AAAA;AAAA,EAE3B,CAAC,EAAE,KAAK,OAAS;AACjB,QAAM,KAAK;AAAA;AAAA,MAEP;AAAA;AAAA,QAEE;AAAA;AAAA;AAGN,SAAO;AACT;AAEA,OAAO;AAAA,EACL,eAAe;AACjB,CAAC;AAED,SAAS,YAAY;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,cAAY,MAAM,MAAM;AACtB,UAAM,IAAI,CAAC;AACX,WAAO,QAAQ,CAAC,OAAO,MAAM;AAC3B,YAAM,IAAI,GAAG,MAAM,UAAU;AAC7B,QAAE,KAAK;AAEP,QAAE,GAAG,WAAW,MAAM,UAAU,CAAC,GAAG,QAAQ,KAAK,MAAM,KAAK,CAAC;AAAA,IAC/D,CAAC;AACD,WAAO;AAAA,EACT,GAAG;AAAA,IACD;AAAA,EACF,GAAG,CAAC,QAAQ,IAAI,CAAC;AACjB,SAAO;AACT;AAEA,IAAM,qBAAkC,aAAAC,QAAM,WAAW,CAAC;AAAA,EACxD;AAAA,KACG;AACL,GAAG,eAAe;AAChB,MAAI,cAAc,eAAe;AAEjC,QAAM,MAAM,aAAAA,QAAM,OAAO,IAAI;AAC7B,wCAAoB,YAAY,MAAM,IAAI,OAAO;AACjD,QAAM,QAAQ,eAAe;AAC7B,QAAM,CAAC,QAAQ,SAAS,IAAI,aAAAA,QAAM,SAAS,CAAC,CAAC;AAC7C,QAAM,CAAC,MAAM,OAAO,IAAI,aAAAA,QAAM,SAAS,CAAC,IAAI,EAAE,CAAC;AAC/C,QAAM,oBAAgB,sBAAQ,MAAM,IAAI,cAAc,GAAG,CAAC,CAAC;AAC3D,cAAY;AAAA,IACV,YAAY,OAAO,MAAM;AACvB,YAAM,aAAa,IAAI,QAAQ,OAAO,IAAI,OAAK,EAAE,UAAU,CAAC;AAC5D,YAAM,MAAM,sBAAsB,YAAY,IAAI,QAAQ,UAAU,CAAC;AACrE,gBAAU,UAAU,UAAU,GAAG;AAAA,IACnC,CAAC;AAAA,IACD,WAAW,OAAO,MAAM;AACtB,YAAM,aAAa,IAAI,QAAQ,OAAO,IAAI,OAAK,EAAE,UAAU,CAAC;AAC5D,YAAM,KAAK,qBAAqB,YAAY,IAAI,QAAQ,UAAU,CAAC;AACnE,gBAAU,UAAU,UAAU,EAAE;AAAA,IAClC,CAAC;AAAA,EACH,GAAG;AAAA,IACD;AAAA,EACF,CAAC;AACD,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,YAAY,QAAQ;AAAA,IACtB,OAAO;AAAA,MACL,OAAO,MAAM,IAAI,QAAU,eAAe,IAAI,YAAY,OAAO,SAAS,aAAa,WAAW,SAAS,OAAO,SAAS,MAAM,UAAU,OAAO,EAAE,oBAAoB,EAAE,aAAa;AAAA,MACvL,UAAU,OAAK;AACb,YAAI,QAAQ,QAAQ;AAAA,MACtB;AAAA,IACF;AAAA,IACA,OAAO;AAAA,MACL,SAAS,gBAAgB,IAAI,YAAY,OAAO,SAAS,cAAc,WAAW,SAAS,OAAO,SAAS,MAAM,UAAU;AAAA,MAC3H,KAAK;AAAA,MACL,KAAK;AAAA,MACL,UAAU,OAAK;AACb,YAAI,QAAQ,QAAQ;AAAA,MACtB;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,SAAS,gBAAgB,IAAI,YAAY,OAAO,SAAS,cAAc,cAAc,SAAS,OAAO,SAAS,MAAM,aAAa;AAAA,MACjI,SAAS,OAAO,KAAK,YAAY;AAAA,IACnC;AAAA,EACF,GAAG;AAAA,IACD;AAAA,EACF,CAAC;AACD,QAAM,CAAC,MAAM,UAAU,QAAI,sBAAQ,MAAM,qBAAqB;AAAA,IAAE,GAAG;AAAA,IACjE,UAAU;AAAA,EACZ,CAAC,GAAG,CAAC,OAAO,QAAQ,CAAC;AACrB,eAAAA,QAAM,UAAU,MAAM;AACpB,UAAMC,UAAS,IAAI,QAAQ;AAC3B,UAAM,SAAS,CAAC;AAChB,IAAAA,QAAO,QAAQ,CAAC,OAAO,MAAM;AAC3B,UAAI,MAAM;AAAW,eAAO,GAAG,MAAM,SAAS,OAAO,MAAM,UAAU;AAAA,IACvE,CAAC;AACD,cAAU,MAAM;AAAA,EAClB,GAAG,CAAC,QAAQ,CAAC;AACb,eAAAD,QAAM,UAAU,MAAM;AACpB,UAAM,OAAO,MAAM,QAAQ;AAC3B,UAAM,cAAc,KAAK,KAAK;AAE9B,QAAI,aAAa;AACf,YAAM,QAAQ,KAAK,GAAG,MAAM,GAAG;AAC/B,YAAM,QAAQ,SAAS,MAAM,GAAG,MAAM,IAAI,EAAE,EAAE;AAC9C,YAAM,WAAW,KAAK;AACtB,YAAM,KAAK,IAAI,QAAQ,OAAO,OAAO;AACrC,YAAM,UAAU,IAAI,QAAQ,SAAS,KAAK,MAAM;AAChD,YAAM,QAAQ,IAAI,QAAQ,OAAO;AAEjC,UAAI,aAAa,OAAO;AACtB,cAAM,YAAY,YAAY;AAE9B,YAAI,SAAS;AACX,kBAAQ,QAAQ,WAAW,YAAY,KAAK;AAAA,QAC9C,OAAO;AACL,gBAAM,aAAa,MAAM,WAAW;AACpC,cAAI,QAAQ,QAAQ;AAAA,QACtB;AAAA,MACF,OAAO;AAEL,SAAC,YAAY;AACX,cAAI;AACF,gBAAI,YAAY,OAAO;AACrB,oBAAM,IAAI,MAAM,cAAc,UAAU,YAAY,KAAK;AACzD,oBAAM,YAAY;AAClB,sBAAQ,QAAQ;AAAA,YAClB,OAAO;AACL,oBAAM,YAAY;AAClB,sBAAQ,QAAQ;AAAA,YAClB;AAAA,UACF,SAAS,OAAP;AACA,oBAAQ,MAAM,KAAK;AAAA,UACrB;AAAA,QACF,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AACT,eAAAA,QAAM,gBAAgB,MAAM;AAC1B,QAAI,QAAQ,SAAS,IAAI,QAAQ,MAAM;AACvC,QAAI,QAAQ,QAAQ;AAAA,EACtB,GAAG,CAAC,UAAU,IAAI,CAAC;AACnB,eAAAA,QAAM,gBAAgB,MAAM;AAC1B,UAAM,OAAO,SAAS,KAAK,cAAc,OAAO;AAChD,UAAM,MAAM,SAAS,cAAc,KAAK;AAExC,QAAI,MAAM;AACR,WAAK,YAAY,GAAG;AACpB,YAAM,eAAW,0BAAW,GAAG;AAC/B,eAAS,OAAqB,aAAAA,QAAM,cAAc,WAAW;AAAA,QAC3D,UAAU;AAAA,UACR,OAAO,MAAM,QAAQ,IAAI,QAAQ;AAAA,QACnC;AAAA,QACA;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AAEA,WAAO,MAAM;AACX,UAAI,OAAO;AAAA,IACb;AAAA,EACF,GAAG,CAAC,MAAM,IAAI,CAAC;AACf,SAAoB,aAAAA,QAAM,cAAc,aAAAA,QAAM,UAAU,MAAM,OAAO,QAAQ,MAAM,EAAE,IAAI,CAAC,CAAC,MAAMC,OAAM,GAAG,MAAmB,aAAAD,QAAM,cAAc,aAAa;AAAA,IAC5J,KAAK,GAAG,SAAS;AAAA,IACjB;AAAA,IACA,QAAQC;AAAA,IACR;AAAA,IACA,WAAW;AAAA,EACb,CAAC,CAAC,GAAgB,aAAAD,QAAM,cAAc,iBAAiB,SAAS;AAAA,IAC9D,MAAM,CAAC,IAAI;AAAA,IACX;AAAA,EACF,GAAG,UAAU,GAAG,QAAQ,CAAC;AAC3B,CAAC;AAED,OAAO;AAAA,EACL,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,WAAW;AAAA,EACX,SAAS;AAAA,EACT,UAAU;AAAA,EACV,WAAW;AAAA,EACX,SAAS;AACX,CAAC;AACD,IAAM,gBAA6B,aAAAA,QAAM,WAAW,CAAC;AAAA,EACnD;AAAA,KACG;AACL,GAAG,eAAe;AAChB,QAAM,MAAM,aAAAA,QAAM,OAAO,IAAI;AAC7B,wCAAoB,YAAY,MAAM,IAAI,OAAO;AACjD,eAAAA,QAAM,gBAAgB,MAAM;AAC1B,QAAI,QAAQ,SAAS,IAAI,QAAQ,MAAM;AACvC,QAAI,QAAQ,QAAQ;AAAA,EACtB,GAAG,CAAC,QAAQ,CAAC;AACb,QAAM,CAAC,MAAM,UAAU,QAAI,sBAAQ,MAAM,qBAAqB,KAAK,GAAG,CAAC,KAAK,CAAC;AAC7E,SAAoB,aAAAA,QAAM,cAAc,iBAAiB,SAAS;AAAA,IAChE,MAAM,CAAC,IAAI;AAAA,IACX;AAAA,EACF,GAAG,UAAU,GAAG,QAAQ;AAC1B,CAAC;AAED,SAAS,kBAAkB,OAAO;AAChC,SAAO,CAAC;AAAA,IACN,MAAM,SAAS,OAAO,SAAS,MAAM;AAAA,IACrC,SAAS,SAAS,OAAO,SAAS,MAAM;AAAA,IACxC,MAAM,SAAS,OAAO,SAAS,MAAM;AAAA,IACrC,SAAS,SAAS,OAAO,SAAS,MAAM;AAAA,IACxC,KAAK,SAAS,OAAO,SAAS,MAAM;AAAA,IACpC,MAAM,SAAS,OAAO,SAAS,MAAM;AAAA,EACvC,CAAC;AACH;AAEA,IAAM,QAAqB,aAAAA,QAAM,WAAW,CAAC,OAAO,eAAe;AAEjE,SAAoB,aAAAA,QAAM,cAAc,UAAU,SAAS;AAAA,IACzD,MAAM,kBAAkB,KAAK;AAAA,IAC7B,KAAK;AAAA,EACP,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAME,SAAqB,aAAAF,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE1D,SAAoB,aAAAA,QAAM,cAAc,UAAU,SAAS;AAAA,IACzD;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,QAAqB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE1D,SAAoB,aAAAA,QAAM,cAAc,UAAU,SAAS;AAAA,IACzD;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,UAAuB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE5D,SAAoB,aAAAA,QAAM,cAAc,YAAY,SAAS;AAAA,IAC3D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,WAAwB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE7D,SAAoB,aAAAA,QAAM,cAAc,aAAa,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,SAAsB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE3D,SAAoB,aAAAA,QAAM,cAAc,WAAW,SAAS;AAAA,IAC1D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAMG,WAAuB,aAAAH,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE5D,SAAoB,aAAAA,QAAM,cAAc,YAAY,SAAS;AAAA,IAC3D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,WAAwB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE7D,SAAoB,aAAAA,QAAM,cAAc,aAAa,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;AACD,IAAM,SAAsB,aAAAA,QAAM,WAAW,CAAC,OAAO,QAAQ;AAE3D,SAAoB,aAAAA,QAAM,cAAc,WAAW,SAAS;AAAA,IAC1D;AAAA,IACA,MAAM,kBAAkB,KAAK;AAAA,EAC/B,GAAG,KAAK,CAAC;AACX,CAAC;",
  "names": ["tokenize", "last", "tokenize", "i", "e", "t", "n", "r", "o", "i", "u", "a", "s", "f", "l", "c", "d", "import_glsl_tokenizer", "import_glsl_token_string", "import_glsl_token_functions", "hash", "tokenize", "tokenFunctions", "stringify", "tokenize", "descope", "tokenFunctions", "stringify", "name", "self", "React", "layers", "Color", "Texture"]
}
