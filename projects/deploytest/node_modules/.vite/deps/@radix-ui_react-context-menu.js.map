{
  "version": 3,
  "sources": ["../../@radix-ui/primitive/dist/packages/core/primitive/src/index.ts", "../../@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx", "../../@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../@radix-ui/react-primitive/dist/packages/react/primitive/src/index.ts", "../../@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../@radix-ui/react-collection/dist/packages/react/collection/src/index.ts", "../../@radix-ui/react-collection/dist/packages/react/collection/src/Collection.tsx", "../../@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx", "../../@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/index.ts", "../../@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/index.ts", "../../@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx", "../../@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/index.ts", "../../@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/DismissableLayer.tsx", "../../@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/index.ts", "../../@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/FocusGuards.tsx", "../../@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/index.ts", "../../@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/FocusScope.tsx", "../../@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/index.ts", "../../@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-id/dist/packages/react/id/src/index.ts", "../../@radix-ui/react-id/dist/packages/react/id/src/id.tsx", "../../@floating-ui/core/dist/floating-ui.core.esm.js", "../../@floating-ui/dom/dist/floating-ui.dom.esm.js", "../../@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js", "../../@radix-ui/react-arrow/dist/packages/react/arrow/src/index.ts", "../../@radix-ui/react-arrow/dist/packages/react/arrow/src/Arrow.tsx", "../../@radix-ui/react-use-size/dist/packages/react/use-size/src/index.ts", "../../@radix-ui/react-use-size/dist/packages/react/use-size/src/useSize.tsx", "../../@radix-ui/react-popper/dist/packages/react/popper/src/index.ts", "../../@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx", "../../@radix-ui/react-portal/dist/packages/react/portal/src/index.ts", "../../@radix-ui/react-portal/dist/packages/react/portal/src/Portal.tsx", "../../@radix-ui/react-presence/dist/packages/react/presence/src/index.ts", "../../@radix-ui/react-presence/dist/packages/react/presence/src/Presence.tsx", "../../@radix-ui/react-presence/dist/packages/react/presence/src/useStateMachine.tsx", "../../@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/index.ts", "../../@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx", "../../@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/index.ts", "../../@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/RovingFocusGroup.tsx", "../../aria-hidden/dist/es2015/index.js", "../../react-remove-scroll/dist/es2015/Combination.js", "../../react-remove-scroll/dist/es2015/UI.js", "../../react-remove-scroll-bar/dist/es2015/constants.js", "../../use-callback-ref/dist/es2015/assignRef.js", "../../use-callback-ref/dist/es2015/useRef.js", "../../use-callback-ref/dist/es2015/useMergeRef.js", "../../use-sidecar/dist/es2015/hoc.js", "../../use-sidecar/dist/es2015/hook.js", "../../use-sidecar/dist/es2015/medium.js", "../../use-sidecar/dist/es2015/renderProp.js", "../../use-sidecar/dist/es2015/exports.js", "../../react-remove-scroll/dist/es2015/medium.js", "../../react-remove-scroll/dist/es2015/SideEffect.js", "../../react-remove-scroll-bar/dist/es2015/component.js", "../../react-style-singleton/dist/es2015/hook.js", "../../get-nonce/dist/es2015/index.js", "../../react-style-singleton/dist/es2015/singleton.js", "../../react-style-singleton/dist/es2015/component.js", "../../react-remove-scroll-bar/dist/es2015/utils.js", "../../react-remove-scroll/dist/es2015/aggresiveCapture.js", "../../react-remove-scroll/dist/es2015/handleScroll.js", "../../react-remove-scroll/dist/es2015/sidecar.js", "../../@radix-ui/react-menu/dist/packages/react/menu/src/index.ts", "../../@radix-ui/react-menu/dist/packages/react/menu/src/Menu.tsx", "../../@radix-ui/react-context-menu/dist/packages/react/context-menu/src/index.ts", "../../@radix-ui/react-context-menu/dist/packages/react/context-menu/src/ContextMenu.tsx"],
  "sourcesContent": ["export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "export { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export { useEscapeKeydown } from './useEscapeKeydown';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(onEscapeKeyDownProp?: (event: KeyboardEvent) => void) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown]);\n}\n\nexport { useEscapeKeydown };\n", "export {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n} from './DismissableLayer';\nexport type { DismissableLayerProps } from './DismissableLayer';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    });\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    });\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    });\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = document.body.style.pointerEvents;\n          document.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          document.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(onPointerDownOutside?: (event: PointerDownOutsideEvent) => void) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          document.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          document.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      document.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      document.removeEventListener('pointerdown', handlePointerDown);\n      document.removeEventListener('click', handleClickRef.current);\n    };\n  }, [handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(onFocusOutside?: (event: FocusOutsideEvent) => void) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    document.addEventListener('focusin', handleFocus);\n    return () => document.removeEventListener('focusin', handleFocus);\n  }, [handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n", "export {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n} from './FocusGuards';\n", "import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n", "export {\n  FocusScope,\n  //\n  Root,\n} from './FocusScope';\nexport type { FocusScopeProps } from './FocusScope';\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        if (!container.contains(event.relatedTarget as HTMLElement | null)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { useId } from './id';\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n", "import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // \u2022 Always-visible scrollbar or not\n  // \u2022 Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors };\n", "import { computePosition, arrow as arrow$1 } from '@floating-ui/dom';\nexport * from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n\n  let length, i, keys;\n\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    keys = Object.keys(a);\n    length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nfunction useFloating(_temp) {\n  let {\n    middleware,\n    placement = 'bottom',\n    strategy = 'absolute',\n    whileElementsMounted\n  } = _temp === void 0 ? {} : _temp;\n  const reference = React.useRef(null);\n  const floating = React.useRef(null);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const cleanupRef = React.useRef(null);\n  const [data, setData] = React.useState({\n    // Setting these to `null` will allow the consumer to determine if\n    // `computePosition()` has run yet\n    x: null,\n    y: null,\n    strategy,\n    placement,\n    middlewareData: {}\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n\n  if (!deepEqual(latestMiddleware == null ? void 0 : latestMiddleware.map(_ref => {\n    let {\n      options\n    } = _ref;\n    return options;\n  }), middleware == null ? void 0 : middleware.map(_ref2 => {\n    let {\n      options\n    } = _ref2;\n    return options;\n  }))) {\n    setLatestMiddleware(middleware);\n  }\n\n  const update = React.useCallback(() => {\n    if (!reference.current || !floating.current) {\n      return;\n    }\n\n    computePosition(reference.current, floating.current, {\n      middleware: latestMiddleware,\n      placement,\n      strategy\n    }).then(data => {\n      if (isMountedRef.current) {\n        ReactDOM.flushSync(() => {\n          setData(data);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy]);\n  index(() => {\n    // Skip first update\n    if (isMountedRef.current) {\n      update();\n    }\n  }, [update]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  const runElementMountCallback = React.useCallback(() => {\n    if (typeof cleanupRef.current === 'function') {\n      cleanupRef.current();\n      cleanupRef.current = null;\n    }\n\n    if (reference.current && floating.current) {\n      if (whileElementsMountedRef.current) {\n        const cleanupFn = whileElementsMountedRef.current(reference.current, floating.current, update);\n        cleanupRef.current = cleanupFn;\n      } else {\n        update();\n      }\n    }\n  }, [update, whileElementsMountedRef]);\n  const setReference = React.useCallback(node => {\n    reference.current = node;\n    runElementMountCallback();\n  }, [runElementMountCallback]);\n  const setFloating = React.useCallback(node => {\n    floating.current = node;\n    runElementMountCallback();\n  }, [runElementMountCallback]);\n  const refs = React.useMemo(() => ({\n    reference,\n    floating\n  }), []);\n  return React.useMemo(() => ({ ...data,\n    update,\n    refs,\n    reference: setReference,\n    floating: setFloating\n  }), [data, update, refs, setReference, setFloating]);\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\n\nconst arrow = options => {\n  const {\n    element,\n    padding\n  } = options;\n\n  function isRef(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'current');\n  }\n\n  return {\n    name: 'arrow',\n    options,\n\n    fn(args) {\n      if (isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(args);\n        }\n\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(args);\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, useFloating };\n", "export {\n  Arrow,\n  //\n  Root,\n} from './Arrow';\nexport type { ArrowProps } from './Arrow';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = Radix.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n", "export { useSize } from './useSize';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n", "export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n", "import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\nconst [PositionContextProvider, usePositionContext] = createPopperContext(CONTENT_NAME, {\n  hasParent: false,\n  positionUpdateFns: new Set<() => void>(),\n});\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { reference, floating, strategy, x, y, placement, middlewareData, update } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: autoUpdate,\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions\n          ? shift({\n              mainAxis: true,\n              crossAxis: false,\n              limiter: sticky === 'partial' ? limitShift() : undefined,\n              ...detectOverflowOptions,\n            })\n          : undefined,\n        arrow ? floatingUIarrow({ element: arrow, padding: arrowPadding }) : undefined,\n        avoidCollisions ? flip({ ...detectOverflowOptions }) : undefined,\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached ? hide({ strategy: 'referenceHidden' }) : undefined,\n      ].filter(isDefined),\n    });\n\n    // assign the reference dynamically once `Content` has mounted so we can collocate the logic\n    useLayoutEffect(() => {\n      reference(context.anchor);\n    }, [reference, context.anchor]);\n\n    const isPlaced = x !== null && y !== null;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    const { hasParent, positionUpdateFns } = usePositionContext(CONTENT_NAME, __scopePopper);\n    const isRoot = !hasParent;\n\n    React.useLayoutEffect(() => {\n      if (!isRoot) {\n        positionUpdateFns.add(update);\n        return () => {\n          positionUpdateFns.delete(update);\n        };\n      }\n    }, [isRoot, positionUpdateFns, update]);\n\n    // when nested contents are rendered in portals, they are appended out of order causing\n    // children to be positioned incorrectly if initially open.\n    // we need to re-compute the positioning once the parent has finally been placed.\n    // https://github.com/floating-ui/floating-ui/issues/1531\n    React.useLayoutEffect(() => {\n      if (isRoot && isPlaced) {\n        Array.from(positionUpdateFns)\n          .reverse()\n          .forEach((fn) => requestAnimationFrame(fn));\n      }\n    }, [isRoot, isPlaced, positionUpdateFns]);\n\n    const commonProps = {\n      'data-side': placedSide,\n      'data-align': placedAlign,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        ...contentProps.style,\n        // if the PopperContent hasn't been placed yet (not all measurements done)\n        // we prevent animations so that users's animation don't kick in too early referring wrong sides\n        animation: !isPlaced ? 'none' : undefined,\n        // hide the content if using the hide middleware and should be hidden\n        opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n      },\n    };\n\n    return (\n      <div\n        ref={floating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          position: strategy,\n          left: 0,\n          top: 0,\n          transform: isPlaced\n            ? `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`\n            : 'translate3d(0, -200%, 0)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          {isRoot ? (\n            <PositionContextProvider\n              scope={__scopePopper}\n              hasParent\n              positionUpdateFns={positionUpdateFns}\n            >\n              <Primitive.div {...commonProps} />\n            </PositionContextProvider>\n          ) : (\n            <Primitive.div {...commonProps} />\n          )}\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isDefined<T>(value: T | undefined): value is T {\n  return value !== undefined;\n}\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n", "export {\n  Portal,\n  //\n  Root,\n} from './Portal';\nexport type { PortalProps } from './Portal';\n", "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  container?: HTMLElement | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container = globalThis?.document?.body, ...portalProps } = props;\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n", "export { Presence } from './Presence';\nexport type { PresenceProps } from './Presence';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "export { useControllableState } from './useControllableState';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "export {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const { __scopeRovingFocusGroup, focusable = true, active = false, ...itemProps } = props;\n    const id = useId();\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n", "var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets.map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    }).filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                var attr = node.getAttribute(controlAttribute);\n                var alreadyHidden = attr !== null && attr !== 'false';\n                var counterValue = (counterMap.get(node) || 0) + 1;\n                var markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute(controlAttribute, 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n", "export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n", "/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nexport function assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n", "import { useState } from 'react';\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nexport function useCallbackRef(initialValue, callback) {\n    var ref = useState(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n", "import { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // \uD83D\uDC48 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    return useCallbackRef(defaultValue || null, function (newValue) { return refs.forEach(function (ref) { return assignRef(ref, newValue); }); });\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useSidecar } from './hook';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function sidecar(importer, errorComponent) {\n    var ErrorCase = function () { return errorComponent; };\n    return function Sidecar(props) {\n        var _a = useSidecar(importer, props.sideCar), Car = _a[0], error = _a[1];\n        if (error && errorComponent) {\n            return ErrorCase;\n        }\n        // @ts-expect-error type shenanigans\n        return Car ? React.createElement(Car, __assign({}, props)) : null;\n    };\n}\n", "import { useState, useEffect } from 'react';\nimport { env } from './env';\nvar cache = new WeakMap();\nvar NO_OPTIONS = {};\nexport function useSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    if (env.isNode && !options.ssr) {\n        return [null, null];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRealSidecar(importer, effect);\n}\nfunction useRealSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    var couldUseCache = env.forceCache || (env.isNode && !!options.ssr) || !options.async;\n    var _a = useState(couldUseCache ? function () { return cache.get(importer); } : undefined), Car = _a[0], setCar = _a[1];\n    var _b = useState(null), error = _b[0], setError = _b[1];\n    useEffect(function () {\n        if (!Car) {\n            importer().then(function (car) {\n                var resolved = effect ? effect.read() : car.default || car;\n                if (!resolved) {\n                    console.error('Sidecar error: with importer', importer);\n                    var error_1;\n                    if (effect) {\n                        console.error('Sidecar error: with medium', effect);\n                        error_1 = new Error('Sidecar medium was not found');\n                    }\n                    else {\n                        error_1 = new Error('Sidecar was not found in exports');\n                    }\n                    setError(function () { return error_1; });\n                    throw error_1;\n                }\n                cache.set(importer, resolved);\n                setCar(function () { return resolved; });\n            }, function (e) { return setError(function () { return e; }); });\n        }\n    }, []);\n    return [Car, error];\n}\n", "import { __assign } from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = __assign({ async: true, ssr: false }, options);\n    return medium;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nexport function renderCar(WrappedComponent, defaults) {\n    function State(_a) {\n        var stateRef = _a.stateRef, props = _a.props;\n        var renderTarget = useCallback(function SideTarget() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            useLayoutEffect(function () {\n                stateRef.current(args);\n            });\n            return null;\n        }, []);\n        // @ts-ignore\n        return React.createElement(WrappedComponent, __assign({}, props, { children: renderTarget }));\n    }\n    var Children = React.memo(function (_a) {\n        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;\n        var _b = useState(defaultState.current), state = _b[0], setState = _b[1];\n        useEffect(function () {\n            stateRef.current = setState;\n        }, []);\n        return children.apply(void 0, state);\n    }, function () { return true; });\n    return function Combiner(props) {\n        var defaultState = React.useRef(defaults(props));\n        var ref = React.useRef(function (state) { return (defaultState.current = state); });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(State, { stateRef: ref, props: props }),\n            React.createElement(Children, { stateRef: ref, defaultState: defaultState, children: props.children })));\n    };\n}\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = __rest(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return React.createElement(Target, __assign({}, rest));\n};\nSideCar.isSideCarExport = true;\nexport function exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n", "import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n", "import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(function () { return styleSingleton(); })[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            event.preventDefault();\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                event.preventDefault();\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: \"margin\" }) : null));\n}\n", "import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (props) {\n    var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? 'margin' : _a;\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n", "import * as React from 'react';\nimport { stylesheetSingleton } from './singleton';\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nexport var styleHookSingleton = function () {\n    var sheet = stylesheetSingleton();\n    return function (styles, isDynamic) {\n        React.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n", "var currentNonce;\nexport var setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nexport var getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (typeof __webpack_nonce__ !== 'undefined') {\n        return __webpack_nonce__;\n    }\n    return undefined;\n};\n", "import { getNonce } from 'get-nonce';\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = getNonce();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nexport var stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n", "import { styleHookSingleton } from './hook';\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nexport var styleSingleton = function () {\n    var useStyle = styleHookSingleton();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n", "export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n", "var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n", "var elementCouldBeVScrolled = function (node) {\n    var styles = window.getComputedStyle(node);\n    return (styles.overflowY !== 'hidden' && // not-not-scrollable\n        !(styles.overflowY === styles.overflowX && styles.overflowY === 'visible') // scrollable\n    );\n};\nvar elementCouldBeHScrolled = function (node) {\n    var styles = window.getComputedStyle(node);\n    return (styles.overflowX !== 'hidden' && // not-not-scrollable\n        !(styles.overflowY === styles.overflowX && styles.overflowX === 'visible') // scrollable\n    );\n};\nexport var locationCouldBeScrolled = function (axis, node) {\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n            if (s > d) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== document.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        target = target.parentNode;\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    if (isDeltaPositive && ((noOverscroll && availableScroll === 0) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && availableScrollTop === 0) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n", "import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n", "export {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menu';\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n} from './Menu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus();\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={(event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                }}\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside = target.closest('[role=\"menu\"]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(!checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(ITEM_INDICATOR_NAME, {\n  checked: false,\n});\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence present={forceMount || indicatorContext.checked}>\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, rootContext.onClose)}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction getCheckedState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n", "export {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './ContextMenu';\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n} from './ContextMenu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Point = { x: number; y: number };\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTEXT_MENU_NAME = 'ContextMenu';\n\ntype ScopedProps<P> = P & { __scopeContextMenu?: Scope };\nconst [createContextMenuContext, createContextMenuScope] = createContextScope(CONTEXT_MENU_NAME, [\n  createMenuScope,\n]);\nconst useMenuScope = createMenuScope();\n\ntype ContextMenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  modal: boolean;\n};\n\nconst [ContextMenuProvider, useContextMenuContext] =\n  createContextMenuContext<ContextMenuContextValue>(CONTEXT_MENU_NAME);\n\ninterface ContextMenuProps {\n  children?: React.ReactNode;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst ContextMenu: React.FC<ContextMenuProps> = (props: ScopedProps<ContextMenuProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, dir, modal = true } = props;\n  const [open, setOpen] = React.useState(false);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const handleOpenChangeProp = useCallbackRef(onOpenChange);\n\n  const handleOpenChange = React.useCallback(\n    (open: boolean) => {\n      setOpen(open);\n      handleOpenChangeProp(open);\n    },\n    [handleOpenChangeProp]\n  );\n\n  return (\n    <ContextMenuProvider\n      scope={__scopeContextMenu}\n      open={open}\n      onOpenChange={handleOpenChange}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        dir={dir}\n        open={open}\n        onOpenChange={handleOpenChange}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </ContextMenuProvider>\n  );\n};\n\nContextMenu.displayName = CONTEXT_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'ContextMenuTrigger';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface ContextMenuTriggerProps extends PrimitiveSpanProps {}\n\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  (props: ScopedProps<ContextMenuTriggerProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...triggerProps } = props;\n    const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const pointRef = React.useRef<Point>({ x: 0, y: 0 });\n    const virtualRef = React.useRef({\n      getBoundingClientRect: () => DOMRect.fromRect({ width: 0, height: 0, ...pointRef.current }),\n    });\n    const longPressTimerRef = React.useRef(0);\n    const clearLongPress = React.useCallback(\n      () => window.clearTimeout(longPressTimerRef.current),\n      []\n    );\n    const handleOpen = (event: React.MouseEvent | React.PointerEvent) => {\n      pointRef.current = { x: event.clientX, y: event.clientY };\n      context.onOpenChange(true);\n    };\n\n    React.useEffect(() => clearLongPress, [clearLongPress]);\n\n    return (\n      <>\n        <MenuPrimitive.Anchor {...menuScope} virtualRef={virtualRef} />\n        <Primitive.span\n          data-state={context.open ? 'open' : 'closed'}\n          {...triggerProps}\n          ref={forwardedRef}\n          // prevent iOS context menu from appearing\n          style={{ WebkitTouchCallout: 'none', ...props.style }}\n          onContextMenu={composeEventHandlers(props.onContextMenu, (event) => {\n            // clearing the long press here because some platforms already support\n            // long press to trigger a `contextmenu` event\n            clearLongPress();\n            handleOpen(event);\n            event.preventDefault();\n          })}\n          onPointerDown={composeEventHandlers(\n            props.onPointerDown,\n            whenTouchOrPen((event) => {\n              // clear the long press here in case there's multiple touch points\n              clearLongPress();\n              longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);\n            })\n          )}\n          onPointerMove={composeEventHandlers(props.onPointerMove, whenTouchOrPen(clearLongPress))}\n          onPointerCancel={composeEventHandlers(\n            props.onPointerCancel,\n            whenTouchOrPen(clearLongPress)\n          )}\n          onPointerUp={composeEventHandlers(props.onPointerUp, whenTouchOrPen(clearLongPress))}\n        />\n      </>\n    );\n  }\n);\n\nContextMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'ContextMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface ContextMenuPortalProps extends MenuPortalProps {}\n\nconst ContextMenuPortal: React.FC<ContextMenuPortalProps> = (\n  props: ScopedProps<ContextMenuPortalProps>\n) => {\n  const { __scopeContextMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nContextMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'ContextMenuContent';\n\ntype ContextMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface ContextMenuContentProps extends Omit<MenuContentProps, 'side' | 'sideOffset' | 'align'> {}\n\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props: ScopedProps<ContextMenuContentProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...contentProps } = props;\n    const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        side=\"right\"\n        sideOffset={2}\n        align=\"start\"\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented && hasInteractedOutsideRef.current) {\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;\n        }}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom property\n          ['--radix-context-menu-content-transform-origin' as any]:\n            'var(--radix-popper-transform-origin)',\n        }}\n      />\n    );\n  }\n);\n\nContextMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'ContextMenuGroup';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface ContextMenuGroupProps extends MenuGroupProps {}\n\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  (props: ScopedProps<ContextMenuGroupProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'ContextMenuLabel';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface ContextMenuLabelProps extends MenuLabelProps {}\n\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  (props: ScopedProps<ContextMenuLabelProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'ContextMenuItem';\n\ntype ContextMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface ContextMenuItemProps extends MenuItemProps {}\n\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props: ScopedProps<ContextMenuItemProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'ContextMenuCheckboxItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props: ScopedProps<ContextMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'ContextMenuRadioGroup';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>((props: ScopedProps<ContextMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'ContextMenuRadioItem';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props: ScopedProps<ContextMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ContextMenuItemIndicator';\n\ntype ContextMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst ContextMenuItemIndicator = React.forwardRef<\n  ContextMenuItemIndicatorElement,\n  ContextMenuItemIndicatorProps\n>((props: ScopedProps<ContextMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nContextMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'ContextMenuSeparator';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>((props: ScopedProps<ContextMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nContextMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'ContextMenuArrow';\n\ntype ContextMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface ContextMenuArrowProps extends MenuArrowProps {}\n\nconst ContextMenuArrow = React.forwardRef<ContextMenuArrowElement, ContextMenuArrowProps>(\n  (props: ScopedProps<ContextMenuArrowProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'ContextMenuSub';\n\ninterface ContextMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props: ScopedProps<ContextMenuSubProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, open: openProp, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\nContextMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'ContextMenuSubTrigger';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props: ScopedProps<ContextMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'ContextMenuSubContent';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps extends MenuSubContentProps {}\n\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props: ScopedProps<ContextMenuSubContentProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom property\n        ['--radix-context-menu-content-transform-origin' as any]:\n          'var(--radix-popper-transform-origin)',\n      }}\n    />\n  );\n});\n\nContextMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction whenTouchOrPen<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType !== 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = ContextMenu;\nconst Trigger = ContextMenuTrigger;\nconst Portal = ContextMenuPortal;\nconst Content = ContextMenuContent;\nconst Group = ContextMenuGroup;\nconst Label = ContextMenuLabel;\nconst Item = ContextMenuItem;\nconst CheckboxItem = ContextMenuCheckboxItem;\nconst RadioGroup = ContextMenuRadioGroup;\nconst RadioItem = ContextMenuRadioItem;\nconst ItemIndicator = ContextMenuItemIndicator;\nconst Separator = ContextMenuSeparator;\nconst Arrow = ContextMenuArrow;\nconst Sub = ContextMenuSub;\nconst SubTrigger = ContextMenuSubTrigger;\nconst SubContent = ContextMenuSubContent;\n\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n};\n"],
  "mappings": "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",
  "names": ["composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "handleEvent", "event", "defaultPrevented", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "NODES", "Primitive", "reduce", "primitive", "node", "Node", "React", "props", "forwardedRef", "primitiveProps", "Comp", "asChild", "Slot", "window", "Symbol", "for", "$4q5Fq$createElement", "displayName", "dispatchDiscreteCustomEvent", "target", "event", "ReactDOM", "dispatchEvent", "createCollection", "name", "PROVIDER_NAME", "createCollectionContext", "createCollectionScope", "createContextScope", "CollectionProviderImpl", "useCollectionContext", "collectionRef", "current", "itemMap", "Map", "CollectionProvider", "props", "children", "ref", "React", "useRef", "$6vYhU$react", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardRef", "forwardedRef", "context", "scope", "composedRefs", "useComposedRefs", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useEffect", "set", "delete", "useCollection", "getItems", "useCallback", "collectionNode", "orderedNodes", "Array", "from", "querySelectorAll", "items", "values", "orderedItems", "sort", "a", "b", "indexOf", "Provider", "Slot", "ItemSlot", "DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext", "useCallbackRef", "callback", "callbackRef", "React", "current", "args", "useEscapeKeydown", "onEscapeKeyDownProp", "onEscapeKeyDown", "useCallbackRef", "React", "handleKeyDown", "event", "key", "document", "addEventListener", "removeEventListener", "DISMISSABLE_LAYER_NAME", "CONTEXT_UPDATE", "POINTER_DOWN_OUTSIDE", "FOCUS_OUTSIDE", "originalBodyPointerEvents", "DismissableLayerContext", "React", "layers", "Set", "layersWithOutsidePointerEventsDisabled", "branches", "DismissableLayer", "props", "forwardedRef", "layerProps", "context", "node", "setNode", "force", "composedRefs", "useComposedRefs", "Array", "from", "highestLayerWithOutsidePointerEventsDisabled", "slice", "highestLayerWithOutsidePointerEventsDisabledIndex", "indexOf", "index", "isBodyPointerEventsDisabled", "size", "isPointerEventsEnabled", "pointerDownOutside", "usePointerDownOutside", "event", "target", "isPointerDownOnBranch", "some", "branch", "contains", "onPointerDownOutside", "onInteractOutside", "defaultPrevented", "onDismiss", "focusOutside", "useFocusOutside", "isFocusInBranch", "onFocusOutside", "useEscapeKeydown", "isHighestLayer", "onEscapeKeyDown", "preventDefault", "disableOutsidePointerEvents", "document", "body", "style", "pointerEvents", "add", "dispatchUpdate", "delete", "handleUpdate", "addEventListener", "removeEventListener", "$kqwpH$createElement", "undefined", "composeEventHandlers", "onFocusCapture", "onBlurCapture", "onPointerDownCapture", "BRANCH_NAME", "DismissableLayerBranch", "ref", "current", "handlePointerDownOutside", "useCallbackRef", "isPointerInsideReactTreeRef", "handleClickRef", "handlePointerDown", "handleAndDispatchPointerDownOutsideEvent", "handleAndDispatchCustomEvent", "eventDetail", "discrete", "originalEvent", "pointerType", "once", "timerId", "window", "setTimeout", "clearTimeout", "handleFocusOutside", "isFocusInsideReactTreeRef", "handleFocus", "CustomEvent", "dispatchEvent", "name", "handler", "detail", "bubbles", "cancelable", "dispatchDiscreteCustomEvent", "count", "useFocusGuards", "React", "edgeGuards", "document", "querySelectorAll", "body", "insertAdjacentElement", "createFocusGuard", "count", "forEach", "node", "remove", "element", "createElement", "setAttribute", "tabIndex", "style", "cssText", "AUTOFOCUS_ON_MOUNT", "AUTOFOCUS_ON_UNMOUNT", "EVENT_OPTIONS", "bubbles", "cancelable", "FOCUS_SCOPE_NAME", "FocusScope", "React", "props", "forwardedRef", "onMountAutoFocus", "onMountAutoFocusProp", "onUnmountAutoFocus", "onUnmountAutoFocusProp", "scopeProps", "container", "setContainer", "useCallbackRef", "lastFocusedElementRef", "composedRefs", "useComposedRefs", "node", "focusScope", "paused", "pause", "resume", "current", "trapped", "handleFocusIn", "event", "target", "contains", "focus", "select", "handleFocusOut", "relatedTarget", "document", "addEventListener", "removeEventListener", "focusScopesStack", "add", "previouslyFocusedElement", "activeElement", "hasFocusedCandidate", "mountEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "focusFirst", "removeLinks", "getTabbableCandidates", "setTimeout", "unmountEvent", "body", "remove", "handleKeyDown", "loop", "isTabKey", "key", "altKey", "ctrlKey", "metaKey", "focusedElement", "currentTarget", "first", "last", "getTabbableEdges", "hasTabbableElementsInside", "preventDefault", "shiftKey", "$45QHv$createElement", "candidates", "candidate", "findVisible", "reverse", "nodes", "walker", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "tagName", "type", "disabled", "hidden", "FILTER_SKIP", "tabIndex", "FILTER_ACCEPT", "nextNode", "push", "currentNode", "elements", "element", "isHidden", "upTo", "getComputedStyle", "visibility", "undefined", "display", "parentElement", "isSelectableInput", "HTMLInputElement", "preventScroll", "createFocusScopesStack", "stack", "activeFocusScope", "arrayRemove", "unshift", "array", "item", "updatedArray", "index", "indexOf", "splice", "items", "filter", "useLayoutEffect", "Boolean", "globalThis", "document", "React", "useReactId", "React", "toString", "undefined", "count", "useId", "deterministicId", "id", "setId", "useState", "useLayoutEffect", "reactId", "String", "platform", "min", "max", "offset", "platform", "side", "placement", "overflow", "x", "y", "min", "max", "offset", "min", "max", "window", "clippingAncestors", "computePosition", "import_react", "computePosition", "data", "arrow", "NAME", "Arrow", "React", "props", "forwardedRef", "arrowProps", "$jbnEx$createElement", "asChild", "children", "Root", "useSize", "element", "size", "setSize", "React", "undefined", "useLayoutEffect", "width", "offsetWidth", "height", "offsetHeight", "resizeObserver", "ResizeObserver", "entries", "Array", "isArray", "length", "entry", "borderSizeEntry", "borderSize", "observe", "box", "unobserve", "POPPER_NAME", "createPopperContext", "createPopperScope", "createContextScope", "PopperProvider", "usePopperContext", "Popper", "props", "children", "anchor", "setAnchor", "React", "$kY93V$createElement", "__scopePopper", "ANCHOR_NAME", "PopperAnchor", "forwardedRef", "anchorProps", "context", "ref", "composedRefs", "useComposedRefs", "onAnchorChange", "virtualRef", "current", "CONTENT_NAME", "PopperContentProvider", "useContentContext", "PositionContextProvider", "usePositionContext", "hasParent", "positionUpdateFns", "Set", "PopperContent", "collisionPadding", "collisionPaddingProp", "contentProps", "content", "setContent", "node", "arrow", "setArrow", "arrowSize", "useSize", "arrowWidth", "width", "arrowHeight", "height", "desiredPlacement", "side", "align", "top", "right", "bottom", "left", "boundary", "Array", "isArray", "collisionBoundary", "hasExplicitBoundaries", "length", "detectOverflowOptions", "padding", "filter", "isNotNull", "altBoundary", "update", "useFloating", "strategy", "placement", "whileElementsMounted", "autoUpdate", "middleware", "offset", "mainAxis", "sideOffset", "alignmentAxis", "alignOffset", "avoidCollisions", "shift", "crossAxis", "limiter", "sticky", "limitShift", "undefined", "floatingUIarrow", "element", "arrowPadding", "flip", "transformOrigin", "hideWhenDetached", "hide", "isDefined", "useLayoutEffect", "reference", "isPlaced", "x", "y", "placedSide", "placedAlign", "getSideAndAlignFromPlacement", "arrowX", "middlewareData", "arrowY", "cannotCenterArrow", "centerOffset", "contentZIndex", "setContentZIndex", "window", "getComputedStyle", "zIndex", "isRoot", "add", "delete", "from", "reverse", "forEach", "fn", "requestAnimationFrame", "commonProps", "style", "animation", "opacity", "referenceHidden", "floating", "position", "transform", "Math", "round", "minWidth", "join", "ARROW_NAME", "OPPOSITE_SIDE", "PopperArrow", "arrowProps", "contentContext", "baseSide", "onArrowChange", "visibility", "shouldHideArrow", "display", "value", "options", "name", "data", "isArrowHidden", "noArrowAlign", "start", "center", "end", "arrowXCenter", "arrowYCenter", "rects", "split", "Root", "Anchor", "Content", "Arrow", "PORTAL_NAME", "Portal", "React", "props", "forwardedRef", "globalThis", "document", "body", "portalProps", "container", "ReactDOM", "createPortal", "$7SXl2$createElement", "useStateMachine", "initialState", "machine", "React", "state", "event", "nextState", "Presence", "props", "children", "presence", "usePresence", "present", "child", "isPresent", "only", "ref", "useComposedRefs", "forceMount", "displayName", "node", "setNode", "stylesRef", "prevPresentRef", "prevAnimationNameRef", "send", "mounted", "UNMOUNT", "ANIMATION_OUT", "unmountSuspended", "MOUNT", "ANIMATION_END", "unmounted", "currentAnimationName", "getAnimationName", "current", "useLayoutEffect", "styles", "wasPresent", "hasPresentChanged", "prevAnimationName", "display", "isAnimating", "handleAnimationEnd", "isCurrentAnimation", "includes", "animationName", "target", "ReactDOM", "handleAnimationStart", "addEventListener", "removeEventListener", "getComputedStyle", "useControllableState", "onChange", "uncontrolledProp", "setUncontrolledProp", "useUncontrolledState", "isControlled", "prop", "undefined", "value", "handleChange", "useCallbackRef", "setValue", "React", "nextValue", "setter", "uncontrolledState", "defaultProp", "prevValueRef", "current", "ENTRY_FOCUS", "EVENT_OPTIONS", "bubbles", "cancelable", "GROUP_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createRovingFocusGroupContext", "createRovingFocusGroupScope", "createContextScope", "RovingFocusProvider", "useRovingFocusContext", "RovingFocusGroup", "React", "props", "forwardedRef", "$98Iye$createElement", "__scopeRovingFocusGroup", "RovingFocusGroupImpl", "currentTabStopId", "currentTabStopIdProp", "groupProps", "ref", "composedRefs", "useComposedRefs", "direction", "useDirection", "dir", "setCurrentTabStopId", "useControllableState", "prop", "defaultProp", "defaultCurrentTabStopId", "onChange", "onCurrentTabStopIdChange", "isTabbingBackOut", "setIsTabbingBackOut", "handleEntryFocus", "useCallbackRef", "onEntryFocus", "getItems", "isClickFocusRef", "node", "current", "addEventListener", "removeEventListener", "tabStopId", "orientation", "outline", "style", "composeEventHandlers", "onMouseDown", "onFocus", "event", "isKeyboardFocus", "target", "currentTarget", "entryFocusEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "items", "filter", "item", "focusable", "activeItem", "find", "active", "currentItem", "id", "candidateItems", "Boolean", "candidateNodes", "map", "focusFirst", "onBlur", "ITEM_NAME", "RovingFocusGroupItem", "itemProps", "useId", "context", "isCurrentTabStop", "preventDefault", "onItemFocus", "onKeyDown", "key", "shiftKey", "onItemShiftTab", "focusIntent", "getFocusIntent", "undefined", "reverse", "currentIndex", "indexOf", "loop", "wrapArray", "slice", "setTimeout", "MAP_KEY_TO_FOCUS_INTENT", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "PageUp", "Home", "PageDown", "End", "getDirectionAwareKey", "includes", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "array", "startIndex", "_", "index", "length", "Root", "Item", "React", "React", "import_react", "React", "import_react", "cbs", "React", "import_react", "React", "SideCar", "React", "React", "React", "Style", "SELECTION_KEYS", "FIRST_KEYS", "LAST_KEYS", "FIRST_LAST_KEYS", "SUB_OPEN_KEYS", "ltr", "rtl", "SUB_CLOSE_KEYS", "MENU_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createMenuContext", "createMenuScope", "createContextScope", "createPopperScope", "createRovingFocusGroupScope", "usePopperScope", "useRovingFocusGroupScope", "MenuProvider", "useMenuContext", "MenuRootProvider", "useMenuRootContext", "Menu", "props", "modal", "popperScope", "__scopeMenu", "content", "setContent", "React", "isUsingKeyboardRef", "handleOpenChange", "useCallbackRef", "onOpenChange", "direction", "useDirection", "dir", "handleKeyDown", "current", "document", "addEventListener", "handlePointer", "capture", "once", "removeEventListener", "$epM9y$createElement", "children", "ANCHOR_NAME", "MenuAnchor", "forwardedRef", "anchorProps", "PORTAL_NAME", "PortalProvider", "usePortalContext", "forceMount", "undefined", "MenuPortal", "container", "context", "open", "CONTENT_NAME", "MenuContentProvider", "useMenuContentContext", "MenuContent", "portalContext", "contentProps", "rootContext", "MenuRootContentModal", "ref", "composedRefs", "useComposedRefs", "hideOthers", "composeEventHandlers", "onFocusOutside", "event", "preventDefault", "checkForDefaultPrevented", "MenuRootContentNonModal", "MenuContentImpl", "rovingFocusGroupScope", "getItems", "currentItemId", "setCurrentItemId", "contentRef", "onContentChange", "timerRef", "searchRef", "pointerGraceTimerRef", "pointerGraceIntentRef", "pointerDirRef", "lastPointerXRef", "ScrollLockWrapper", "disableOutsideScroll", "RemoveScroll", "scrollLockWrapperProps", "as", "Slot", "allowPinchZoom", "handleTypeaheadSearch", "key", "search", "items", "filter", "item", "disabled", "currentItem", "activeElement", "currentMatch", "find", "textValue", "values", "map", "nextMatch", "getNextMatch", "newItem", "updateSearch", "value", "window", "clearTimeout", "setTimeout", "focus", "useFocusGuards", "isPointerMovingToSubmenu", "isMovingTowards", "side", "isPointerInGraceArea", "area", "intent", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus", "getOpenState", "outline", "style", "onKeyDown", "target", "isKeyDownInside", "closest", "currentTarget", "isModifierKey", "ctrlKey", "altKey", "metaKey", "isCharacterKey", "length", "includes", "candidateNodes", "reverse", "focusFirst", "onBlur", "contains", "onPointerMove", "whenMouse", "pointerXHasChanged", "clientX", "newDir", "GROUP_NAME", "MenuGroup", "groupProps", "LABEL_NAME", "MenuLabel", "labelProps", "ITEM_NAME", "ITEM_SELECT", "MenuItem", "itemProps", "contentContext", "isPointerDownRef", "handleSelect", "menuItem", "itemSelectEvent", "CustomEvent", "bubbles", "cancelable", "onSelect", "dispatchDiscreteCustomEvent", "defaultPrevented", "onClose", "onClick", "onPointerDown", "onPointerUp", "click", "isTypingAhead", "MenuItemImpl", "isFocused", "setIsFocused", "textContent", "setTextContent", "trim", "onItemLeave", "onItemEnter", "onPointerLeave", "onFocus", "CHECKBOX_ITEM_NAME", "MenuCheckboxItem", "checkboxItemProps", "checked", "getCheckedState", "onCheckedChange", "RADIO_GROUP_NAME", "RadioGroupProvider", "useRadioGroupContext", "onValueChange", "MenuRadioGroup", "handleValueChange", "RADIO_ITEM_NAME", "MenuRadioItem", "radioItemProps", "ITEM_INDICATOR_NAME", "ItemIndicatorProvider", "useItemIndicatorContext", "MenuItemIndicator", "itemIndicatorProps", "indicatorContext", "SEPARATOR_NAME", "MenuSeparator", "separatorProps", "ARROW_NAME", "MenuArrow", "arrowProps", "SUB_NAME", "MenuSubProvider", "useMenuSubContext", "MenuSub", "parentMenuContext", "trigger", "setTrigger", "useId", "SUB_TRIGGER_NAME", "MenuSubTrigger", "subContext", "openTimerRef", "onPointerGraceIntentChange", "scope", "clearOpenTimer", "pointerGraceTimer", "triggerId", "contentId", "composeRefs", "onTriggerChange", "contentRect", "getBoundingClientRect", "dataset", "rightSide", "bleed", "contentNearEdge", "contentFarEdge", "x", "y", "clientY", "top", "bottom", "onTriggerLeave", "SUB_CONTENT_NAME", "MenuSubContent", "subContentProps", "onEscapeKeyDown", "isCloseKey", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "candidate", "wrapArray", "array", "startIndex", "_", "index", "isRepeated", "Array", "from", "every", "char", "normalizedSearch", "currentMatchIndex", "indexOf", "wrappedValues", "Math", "max", "excludeCurrentMatch", "v", "toLowerCase", "startsWith", "isPointInPolygon", "point", "polygon", "inside", "i", "j", "xi", "yi", "xj", "yj", "intersect", "cursorPos", "handler", "pointerType", "Root", "Anchor", "Portal", "Content", "Group", "Label", "Item", "CheckboxItem", "RadioGroup", "RadioItem", "ItemIndicator", "Separator", "Arrow", "Sub", "SubTrigger", "SubContent", "CONTEXT_MENU_NAME", "createContextMenuContext", "createContextMenuScope", "createContextScope", "createMenuScope", "useMenuScope", "ContextMenuProvider", "useContextMenuContext", "ContextMenu", "props", "modal", "open", "setOpen", "React", "menuScope", "__scopeContextMenu", "handleOpenChangeProp", "useCallbackRef", "onOpenChange", "handleOpenChange", "$3TiJz$createElement", "children", "TRIGGER_NAME", "ContextMenuTrigger", "forwardedRef", "triggerProps", "context", "pointRef", "x", "y", "virtualRef", "getBoundingClientRect", "DOMRect", "fromRect", "width", "height", "current", "longPressTimerRef", "clearLongPress", "window", "clearTimeout", "handleOpen", "event", "clientX", "clientY", "$3TiJz$Fragment", "WebkitTouchCallout", "style", "composeEventHandlers", "onContextMenu", "preventDefault", "onPointerDown", "whenTouchOrPen", "setTimeout", "onPointerMove", "onPointerCancel", "onPointerUp", "PORTAL_NAME", "ContextMenuPortal", "portalProps", "CONTENT_NAME", "ContextMenuContent", "contentProps", "hasInteractedOutsideRef", "onCloseAutoFocus", "defaultPrevented", "onInteractOutside", "GROUP_NAME", "ContextMenuGroup", "groupProps", "LABEL_NAME", "ContextMenuLabel", "labelProps", "ITEM_NAME", "ContextMenuItem", "itemProps", "CHECKBOX_ITEM_NAME", "ContextMenuCheckboxItem", "checkboxItemProps", "RADIO_GROUP_NAME", "ContextMenuRadioGroup", "radioGroupProps", "RADIO_ITEM_NAME", "ContextMenuRadioItem", "radioItemProps", "INDICATOR_NAME", "ContextMenuItemIndicator", "itemIndicatorProps", "SEPARATOR_NAME", "ContextMenuSeparator", "separatorProps", "ARROW_NAME", "ContextMenuArrow", "arrowProps", "SUB_NAME", "ContextMenuSub", "openProp", "defaultOpen", "useControllableState", "prop", "defaultProp", "onChange", "SUB_TRIGGER_NAME", "ContextMenuSubTrigger", "triggerItemProps", "SUB_CONTENT_NAME", "ContextMenuSubContent", "subContentProps", "handler", "pointerType", "undefined", "Root", "Trigger", "Portal", "Content", "Group", "Label", "Item", "CheckboxItem", "RadioGroup", "RadioItem", "ItemIndicator", "Separator", "Arrow", "Sub", "SubTrigger", "SubContent"]
}
